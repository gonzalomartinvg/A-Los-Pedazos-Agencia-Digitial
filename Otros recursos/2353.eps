%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: !_shablon.eps
%%Creator: Adobe Illustrator(R) 19.1
%%For: Stacy
%%CreationDate: 10.12.15
%%BoundingBox: 0 0 375 400
%%HiResBoundingBox: 0 0 374.9099 399.9218
%%CropBox: 0 0 374.9099 399.9218
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.1.0 x29 R agm 4.7731 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c067 79.157747, 2015/03/30-23:40:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2015-12-10T18:30:27+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2015-12-10T18:30:27+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2015-12-10T18:30:24+02:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>240</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADwAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qkfnskeSPMJHX9GXn&#xA;/UO+KvKtG8k+TJNHsZJNA055Ht4md2tICSSgJJJTN7DDChsPk8Zl1eUTPrlzPUoz/Avkj/qXtM/6&#xA;Q7f/AJoyXgw/mj5MPzeb+fL5l3+BfJH/AFL2mf8ASHb/APNGPgw/mj5L+bzfz5fMpYum/lG1z9VW&#xA;10A3NePoCOyMlelONK5DhxXXp+xt49VV3kr/ADkxk8k+RY0aSTQdLRFFWdrS3AA8SSmT8GHcPk1D&#xA;VZj/ABy+ZS60038o7y4FtaWugXNwTQQxR2TvX/VUE5ARxHYcP2NssmqiLJyAf5yZ/wCBfJH/AFL2&#xA;mf8ASHb/APNGT8GH80fJq/N5v58vmUtudK/KW1uDbXNnoEFyDQwSR2aOD4cWAOQMcQNER+xtjk1R&#xA;Fg5CP85VvPL/AOWFikT3um6JapOKwtNBaRhwKbqWUcuo6YTDEOYj9jGObUS5SmfiUQnk/wDL+S2F&#xA;0miaS9syeos62tsYylK8gwWnGm9cPhY6uh8mJ1OcGuKd+8oK10n8prudLe0s9BuLiSvCGKKzd2oK&#xA;miqCTsMiI4jyEfsbJZNTEWTkA/zkRf8Alr8tdPRXv9K0azRzRGnt7WIMRvQF1FclLHjHMR+xjDPq&#xA;JfTKZ+JVbXyf+X93Alxa6JpNxbybxzRWts6MAabMqkHfEYsZ5AMZanPE0ZTB95VD5G8kAEny/pgA&#xA;6n6nb/8ANGHwYfzR8kfm838+XzKDsvL/AOWF9KYrLTdEupVHIxww2kjBRtWiqTTfIxhiPIR+xsnm&#xA;1MRcjMfGS6/8tflpp6B7/StGtEavFp7e1iBpuaF1GMseMcxEfJEM+on9Mpn3Er7Pyr+XV7GZbLR9&#xA;HuYgaF4ba1kWvhVVOEY8Z5CP2InqM8TUpTHxKhf6L+VenyCK/sNCtJTSiTxWcTGvTZwDvglDEOYj&#xA;9jKGXUyFxMz7uJFW/k7yBcwrPbaJpM8L7pLHa2zqfkyqRhGLGeQHyYS1OcGjKYPvKD/Q/wCVHr/V&#xA;/qWg/WOfp+j6Vnz51px40rWu1Mjw4rqo/Y2eJqqu8lf5yvfeWfy2sAhvtJ0a0ElRGZ7e1jDEdacl&#xA;FcMseMcxH7GMM+ol9Mpn3Er5fKX5eRWv1uXRtIjteIf6w1tbCPidweZWlDh8LHV1H7EDUZyaEp37&#xA;yo2WgflffuY7HTtEu5FrySCG0kIoaGoVTgjDEeQj9jKeXUx+ozHvMkb/AIF8kf8AUvaZ/wBIdv8A&#xA;80ZLwYfzR8mv83m/ny+Zd/gXyR/1L2mf9Idv/wA0Y+DD+aPkv5vN/Pl8yiPI+iaNpX5qW66XYW1g&#xA;suhXxlW2iSEOVvLKhbgFrSp65r9dARIoU73sfLOYlxEnlzL13MB3LsVdiqR+e/8AlB/MP/bMvP8A&#xA;qHfFWCaF/wAcTT/+YaH/AJNjOhh9IeFzfWfeUdk2p59+edzqkH5f3DWDOivNFHeslQfq7VDAkdmb&#xA;iD92YmsJGPZ2fZEYnOOLu2975+8uaLoGrBre81oaTqDNS3+swk2rg0pznVqxmtftJT3zVY4RlzNF&#xA;6bPlnDcR4o+R3+XX5sw/OXVLiwk0vyZaXDHS9IsoBKob++mK7O9Dv8NCo7VOZGrlVQHIBwey8Ylx&#xA;ZiPVKR+AS3zn+VGqeVfLljrc97HObh0jnt0UqYnkQutGJPMfDuaDfIZtKYRErbtL2jHNkMAOTIp/&#xA;zQ10/k7CguXGqvetpj3vI+r6EcYl58hvy4usfLr1PXfLjqZeD53Tijs+H5o7emuKvPl+1KvI/wCS&#xA;+peavL51r9Ix2SSs62kTRtIZCjFWLsGXgOQI6HK8OkM48V03avtSOGfBV96/83PLX+GtD8paM0gl&#xA;lt4LozyLXi0kkiO/GtPh5NQe2HVY+CMR70dm5/Fnkn3kM38xa/8Aoj8hdOVG43Go2VvYw/KVKyf8&#xA;klbMnJPhwDzFOvwYePWnujIn8fF4hpVzqGh6jpetpGRwlW5tmOwcQyUZa+FVIOa2JMSJPQZIxyRl&#xA;D4fN65/zkTdwXmk+Wby3bnb3PrzQuO6OkTKfpBzP15sRLpOxImMpg8xX6Wcfkp/5LLRv+jn/AKi5&#xA;cydH/dj8dXX9q/4xL4fcGY33+8Vx/wAYn/4icyDycGHMMa1Yabotp5D1OK1ih9Pyzf3NyYkWMyel&#xA;BYP8TACp67nNPo5VInyL1XakDPGI98gFZdPvNFGhwWlrY3PnXXbVtU1vXNTgNz9WhUp+4t4uSEAP&#xA;NwRQyiikn4shjhLNPctmfLDS4hQ25AJfqmma9aXV9rrjTYtYu4bXRtOl0y0a2DPd3axfWJ4y8vKT&#xA;nKlByIou3XMsYThjKV262Wrjq5wx1Quz8AnV7ZTaDrM3lnybZabbnT7SGbVtX1S3a8uby5uuZVXY&#xA;PGx2j5O7MftAKKDMXBgOWzbsdZrY6cRFXaFWOzTTvLvnLTrCLSJtWvZNJ8yabaAJayTo00HrqnQM&#xA;tzb0U9WV6Ek0yWlmYZOH4NfaOKOXBx9QLCzQ7jyXH5M8seXdd02Er5vk1Sx/SnGNZIZRcSCI8ivL&#xA;k7OFRuWzUzGn9Rdhi+ge4KGghrzznZ6Nr0UdzquiadrNpfiVFYPJH9TMVyqtXaaJlkB9yMyM+Xjh&#xA;E9d/0ODotN4OTIB9J4SPtU/y3sNP1KbRrXUoLe8ubfyvZXHlmwvfitZLsRsLhyh2Z4wIexKqSRh1&#xA;JNRHThCNBGPFkP8AFxn5IR/01q+u6Vpvmi3sNN1OzuEvjBJpos71jbAkJZ3KyTQzwepSpjavFaHv&#xA;h02KJkCD8GHaGoyQxyBjsdrBsfHuZ/m4eVdiqh5Z/wDJrWf/AGwr/wD6jLLNZ2hzD0XYf0z+H6Xq&#xA;Ga53rsVdiqR+e/8AlB/MP/bMvP8AqHfFWCaF/wAcTT/+YaH/AJNjOhh9IeFzfWfeUdk2pg/5vear&#xA;3y15YhvLa1t71Lm7S1u7a6QyRPBJFIzAgFepQDfMbVZTCNjfd2PZunGXJRJFCxXfs+cNdvdI1bUI&#xA;n0TR20x5fhe0jma5R5GO3pKUV1r/AC1PtTNRMiR9Ip6rDGUI+uXF51XzZX+ZnkfX9L03QtWuoWeM&#xA;6db21+4FTDPEOKpIRsPgKqD4g+2X6jDKIBPc4Wg1cJylEH+IkeYQvnD81tZ81eXrHRLm0iiFu6SS&#xA;zR8i8rohRaKdlryJI33yOXUmcREhnpuzoYZmYPNkd5+WOvxfk9A31Zzqkd6+pzWXE+qsEkYiK8ev&#xA;IKiuV6jfvlx00vB87txY6+B1R39PDw3580s8jfnVf+VfLo0U6al6sTu1rK0pj4CRuTKyhX5fESeo&#xA;yGHVmEeGrbdX2VHNk4+Ku9v82tfvPMGgeUNYvY0hubuC7aSOIMEHGZVHEMWO4WvXHVTMoxJ817Ow&#xA;jFPJAcgR9yX/AJia99Z0LyjosbVj0/S4ZpgD/u2dRQEeyIpH+tkNRO4xj3Bt0WGp5J/zpH7EH5k/&#xA;Lzznonl+11PVVH6NBVIIxLzMXrgv9jolT1p3yOTBOMbPJswa3FkmYx+r9Sp5i186p+XXlm2kblca&#xA;XPeWjVO5QCJ4j8grcR/q4ck+LHHytjgw8GeZ6SAP3p75M/PC58s+XLPRF0hLqO09T9+Zyhb1JWlP&#xA;w8GpTnTLMOs4IiNOPquyRlyGfFV+Xk+ib7/eK4/4xP8A8RObc8nl4cwxbU7nRtftfI2lWl9b3THy&#xA;zf2t4kMiStEZYLCOkiqTxOzbHwOafSRuRHeC9V2pPgxiXdIFF/pVtZh0W9tr2ws/OOh2j6Zruhar&#xA;cG09ZCYz60MpWQlecXONwjKVehIIyGOcsM9w258MNViFHbmCl2oXnmPU5dT0pJ9JuL7T47LUrKPS&#xA;7p7lUuILozJBPOyxAMxtl/YFK1zMGU54yFU6uWnho8kJ2Tub/HxTbU9SOt63L5j8pappKzX1vBba&#xA;xo2tXDWdzaXFuXCsyqsjCgk4upXfjVSa5h4c5xEinZ6vRw1Aib5dygk9jNY+XvJ2lX0esDSLuTVv&#xA;MWrW3xWouXaWb0I3FVZmubjlxrVVXffLNLAzycXxau0cscWDgHMih7kpgXQ9e8oeVfL7XkUlxy1d&#xA;bmCGVDPATNI0chUHkjK1GUkdaYMEBLIQfNOsynHgjIcxwsk0LUfKl9er5q1zVLXTfOWm6ddaFrVp&#xA;LLFD9YkQqyThXZTR1HNCAaq4H7OY04GJILn4sgnESHIsH0QXOsado+iu+jLHY6LpV5ZRancyWF08&#xA;kkLh5LO5jDsrRekteKbchuMzcmahGJFjhDqdPpOKU5xkYy45Dy59zJNVvrqby/oXljUdWg1zzamr&#xA;wX9u1rP9dexsIZA7m5uRHFyPo8o+TqpctT4qE5j4Ik5Bw97m6yYhglxn+GveWW5vXjHYqoeWf/Jr&#xA;Wf8A2wr/AP6jLLNZ2hzD0XYf0z+H6XqGa53rsVdiqTedYZp/JuvQQo0s0unXaRRICzMzQOFVVG5J&#xA;PQYq8o0nzXpsGl2cEttqayxQRpIv6L1I0ZUAIqLenXNzHV4wBv8Ae8pk7MzmRIj17x+tF/4x0j/l&#xA;n1P/ALhWpf8AZPkvzmPv+9h/JWo/m/aP1rZPNuiSI0clrqLowoyNpOpEEeBBt8H5vF3/AGFR2XqB&#xA;/D9o/WgrPUvJdlN61lo1zazdPVh0S+jan+stqDkRqMI5fd+xslodXIUQT/nD9aNfzfozoyPbakyM&#xA;CGU6TqRBB6gj6vkvzeLv+9rHZeo/m/aP1oG11HyVaT/WLXRbi3uP9/RaHfI+/wDlLag5EajCOX3f&#xA;sbJaHVyFGyP6w/WmH+MdI/5Z9T/7hWpf9k+T/OY+/wC9r/krUfzftH60umv/ACRPcG5m0SeW5J5G&#xA;d9DvmevjyNrXIHUYSb2+X7GwaHVgULr+sP1om48w+WbkILjTr2YRikYk0fUH4g+FbY06ZI6rEev2&#xA;MY9naoch/sh+tTfWfKLkF9Ku2KgKpOi35ICigA/0bsMH5nD3/Ykdn6ruP+mH60RP5q0G4iMU9nqE&#xA;sTU5RvpGospoaioNtTCdXiPX7CxHZmpBsR+0frQ/6Z8o+n6f6Ju/Try4foW/48qUrT6t1wfmcPf9&#xA;jL8hqu4/6YfrW/pXyd/1Z7n/ALgl9/2S4/mcP4CfyGr7j/ph+tG/4x0j/ln1L/uFal/2T5L85j7/&#xA;AL2v+S9R/N+0frQ9vr/le2kMltpt7BIRxLx6NqCGh7VW2GRGqxDkfsZS7O1R5i/84fravde8rXwV&#xA;b7TLy6C/ZE2jahIB8uVscZanCeZ+xMOz9VH6QR/nD9apa+ZfLtpEIbSwv7eIdI4tH1FF+5bYDCNV&#xA;iHI/Yxl2bqZGyL+I/Wo3useUb5xJe6TdXTqKB5tFv5CB4Va2OCWpwnn9zOGg1cfpBH+cP1oiHzVo&#xA;UESxQWeoRRL9mNNJ1FVHyAtqYRq8Q6/YWB7M1JNmP2j9alD5g8sQzGeHTr2OZq8pU0bUFY161YW1&#xA;d8A1WLv+xJ7O1RFEf7Ifran1zypcSmWfS7yWVqcpH0a/ZjQUFSbauJ1OE9fsSOz9UBQB/wBMP1t3&#xA;OveVrqBLe6028nt46cIZdG1B0WgoKK1sQKYnU4TsT9iI9n6qJsAg/wBYfrbs/MPlmxjMdlp17axk&#xA;1KQ6PqEak+NFthiNViHI/Ys+ztVLeQv/ADh+tEf4x0j/AJZ9T/7hWpf9k+S/OY+/72P8laj+b9o/&#xA;W7/GOkf8s+p/9wrUv+yfH85j7/vX+StR/N+0frRnka9XU/zLhvLa2vFtbfRbyGWe5s7q1QSSXVoy&#xA;IGuI4gSVjY0HhmDrMsZkcJdz2VpcmIS4xV13PWcwnauxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsWu/wAzvJlteT2n1q4uZrWQw3BsrG+v&#xA;I0kU0aMy20EsfJT9peVR3xVLJ/zn8ofWHs9Og1PVNSi4tLp8FhcQTIjCodzeraRqp7Vfftk4Y5S5&#xA;Bqy5oYxcjSO0T8zdD1HVY9Ju7W80XUrgkWdvqMcarcFRVhDNBJPCzAb8efL2w5MUocwjDqMeX6Db&#xA;LsrbnYq7FXYq7FUm8x+cfLXlxIW1m+S2e4JFtAFeWeUr19OGJXlenfipwgE8kGQAsr/L3mvy95it&#xA;5J9GvUu1gYJcIAySxMdwJYpAkiE9uSjEilBBFhNsCXYqkGv+d9H0TUYdOuIb26vp4WuEt7Cyub1x&#xA;ErBC7C3STiORpviqA/5WZpH/AFaNf/7gmpf9UMVd/wArM0j/AKtGv/8AcE1L/qhiqP0Dzvo+t6jN&#xA;p1vDe2t9BCtw9vf2VzZOYmYoHUXCR8hyFNsVT/FXYq7FXYq7FXYq7FXYq7FWLX/ne7GrXmmaJoF9&#xA;rsmnMkeoXFtJaQwxTOiyiHndTwc3EbqzcQaVHfFVL/GHnD/qRNT/AOkzSf8AssxVUsfPF0dWs9M1&#xA;vy/faFJqTNFp9xcPaTwyzIjSmIvazT8HMaMy8gAaHeuKsqxV2KvHvyc8j2Gq/ltouoXGqazHPcpM&#xA;8iW+q38EVfrEg+GKKVUWtKmg64pLzjS9I1K6vjNBrNxFcRQS3+oafLqMltJfyrezW8kJu3fl60SR&#xA;qiO9R8ADbGuZEpGMY8J5j9LhY8cck58cQalQsXtQa8x6fcQEalJq9zBYT2l9d6dpU9+b25tXsIll&#xA;t7m4YO6LM0pDKifZpSpNccczKxImqKM+KOPhMIgHiA2HfzfUOnS3E2n2stynp3MkSPNH/K7KCy/Q&#xA;cx3NRGKuxV5J5X/Mz8y/Ml01rbaToun3TRLdW1pf3d4kk1q4qs0Jjt5EkUVo3E1U7MBilk31n86P&#xA;+rf5b/6Tb7/skxQ8u832nmm/1jzZa6rcLpfnOWwgk0htKlZybFIyRFayzxxyAPcK4kKqpDEb9Mzt&#xA;IAYyA+p0/aUjHJAkXj8+V+ab/lal+PNXleOX1G1q38vBPNLOS8gJSD0hcuSayGdXK1PL7R6Vwauq&#xA;jf1Vuy7MviyEf3fF6e7rye35hO2dirEZP/Jtwf8AbAm/6jYsVY3+as6XHmnSNI1i5e28vT2k0yRC&#xA;VoIbq8SRR6czKV5COM8lQmjVJp8OZWlhCUvU6/tLLlhjvH37oj8nrki98xabYXL3flywkthYO0jT&#xA;pFcyI5ureKVix4IBE3Cvwlj8shqYxE6jybNBPJLEDk5p5H/5Nuf/ALYEP/UbLlDmMuxV2KsX/My9&#xA;v7TybdNY3L2dzcXFjZC6hNJY0vb2G1keNt+LhJm4nsd8VeNx+T/KEEPmW+1C0uLxNL1G/QH17mWd&#xA;obZzxX+8q7UHU9e5zZafFA4+KQt0Ou1WYZxCEquku8nWPkLXpWtbnSktbtgJbX0r2e4gnjaNJSsc&#xA;yuFaWBZVWZB9k/g6cYsm3DRRrjqcFET4o+4J3qvkHypaXuhfVrN4vrGrWVvMVuLirRSy8XWvqbVH&#xA;hh1WCEYWAx7N1uXJl4ZSsU9N8q2v6D87ax5atJ5pNGXT7LUrO2uJZJzbyTzXMMqRvKXf02+rq3Et&#xA;sa065rHoWa4qknnK4812/l+5l8q20F3rK09GG5bivEn4ioqis4H2VZ1B8cVYNb8W/KLzvPo1zqN1&#xA;5juLbUpNSa5hNtfrqv1BVCLBEFEbKixemI6ilCGbripeVtr351z6fYaTfC/FzptpqAttWtra9hk3&#xA;8v8Ar24kERPqOtw3p8mVjz6Dlir3K/FyNN8hC6eSS5F9aieSbl6jSfo645F+YDcietRXFWbYq7FW&#xA;A/kL/wCSk8vf8Ypv+omXFJYe35aed7LRpZtQsvL179TN1dkTmeaSQTSvcyAO0IEZJc/stmVDU1ED&#xA;hBp1uXQGczITlHi7kT5I/LJfMVto/mPWLbTtP0m4ht9RttI02Ec5hIqzRC7uGSMlV2JiRaE9WIGR&#xA;y5+LYABt0+j8M2ZSmfP9T2XMdzHYq7FXlEqeW/8AlU/lqXU2lj1WOCL/AA9JY0Oo/XmWiLZjqzN+&#xA;0p+Ar9v4cUoy283/AJpxaXHoN15cEnnV4lMWoqf9xBQrvcTTL9h4z8Lwruzbp8J2VSS20Hydq3kH&#xA;zLdajam787WNvPPr0+ooo1CDUI7dmRkK/wB3CKfuPSPplOld8QUEW9F8haDouj+WLBdLsobMXNvD&#xA;PcmJArSyvGpZ5G+07HxOKshxV2KsKvr6ys/zYtnu7iO3RtBmVWldUBP1yI0BYjFWLfmkX1nzBpwF&#xA;pD5h8u2tsz/UkvrCOL660lOc0VzPCJOMQomxAq2XYJwibkLcXV4ss41jlwoj8ppW0W71m2uootE0&#xA;Cb0JtNsJr6ymWO4JkFz6K2804SNh6bcagcq0G+DNKJlcRQZaaGSMKmeI97IbG+srz82Ll7S4juEX&#xA;QYVZonVwD9clNCVJypyGa4q7FWI/mr/yh5/7aej/APdWtcVDDNA/3u8x/wDbc1D/AJPHNzov7t5T&#xA;tf8AvvgGEedtNS0t7ux8uavp1ok08d1Ppc88cUtrdxsG+s2DFl9CZ1HB1NFYHxyjUYBxXAgFzdDr&#xA;ZcHBljKUe+r+bJlvrm/sPJl5dKqXU+q6W9wqMjqJDIOfFkLKRyrShyzUknFZ8nH7PgI6ogchbL/J&#xA;Wl3eled5NNvJVmurTyzpUU0qlmVmW7vgSCwDH6Rmpeneh4odirAPNmmeY/K9n5q80+XdUt4beS2m&#xA;1W80y9tGuQ1zbWoUvDKk9uY/Ujt0BDK4B3p2xSwRpNMgns7PV/OGqrrF7EsxQ6vd2/qMwqWWKKVI&#xA;41JB4qoA7DNqNNiFA83mjr9VK5RHpB7kDLf+Qbm3tr2bzhfywx3HG1mk1q+PC4VCCV5TVVgkh+Lw&#xA;PXfHwsFX+lP5nW3Vb/1Qzr8v/NA0rXr/AMsa3q8ssc5hm8uy6lIzyyiRSJoEuZP74o4BVWYvv3GY&#xA;epw8EtuTtez9Uc2O5fUOb07MZznhPki91bQfIsNhD50srG90oXEL+X7i3s0u450lcmFmurmAVYmo&#xA;ZqChB6YpR8nmzVrnyve3Wq+e9P05jDMkmnPBp087LxKgJ9UvLgMXrRQprXtir0nyBZXNj5D8t2V1&#xA;GYrq10uyhniYUZZI7dFZSD3BFMUJ9irsVdirynyb+X/n3QJ4b69j0nVtUtYBZ2FxLdXKx2tsNvTt&#xA;4hbEIXpWR6lmPfjtilmP1j8yf+WDRv8ApMuv+yXFDFPOnkfz95iV7q1h0jS9aa3kszqMN1cky2sy&#xA;lZLe4Q2tJIyGqK7q3xKR3UvRdHs5LLSbKzlIaS2t4oXZa8S0aBSRWm22KEXirsVeTfmanlo+dq6y&#xA;dGS4by9dDSH18QG0+uC4T0v7/bvvx3pXFLANC/wrJ5R1I33+EI9ZNxCNLFw3l36yI1Ci49Rooza8&#xA;OQPp/ByI3PUUVUtMbQra/hnvYfJl/aoSZbRrjy5EJBQinOO3DDffbFXpP5ev5Om/MKefy1baVao2&#xA;hQfXoNGe2lhjuGunLI0lqFRmoBvTcUxV6pih2KpP5u8vf4h8v3OlC4NpLKYpba6VQ/pT20yTwOUJ&#xA;AYLLEpK13G2KvOLHyJ+bVlLfuraDOb68nvXczXkfxztyYBBC9BXtyPzzLw6swjVOs1XZkc0+IkhW&#xA;fyV+aTsWe18uMx6sZrsk/fb5Z+ePcGgdjR/nSUrnyH+a1zNpzMugRJp95BeoqT3hqbd+QWnoDY5X&#xA;m1ZnGqcjS9mxxT4gSWc+WfL2s2+rahr+v3EE2sahFBarDZq629vbWxkeONDIebszzuzMaeAApmI7&#xA;JkuKuxVIfP8AZXV/5E8yWNpGZbq60u9gt4l3LSSW7qij3LHFXiklv+W2vPZate6rDy9CFZrNrxYY&#xA;5DAG9MTwFlPOFpGpWlDm4McUyJE/a8qMmpxCWOINX3Ib/CH5Wm2WA66CwqhuP0kvqtA0SwG2ZuX9&#xA;z6Uapx8B1yPgYaq/tbPz2r4r4Tyr6WXeWfLWkeftV1A6hK195S0l7eKxtIGC2dzchS8pkkT4pfRP&#xA;D4VfjXrXMbV5rPCD6XYdl6QQjxyHrPe9kzCdsg7rRNGu5fWu7C2uJiADJLEjtQdBVgTiqyHy9oEE&#xA;qTQ6baxSxkMkiQRqykdCCFqMVR+KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxVAT6BoNxK00+m2sszmryPDGzMfEkrU4qs/wx5b/AOrTZ/8ASPF/zTiqPhghgiWGCNYo&#xA;kHFI0AVVA7ADYYqvxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KvCfMflka3+Yvm2WaWOlvdWkUSzQ+txU6dbPRSXXiOTE08czNNphkBJLq9f2jLB&#xA;IAC7DHhomkSvKLK2utRjhkaF7mx0O7uoPUjPF1EsQdGKnY0OCWLEDXEUw1OpkARAUfNv/Dtv/wBW&#xA;fVP/AAnL/wD5pwcGH+cfkz8bVfzI/wCmVLTy5pM97FYzRyafdXAY20eoaPcWfrcBVxEZ/TDlRuQN&#xA;6ZPHgxTNCW7Tn1uoxR4pQFe96h+TNh+jrHzHYBw6W+scU4rwUBtOspKKlW47ue/XfMfNj4JGLnaT&#xA;OcuMTIq/1vQsqch2KsQ/MnzHqml6bZ6fo0iw61rdx9UtLllDi3RUaWe44nZjHGh4g7FitdssxY+O&#xA;Qi0anOMWMzPR47fadoh02912Ty9Nr+n2Enp3fmC+uka7nlEnpMbb1X9WT978C8eALbJXMuWTDA8P&#xA;Dfm62GDVZRxmfDfIfj9rMvye826us2m6TqMzXGma1aSXejNNI889rJCQZLJ5X+OQCNuSlt1KstSK&#xA;Zj5sVASHKTm6XUGRlCX1Q+3zev5Q5jsVdir5i8sWHk+40DTJr3RL25vGjQ6hObTULgyyicmZlliu&#xA;oko0Xwr8Gzb+2WDDMiwC0y1WKJoyAPvZJp2nflMljAmo+VNVnvlRRczQWuoxRs9PiKI1xIVHsWOH&#xA;wJ9xY/ncP8+PzRH1H8l/+pP1r/kTf/8AVbHwJ9xX87h/nx+aDvoPy4gv9Bfy/wCXtU0zU/03pSx3&#xA;dzHdxxBGvohIrNLIyfElRuMEsUgLILOGpxzNRkCfe99yttdiqV+ZvMNroGkSajcRyXBDxw21pAA0&#xA;0887iKGGMEgcndgNz7nbFXm3nDWvOOsa1pXlrWrA+X9MvILm9uBa3xme8W3MSC1MsSQNHxM3ORVJ&#xA;5Cg5UrmTpcQnOi4PaOolixXHnde5BW1pH5T17RL3QmktYr3ULbTr/TVd2t7iK6cRczExKiSGvqB1&#xA;oaAg1GZWrwREeIbOt7L1uSeTgkbBZ/5i/M3yhoOuafo99qljFc3U7w3glu4YmtFFs9wkk6M1VVyi&#xA;ovKm7D6dY9AyiGaGeFJoXWWGVQ8ciEMrKwqGUjYgjocVX4q7FXz5ZW2mt5Zu/MWtXupyNE97PdSR&#xA;6jfoSsVxKKLHHOiD4VAAAGbPFgx+HxSDz2p1mcag44S6gDYfqVPLNtoGvQ3DRjWLSe0dY57efVb8&#xA;sPUjWWMho7qRCGRweuSw4sOQWB97DV6nVYJASkN/IfqTaDytoNxEs1veahNC1eMker6iymhoaEXJ&#xA;HUZaNJiPT7S40u09SDRl9g/UjfKNgulfmRpVtaXN4be707UWuIbi9urpGaGS19M8biWUAr6jdPHM&#xA;LWYYwrhDtuytVky8XGbqu7zQOv6deal5n8+2VnfyabczXlmsd7CAXQ/oy06Vp16bEHwIy7RxJxkA&#xA;1u43auQQzQJHEK5fEsVEMKRsyearzyPrUFjbaV+j7eyu7i3T6vcSyTXEclJGkE9UdCsvisnL9nAn&#xA;ikDRDuceoxziCCFKKyt7S6u5dL/M+706G6eaZoYNOvt5Wso7eAsabiOWL1CKb9Nqk5Hgl3Nnix7x&#xA;80RpFjLLq+lIPM995wvI7qGe6v7q3uII7a2s4dQjXeYBecv16JaLUkoWOZOkxy8QGnA7SzwGGQsW&#xA;f1vWvyw/vfNf/bZT/ulWGR1f94fx0Z9l/wCLx+P3lm+YznuxV5/+bcZtj5b1s/3FhqQguieiRX8T&#xA;2yuT2pM8Y+nL9LLhyBwu0MZngkB7/luwWx0mXSZ7Hn5Wj1nUNEMg0LVlu0t4TEXeSBb6FqFmt2lP&#xA;FlV9/iHEnLsminxbcnGw9r4jAcRqXdSa+QdHuE876LYSuJptEsbzUtSnQER/WdRl9NQvgGLTlQew&#xA;x1Q4Ixh3L2dLxZzy9CaHw/Aey5hO2dirsVeK/l//AModpn/GNv8Ak42b3T/3YeM7Q/v5e9d+g9Z1&#xA;zzvNa6drE2mTWelx3NvGVE1pJI1w6MJ4DTkCopyVlYePbMXV5pQmKPR2XZmlx5cMuIfxc+vJdpfm&#xA;G5fXrzy3qlvHFrenoJLl7OQXNoyk8QRItGiY9fTlVWp4jfL9PqRk2rdwtd2ecG93E/Nf5m66H/23&#xA;dH/7qEOOs/uyy7J/vx8fuex5pXrHYqw781+A8os8byJqkd3aPofoqsjtqKzr9VQI5VWVpNn5GnCu&#xA;Kh5n+YUP5pa5r/l3SNYGnaTcRxz6jb3ulvNK8JQLDKztII229YKIlPFq1ZiFob9NjlKexpw9fmhj&#xA;xEyHEDtTFF81a9pXn6J47o+YrizkFlppuLMSGO8mk+rPJFbwT2MNPUb0PUlcHlUJWjZPVSJlV2A1&#xA;9nY4RgJcIiZefT4/N6p5L8z6f53162t/MWm/UPM2gSTXUUQQok37k2sqyxzK0iPEt0paMsftIysy&#xA;nMV2L1QAAUHTFDsVdirwCy1mz0f8vZby7tXvovVvI/qUaeoZjJdyqIytCOLV+InambjFMRwgnd5b&#xA;U4jk1ZANb8+7YJHoQ0lLeHSL3W7HTfL14TdarDpNhfwXILUDWSP6NGRhQNNUNQEAdMwjmnwmIFe4&#xA;O4GkxcYnKXEQOp+1OtX8w+RfLeoJfeT5nl0e8kVNS0GG1ukELEcfrVqHjVR29WPv9ob1qdNllA0Q&#xA;eFr7Q0sMwsEcY8+fky3RiD+Z+gEdDpmqkf8AIyyy7tD+H4/ocXsP+P8Azf0oPzH5I80y+dvMGpW9&#xA;jqc1lqM1vLayabqNnaIVjsoYG5x3Cu/LnE2/hTMGGWUeRdzl02PIbkLSr/DvmH9Kfov6h5j+u+h9&#xA;Z9P9MabT0ufCvL0qfa7ZP8zk72r+T8H80Ir/AAV5t/6tvmL/ALjOmf8AVPH8zk71/IYP5oQej6Fr&#xA;2safHqFhYeY5bWVpFRzrGmqSYpGjfZogdmQjH8zk71/k/B/ND0L8rfL+r6Lp+sDU4J7d77UfrUCX&#xA;dxFdXBiFnbQVklgAQ/HC1AB9mmVSkZGy5EMcYDhiKDNcizdirDfP2taTMkvk+fSr/W7jVbKWW4tN&#xA;NWAyQ2/IRrMzXEsCofUP7sgk8lJ7YrTzrTPN0+m6TNa+aYJrPX9NVFms5EX6xdLIeFvLDHGzq7Tm&#xA;i0RiA9Vrm4w6oGFy5h5bVdmzjl4YD0y5eX9if/l3q915fYv5n0HUtO1XzLfKlzqcy2xs45GBSztQ&#xA;0c7yhQoCKzRirtvTlmry5DORJej0+AYoCI6PWMrbnYq7FXz95K83eU7PyvYWt3rVhbXMKussEt1C&#xA;kiN6jbMrMCD883WDLAQAJDyeu02WWaREZEX3FbqWr+WLzXGv4fPFpp9pNaLZ3lvaXlvHLMiyNIB9&#xA;Y5841PLfhRj/ADZXlhjnIEyHzbtNl1GHGYxxysnnRRJ84/l55e0Ob9FX+mvHaxtJHY2t1bepKwFa&#xA;Cr/E7eJ3OXeLjhHYhxfy2fLP1iW/UgpRfP5s1bTdP/MaF4k8rWF1YXH6LN3DR4rW6WeWYsNvWMsa&#xA;QrH9rqKVzW59SZ8uT0Gi7PjhG+8r5/ZT6A8u6tPq+h2epz2E+mS3cYkawugBNFXoHA6Gm/j40OYr&#xA;sExxVLfMHlzSPMFgtjqsTzW6ypOgjllgdZYjVHWSB45FIPg2KvM7DRvyc1jzrd+XU+vTarYxqkcz&#xA;6rqpLszSmeFCbio9L6uC29DUeGESI5MZwEhuAWEX3lVfy/8AO5utQ0GbVNHgnEujzm7uooxwupL2&#xA;3kMyl4pJInmKPHc0rxDqWq2NllwjbyTryn5mlj/MKTzv5vtzoGl6jFcRWV5LHIlqZWS2RYfWlSN/&#xA;hhtOXNkVZGLcdkFQl7xDNDPCk0LrLDKoeORCGVlYVDKRsQR0OKF+KuxV8tajqmr+V/LVlet5omiG&#xA;oTXsttpVtpUFw0UUd68Tu00s8QI9Rx779Kb5kQ1U4igXDy9nYckjKQ3PmUcNb1ltMs79PON7KbuS&#xA;7tzaw6FaSTRz2MPrzRsou/i/dkENGWXxIyX5zJ3tX8k4O77SmvkNNa88S3kOiefpPUsYbS5nW40O&#xA;CP8Ad30ZkiK/6Q1acCG8D7b4/nMnev8AJWDu+0sq0Hyp5j0D80dC/TGvrrf1nTdU9Glmln6XpyWf&#xA;L7EknPnzHXpT3yrLmlP6nJ0+kx4b4BVvWMqch5XqX5KXt9rF9qU2sw3El3cXE0T3KasZYoZ5mlW3&#xA;BttWtYuEfLivGNenTFNqP/Kjbv8A6ulp/wABr3/edxW2T/l3+X0/lBr9fr6XFpdpAsFjAt4kMDRN&#xA;M0kii8vNQblL6w5cWUfCNq74oZnirsVdirALXQPzI07zFruq2g0a6fVrkNHPcyXSSpaQrwtoKJGy&#xA;gItWNDuzMe+KV15ov5g3uo2WpXml+Wp7/Ti5sLqR7tpITIAH4MYtqgYqs8x6L+Z+v6HeaPeQaEsF&#xA;5GU9RJrwPG4PKOVD6WzxuA6nxGKs00WLVItHsotWljn1SOCNb6eEERvMqgSOgIBozVOKEZirsVdi&#xA;rsVdiryqb8kNRl0a7tP8Y6gt7c3j3nqhE+qAvdG7+Kz5cXkEvxeqX5ggUIUccU29VxQ7FXYqhotM&#xA;sYdRudRjhC3t3HFDczitXjty5iU70+EzP9+KonFUq8zeW9P8xaTJpt80saMyyQ3Fu5jmhlQ1SWJx&#xA;0ZT9HY1GKpD+Wnk7XvKtpf2GoXkFzYtMH06K2DokYofUIieqw+o1GMcZKBq8aA8QqzPFXYq821H8&#xA;lor/AEwaRN5hupNHjmlmtbGaz0ycQmaRpG4SS2ryDdzvyrim1k/5JW1xbWtrcaz69vYo8VlFLpGh&#xA;SLDHLtIsYaxPEP8AtU698VTDTfyz1XSzK2mearmxaYRrMbbTtGhLrCvCINwslqET4Vr0GwxQmele&#xA;Sr+38wW2t6p5hvNZuLK3ntrSO4is4URbpomlP+jQQlifQXqcVZTirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVSzzP5gs/Lvl7UdcvAzW2nQPcSIg&#xA;qzcBUIvux2FcVYTpH5kefdV1WfS7fyjZx3dvaw3kqy6uwAjuHkjRarZOOQaFq029zlmXEYGi0afU&#xA;QzRMo8gaTv8ATX5of9Srpn/cZk/7IMrb1bRvNeuP5gj0LzDo8Wl3d1bS3dhLbXf1yGVLd40mQsYb&#xA;ZkdPXQ04kEHrtirKMVdiqVeY/MljoNpFPcxzXM91MttZWNqnqXFxMwLCONSVFeKsxLMAACSRirG2&#xA;/NMre3NkfKusi6s2RLmPlpfwNJGsqiv16hqjg7HLceCcxcQ42fWYsRqZo/Fd/wArPl/6lTWf+D0r&#xA;/svyz8pk7vuaf5U0/wDO+w/qQ+ofm/Bp9nLeXnljWYraEAyyV0xqAkDot8zdT2GRlpskRZDPH2hh&#xA;nIRjLc+R/Uyvy35jsPMGnm8s1liMUr291a3CenPBPEaPFKlTxZfYkEUIJByhzE0xVQvrlrWyuLlI&#xA;JLpoI3kW2gAMshVSQkYYqvJqUFSBiry28/NrXYriYTXOg6a0BpPYzSXt40BHVLm8tYvq8Lr+2PiC&#xA;+OKaZDqPmbz/AHnkObU9A0KL/EIdFhtWuoZ7eaE8WNxazoQsqMjfBz4mvbajKqsvnbzTpUf1nzJ5&#xA;WkttOADTXul3I1IQLSpaaIRW8/Ff2jGj0xQlfmr86tF0fUrO3sYRqVq9umoX1ykgSllIjuJLVSK3&#xA;BWON5X4/CqqQW5EDFNPRlZXUOhDKwqrDcEHoQcUN4qlvmLX7DQNIm1W/EhtoWijKQoZZGeeVYY0R&#xA;F3JaSRRirznzh+dkunGMadYyWCRRXNxqE+sWdwoWO3C/DFHGys7VffwxSxV/+ck5Ee49TVtHS3tp&#xA;Y4HuzZXxhZ5iOHBhKajgS/T7IJ7YoZH5e/OrUp7uKTUIYr7TpJLu0kTTLO6W7iurQQOweKZ2+Djc&#xA;Deny2xS9D8tecNN8wS3kFtBd2lzYel9Ztr2B7eQLOC0bBW6hgpxQnmKuxVKPNHmrSPLWnC+1J2/e&#xA;SLBaWsS857idzRIYY6jm7f2mgxV53D+a/wCYOpXVuNL8r2kNveXt1p1kt5esZJp7O2muJaNDG0QA&#xA;MBjqGZef7VPixTTI/Iv5q6b5lktrK9spdE1m6jkkt7G4YOs3oMUnWGUBeTwuhWRGVXWh+Gm+KGcY&#xA;q86/5yCFsfyo1r1xakcF9P62wWj8vh9Hxm/kGKhI/wAt7q1sNf1a7gjt2trXy3p8yR2DBrcrHPet&#xA;SBqCqmnwnMvWVxCv5rrey74JXd8Z58+Q5oFvO3n608vJ51m1tJ4xCl/caEIIFsjbOBIYIpAv1gSB&#xA;GoshkNWpUU2yZ0gGPiveraYdqE5/D4fTdeb0HWv/ACaHlX/tmaz/AMnLDMF3DLsVdirCvPt3FZeY&#xA;/Jl5KCYra+vppAu7cY9HvGNK03oMVYg+u28+peZdfjic28sdnfpCaepwbTIJQppUcqbZtNEagS85&#xA;2vDizRj3j9KvpHl/80tT0uwv4rjREg1OBLoSUuWNssqB1QKrFbg0YfEHQV7EZT+fl3By/wCRMVje&#xA;X2Md13VLzUPIGsG9jjjvbOaaxujAS0Ly2tz6LPETvwYpUV6dO2ZRyceEl18NOMOrEQbFvUfIf/HX&#xA;87f9t8/902xzTvUMuxV2KsJ1vylqEnmzSptOW5j0eQytqJttQks4rZgOYK2cQEc5uHJEnPl9HXFL&#xA;M4YYYYkhhRYoowFSNAFVQOgAGwxQwv8ANvzB5n0Xy4k+hW9w3qylL69s4Vubi2hCM3OOFvhPNlCc&#xA;2qEryIOKh57JF5n8931tp8TW0yR2M+l3Gp6fazwWkNreFFvJZJblIw0zxR8I7eHkFZizPRcUvd44&#xA;0jjWNBxRAFUeAAoMULsVYj+av/KHn/tp6P8A91a1xUPMfLOjaOPOWnz/AKOtnmu38wNdsYYmMxiu&#xA;CY/V5cBJxI25t9IzJyxAxxPvcDTzkc+QE7Dh+5j41LSgroNK0ELLQyqNB0CjcUaNeQ/Tm9EkZR7E&#xA;jvmM7CmSanp2jarpflya70yxkF5HrV5cKlnaQxS3POBTO0VvNfReoQN39VmPenTMrSRBlv3Ou7Tn&#xA;KOMGJI9QZL+SJqshPX9AeW/+oB8xXYl6nih2KvFPzL1/y6de84Nrtq19Lomii20S0ksbi7tluLiF&#xA;7mWaR0ilgjZj6KcnK8Qp7VxSkVxaflnp155Ls7CTXre3t55E1AQx+YIOVNOnHOGPgpDvJ9r0ADxL&#xA;V+HliqGvJ/y+0pvOT6La3dvf2i2et6BqEunalJdR3cUbMyS3FxC06RSSW/xGZghDvv8Aaoq+grXX&#xA;dLuLyOwW5j/STWy3jWIcGVYWIAdlG4XkaVxQw38/JTH+VGu/vDGHiCmkLT8gWHw/CD6df9+HZcVD&#xA;H/I2pPa67r2pKr3z23lmxnVBC1u8xjmvW4iBhyQvSnEjMzWfUP6rq+yhWOX9c9b6Dq80WDTbPR4N&#xA;Shvb641W0lGpjy81td/olplb1jZpamLisYPwx77Gh9sJ4PDriN/YiPjePxeGOG+e1++3veqyCT8y&#xA;/KUgUqH0vWG4sKMKvYGhHjmE7VmOKuxVhfn57WHX/Jd1fFE09NUuIrmWWnpD6xpt1DGrlvhpI7hB&#xA;XqTTFWPNbW9t5u8yW1vGsVvDLZxxRIAFVFsIFVVA2AAFM2ug+k+95rtv+8HuSG/0HzTZac+n+W9U&#xA;WPRhMl2mh3AkCBo39RreC4ieOSGCY/aXcD9mgNMGXQgm4mmem7ZMQI5BfmmHkb8r/JXmHywkgutZ&#xA;jsPUlgn0Ka8aNLV43o9qwhCcxHICVcmrAgknNfKcx6SXdxxY5HjABJ3tkOgWMnkHzIdJlllvNA80&#xA;XZlsdRuZHluIL8W6ILWeRyTIkkVt+5frVSrVJBytyHoWKHYqwbz5q1p5Y8yaH5t1CQxaPBBe6bqk&#xA;4BcRJdelPDIVUE09W1Eew6uMUsgv/Ovk3T7k2uoa9p1ndKFZoLi7gikAcBlJR3VhVTUYoWWnnvyP&#xA;eXMVraeYdMubqZgkMEV5bvI7HoqqrkknwGKsaittR1v83Z9QsdYuo9I8uWiWl5aRsDaTXlwWeSEr&#xA;ShaOPgzmtQSg7HFL0HFDsVYf+bDpH5MZ3YKi6lpDMzGgAGq2pJJOKh5Pp/me10rzTZS3dnftb2Uu&#xA;tRzz2tuZxS8nYwvHTmrgjetKZfkyAwiOotw8GCUc05HlKq+Cp+kPI3/Vw81f9wnTf+yDKHNXar5v&#xA;0U/oa10221i7g0621COW4u7FYZC120TJtDHBF+w3RBmRpsghKz3ODr8EssAI87BZh+SqmOW8t2K+&#xA;ta6L5et7hFYNwlisnR0JUkVVhQ5jucXqWKHYq8u/NJLzQH1jWI7B9S0PzLpw0nWokfh9WkAeOG7k&#xA;fi/GH0p3WVqfDRcUhg2leZ/OfmbV9DtJtWtbC78uW8zq9jGtyfrUSiyaR2m5Rus0Fx6iFKqVYHr0&#xA;yNNhGQkFwdfqzgiJAXZTCDTvNGseaPMXla68020Q8w6bZtf3dxbRrdSRF57doLWOKSBN40oxIb7X&#xA;THU4RjlQ7k6DVHPAyIrevuZBp2j2flD84dE0zTLaW8Os6XdDVtTnYyXDMjCUXEzgU+1CsQGyryAU&#xA;DpmO5rMPzS8u6j5i8g61pOmuy31xbP6ESlF9V1HIQsXBADkU6j5jFDz/AMj69qGmeZ73Ubzy95he&#xA;CfTLK0WSbTpTKZoZriR+fFUXYTLuu2ZGpyCcgR3ODoNPLFAiVfVe3wZ5/wArHt/+pe1//uGzZjuc&#xA;hNPu73zF580zVotKvtP07R9PvoZZ9QhNsZJr2W2KJGjHmeK2zFmpTcDFLOcUOxVQvrCx1C0ls7+2&#xA;iu7OccZradFkjdetGRwVI+eKsUl/Jr8q5H5N5XsAfBYgo+5aDFbWf8qV/Kn/AKlix/5Fn+uK2oJ5&#xA;PvvJd0175GsY5dJuCDqflj1BErOAFFxZvJ8EcvEAOjEI47qRUqVXTdO8yeZtft9b163l0fRdLf1N&#xA;H0KRozPLPxK/Wr0xNIg4ciI4gxofibemKs3xQ7FUu1zy5oGvWi2mtafb6jbI4kSK5jWVVcCnJQwN&#xA;DQ0qMVfPX5nT2Ef5r6t9S+qp5hWa3Z5b9447L6mLGDklx6gPIu20YT4huagVrl4CK2+rz5U63WA3&#xA;vfBXTnfl+nolenXVlP5/8vz6ktkmoS6pYHSYdNmimtYYvXX1In9MKfrFaVdtmH2KUOS1BBG9X0r8&#xA;c2GiiQQI8XD14hRJ6fD8F9P6XpGm6Vam1063S2gMkkzIneSVy8jsTuWZmJJOYTtUXirsVeOfnR5s&#xA;Nv5p0bQL2wtL/Qoof0pfWd7f2enxXcgkaOCJzeMivHEy+oyCvI8a7DdSGNf408g/+W58pf8AcX8u&#xA;f1xV3+NPIP8A5bnyl/3F/Ln9cVd/jTyD/wCW58pf9xfy5/XFVfyl53srX8xNHOgaDpei2WsEaZqt&#xA;hpeqaXdJL9qS3uPq9i3JXhPMF+NCrUP7OKvoHFDsVcQCCCKg7EHFXkH5ofl7+WOlzaNrl1pNnp8M&#xA;urQQ6rcrWCA28iSs/qqhWPd1WrUrXvilv8rfKn5Y6vZeZbG207T9VtLfU5YY7wKs4e1lAurYJKeR&#xA;Ho/WGjBU1BXxxVkvlnyLrmiec3v5NUOo6DFpz2WmpclnvIOc6S+i8hH76NQnwOx59jWgOKs5xQ7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUDc6Dod1O1xc6dbTzvTnLJDG7tQUFWYEmgFMVWxeXfL8Mq&#xA;TRaZaRyxsGjkWCNWVh0KkLUHFUwxV2KuxVSmtbWcgzQpKV+zzUNSvhUYqp/ozTf+WSH/AJFp/TFX&#xA;fozTf+WSH/kWn9MVd+jNN/5ZIf8AkWn9MVXR2NjE4kit4kcdHVFBFduoGKq+KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxVj3mTz95Y8u3cdnqM8rX0sfrLaWtvPdzCEHiZXS3SQqlduTZKMSeQYTyRj9&#xA;RA96baTq2m6vptvqWmXCXdhdLzguIzVWWtPvBFCDuDtkWaLxV2KuxV2KuxV2KuxV2KuxVD6hqFjp&#xA;tjPf386WtnbIZJ7iVgqIg6licVYvH+bnkCRFkj1GV43AZHWzvGVlO4IIhoQcVpP9E8w6Jrmmrqek&#xA;3sV5YMWHrxnYMn2lYGhVl7ht8VR8UsUsSSxOskUiho5FIZWVhUEEbEEYquxV2KuxVLv8R+Xv0r+i&#xA;P0pafpbr+j/Xi+sdK/3XLn09sVb1TzDoGktCmq6naae9weNut1PHCZG8EEjLyPyxVXv9U0zTrNr3&#xA;ULuGzs0AL3NxIkUQB6VdyFH34q3YahYahax3mn3MV5aSisVxA6yxsP8AJdCVOKpDr35keTNEnNpd&#xA;aik+ojYaZZhru7J6U9CAO6/NgBhESeTGUxEWTQeXanPp/nb8wbu41TR7i1t7bSbNbS2vWUSENc3R&#xA;MvCGRwnLpQmu2+bDS6fciYdL2jrvTE4pdSPuSrV7X8utPlgWPShfQFPrF9c2rPJHa2pcRfWZmD0C&#xA;eoabf5R/ZOW5PBiQK5uNg/N5BIiRHD9p7mVeTtF0rR/zM0hdKhFtFd6ZqRnVGYrJ6cloUJqSDTma&#xA;ZRrccY1Q73M7IzzycfGbqv0vYswHcuxV2KpD5t81foOG1gtbR9S1vUpDBpWmRsFaV1FXd3NRHFGv&#xA;xSOfsj3IxV5X5ovvNWmeebhrfT4Ne1i8022k1q3tJDbQ2kkTSiBUmn5cxKrH4TRtuVKNQZ2jnIXQ&#xA;t1Ha2LHIR4pcPwtV8s+a/M/lzyn5f1Czs47vy5cXN/d+b7mO3kebT5Gu2aaFYBJEyiEuwZyrbKWo&#xA;dgcOZJkbdphiBAAGxQe1QTwzwxzwOssMqh4pEIZWVhVWUjqCMizX4q7FWO/mF5hvfL/lC/1OxVGv&#xA;lMFvaepuizXc8dtG7juqNMGI7gYYizTGcuEE9zw7SfNHnc+ZPMdrHqepwat5fijuo7i/ulmtb4Nz&#xA;rzsl/cQQyemePp0YKa1GZ/5aJuNUY/a6f+UJjgmSDGZ5Vy+PUs08zf8AOQH6N0K11Cy8vzma8t1n&#xA;gGoSLaI/JQ1YY6PcSov+/PTWP/L3Ga93YCZ/k95q/MPzBfa5J5wihs/RSyay0yGP0/Q9dZJG9Tly&#xA;k5NH6bUZtq9FNRipemYodirBvzst4bn8ub62nXnDPd6ZFKlSOSPqVsrCoodwcUh5lJ52/JWJLg/4&#xA;Z1vjazfVmQXirIz1Kj04W1JZXB4mhVabHwOTGMkW1HNEGv0H7+SeeUfJnknzNaecdIkt57byxNda&#xA;dqdtbtcSI8LXOlQTtI7eo4LfvCX5My/OgyDanH5d635B8oWmoaMvnXTLjRYp4v0ILnVbaaZIBawr&#xA;KGPJQtbhZCFX4R2AxV6NpWs6Rq9oLzSb631C0LFBcWsqTx8l6rzjLLUYoRmKuxV8+/pvyp/yrtvK&#xA;n1Pl57F0dP8ArYjoP04ZaC+/SNPRr6v7z+850+Dj2xSynUNe8o+XPPHmn/GNuLy5vIILqyuvqxvP&#xA;9xqQLE1sURZfQUTpKx58VblWuKpTYy6fommfl/qnmWNbny9wv47C1BW7NtNeTCbTWEUfqNOYbMND&#xA;+7DcDuPHFWW/lfd6XqWuea9X0GIW3l+4uLeGG2CiIm9gjYXc7W+zQmQPEtHUMePKm+KsK0j9HeTd&#xA;K8wafJbiP/Dl1PGyxIolnhf9/ZnanJ3hmRKnq2bbS5QMV9zzHaOnlLUCI/i5MRvr68u/M/ma31jU&#xA;18oSalZWcVmNS4xzpbxySpKnB5Yt3YOaq32WBB3ByuOUZDLfhunJnpjhhj9HiGJJNd/TonOhaxpW&#xA;g299baR5q8pWlvqVPr0KWiFJQE4cWVtQI48SfhG25PUnKvysP54/Hxbv5Rzf6jL7f+JTP8qWsIfO&#xA;3l/TLbXrXXfqOnaqoltGQ+lE8lmYomCyzmihSFLNUge2R1NCMRxcVX+hs0Fmc5GBhxVz+PkHvOYj&#xA;s3Yq7FWCaFYeZJfzU1rUtXayaytrFLPRxDJynETzGZmMPImMmqpIT9oqvHbFKYa1+WXlnV9XuNWn&#xA;e+t727CC5azvrq1V/SUIhZIZEWoUU6ZOOSUeRIap4YT+qIPvCa+XfK+j+X9LbTNOjc20kkk0puJZ&#xA;Lh5JJjV2d5S7Ny9zkSb5swABQ5JX+WttJY+XH0pmVodLvby0siHWT/Q0uZPqoPEtTjCVWhodsCWV&#xA;YqhtTlv4dPuJdPt0u75I2a2tpJPRSSQD4VaTi/Gp70xV5Fcaje+ZueifmTrEvlQXbemNBjt47WCb&#xA;g3JQmpzG6Sc1UH906H/JxTTGrvybqet32oQaF5hiutDCeh5g81z2cdvGba3rWBrxJB9bKKWD+kka&#xA;jvINxmRLUzIpwodn4oyB7twOgZb+X/5f6bq99H5iuYZZdFjKPphvxW71CSLaO9uQQoSBKf6LbqAi&#xA;j4+INKY7msw/L8/WLrzXqZ3a91y5jDf5NhHFYAfQbZsUMuxV2KsH/OmVYvy8vJWDFY7zS2YIrO1B&#xA;qdsfhVQWY+wFcUh51P5e/Klrssuu+ZoJXE4gjXSJi0cdy7SSxxPJpTyhCWb9rLBmkGiWmgSSRz35&#xA;lS1KWwPkX8zRpDXC6Yr6RY27zxzW0zRR2VnbOrpMkMgqlQaqKg16HIDm3HYIzUNG0ry3obTfpfW7&#xA;ewso1jt7S31W/UHosUMMazAVY0VVGbaelxRFkPL4u0dTkkIgj5BOvyQsF0/zH5tt0WeL1o9LvJ4b&#xA;md7mRbm4SczF5XZizEqAzV3pmv1EBGVAU7zQ5pZMdyN7nd65lDmLZUZ4nRWKMykBx1BI6j5Yq8O1&#xA;/StV0DSIvy+1rzXp1p5fuNLMcd3JpErSMQ/Amq3bD1q/vef829MUrNV87Wmh6td6j5f85adKvmDU&#xA;bRbxLrTZp5oo/Rjti5mE8XNI1i5hOI+0d8VQ0mo6Foem2N/ofnSwm1XQrbVfqlu+mSvC7ahOLr07&#xA;aP1l9AqU9JTyf4TTptir0/yF5c1u0u7/AMxazqEN3fa/b2Jlgt7Q2axG3ST7QM05dyJgpbbZRihh&#xA;f5xaLax+aLG4m0+81Cy8yQrYXNnp/JZnvLCQXNo3JWi3MZlqeY2QeGX4MkRYl9JcPV4Jz4ZYyBOP&#xA;f580H5d8qeZ/LN3feYv0PoPl3Tbq3it5bfWbwlw0MksnryyRI8fNxLQ1kY/D1yOWcZH0ig26bFOE&#xA;anLikT+AiY/PvnK9kA0Hy9pOuW43lv7SK6SzRRuzfWbiKCKQBd/3RY5U5CFutH0fUdE8t+afOnnO&#xA;bRn1m2iltrWxjtrCOOO8NvcvCk0cTTqitHErSvJt/MvKhVZp+W2veYtRub23eSTV/KsCj9EeZrmM&#xA;W09yQ1DH6dB66qv/AB8BUDeB64qz3FChfJdPY3CWjiO7aJxbyN0WQqeBOx6Nir5q8vXnlqa68uad&#xA;pcJh89pqUCXF2VKzfWYZQdRaa8PwTq6LJyUO3OoFPDOySx+EAB6nU4ceoGoJkfRv16dNn0vaXlpe&#xA;Qie0njuIGJAliZXQlTQjkpI2IpmC7Zgv5oa7p2o+SfMNlpOpQXF1pnpNrdpbXMYuEtI5ka8iNGBj&#xA;ZoFdd/l1wxq9+TGYPCa59GF/ljd+Wr/8wbF/JkaWtrb2Ez62sUJtI5IHotspidYzIwl3DhTxFd98&#xA;y9VLGa4XW9mwzx4vEO3vt7nmG7R2KobU9NsNTsJ7C/gS4s7lDHNDIAyspHgcVfPs+ta/5it/Lf5a&#xA;aQqTajodU12GVC1qz6bd/V4xecSn7n04DMyg1dmjFN9lL1j/ABh5o0UcPNPl+Q2yD4tX0TnfW9B1&#xA;aS24rdxADwRx/lYoRP5W2tzB5C0hrqNorm7jkv54nBVle+me6YMDuDWbcYqyrFXYqlnmXy7pfmPQ&#xA;7vRNVjMljeKFlVWKsCrB0ZWHRldQwPiMVed+cPIFp5e0qbzdNr2rXuoaHbAW13MNLa6SJfh4i6ks&#xA;JJVADsSa+NeuKUr8z/4Ht/ya8023ljWRrTmdLrVbx7hbm6kuGuoQ8s/EL2QAUULQbYRzYy5JJPqf&#xA;5ez+YY9al1iR2jIlWxZpWtfrCJ6aXAjKmkix/CKbd6V3zcHJiMr4nlhh1Ax8Ah8etd3uZj+UGqWG&#xA;p+cfON3YzCe3MOlKJACBVVuajcDNfq5iU7DuuzMUoYqkKNvVcxnYOxV5n+aHmTWY9ZTQ7G6uLGyg&#xA;sG1PUJbAA3s4MhijghJDGMVRmdl+LoARvmRp8QmTfIOFrdTLGAI1cjW/IMBgu9D1TQtK1PXPM2qa&#xA;YLn0ry0g1HVGiIljCuHiMpXmFLDi6j3zLjgxGIJ2vvLrMms1QmYx9ddwtMbi812w1F49J8w6r9dt&#xA;4zNC95dNd278Y/UBlt5FYNbv9gyqwIbYUO+M9LDkOf4+xcXaWXaUqIv8fHy7ns/lnWDrXlvSdZMf&#xA;onU7O3vPRrXh68Syca+3Kmax6BR81eWYPMOnRWslzNYz21xDeWd9bcPWhmgaqunqLIm4qpqp2JxV&#xA;LtP/AC18qW12l/eQSa1qcf2dQ1aVr2ZT4xiUmOL/AJ5ouKsmnhSaCSBqhJEKHjsQGFNsVYXpP5Wa&#xA;fbNpUeqX8uuWGi2J07T9PvoLUwrETAQXCRKXZTaRlS3QivXFNs3AAAAFANgBih2KqGoWr3dhc2qS&#xA;mB7iJ4lmXcoXUqGG43Fa9cVeX2/5MeYo7DTtNfzLaDT9NltZYEh0po5V+qSLIhSQ3j8HPD7XE9Tm&#xA;RLUyMeHanCx6GEcniAni97Mbv8tPI9zeTXh0pLe5uCTcSWcktp6pb7TSC2eIOTXctvmO5qT6v+Tf&#xA;lqTSNSs9BSPR7vU3s3ublo2uUdbGcToksbSIXVzXnV6t3JoBhiaNomOIEd63Qvy28wWfmnTtd1PX&#xA;7e9GnJOiW9vp7WrOtxHwKtIbmf4QQGpx6jLsueWTm4um0UMN8N7vQMoct2KuxVL9N8vaLpt7qF9Y&#xA;2cdvearKJ9QnUfHLIqhFLE9gB0G1ST1JqqmGKuxV2KuxV2KrZYopYnilRZIpFKyRsAysrChBB2II&#xA;xViw/KzyJFo2qaTZaTDYQaxE8N7NbALOVck/DI3Ijgx5KPsg9sVtJZPyq1yW4065n823FzdaSAth&#xA;dXFnayzIFpQs5Uc223ZuuKbZH5R8nL5ffUbufULjVtW1aZZ7/ULriGbgvGONEjCokca14qB3xQyL&#xA;FXYqxvzd5GsPMctpefWp9N1aw5i01G0KcwklOcUiSK8ckbFQeLL1FRTJwmYmw15cMckeGQsIfy5+&#xA;XOkaU9zc38r65qV3GIZ7u+SIhYR/umGFEWOOOu5AFWP2idscmSUzZRhwQxCoigkzfkvp7IbA65qP&#xA;+HSOP6H5Qj91X/ef6z6f1j0afDx58qbcqZP8xPh4b2avyWLj4+H1PQoIIYIY4IEWKGJQkUaAKqqo&#xA;oqqBsABlLlL8VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVeKf8rN8wate39zFfalpthHdz21hb6fpC3itFbStD6kk8vLk7shJVRRem5yyOGZFg&#xA;FpnqcUDUpAH3r/8AGvmD/q/eYf8Awn7f/mnD4GTuLD87h/nR+bI/y38+6jquv6j5d1J57mS3to76&#xA;xvbqzNhPJEzmKVJIh8H7t+PFlpUHpUHISgY8xTdjywmLiQXouRZuxVBaxdXNtZLLblVlM9tHV09Q&#xA;cZbhI3+H1If2GNDy260anEqsF/5W75d9e4tV8wwTXNm7QXXo6NqUqpMiurAlHYf3nE9fsgivxBgp&#xA;pH+X/wAxdL8w6xJo+k67ay6nHE1w1pJpl7A4iDRjl+/ljB2Lf8ED0U8lVfWvPWmaFrEGj615i0+x&#xA;v7iJbiNJrSeOP0mkkjDNMZ/STkwVRyb9lv5hxUWm/wBa1hBZzfXbS6triWNC0Fs1GV1WrK5uWABY&#xA;OQaNsQKHiSyqdYq7FWM+fvM2o6FpdoNLgjn1XVLtbGx9fl6MbtFJO8soUhmVIoHPEEVNBUdcnjxm&#xA;cgA1Z8wxQMzyDANc82+eNE097/UvNdtFCuyqumIWdzuEjT1WZiabDM2ejjAWZOpw9qzyy4Yw39/7&#xA;Eu0781PzI065v7vW1hm03Sktbm/tJYYorg2d0GYyRvbSyokscaiT02rVSOhOYwxcUSR0dhPU8E4x&#xA;kN59z3bKHLdirsVYh+ZP5iW/kvTIpvqpvb65ErQW/IxosVunOeeWQLIVjjBFeKliSABvkoxJYTmI&#xA;jdguifm35483XS+XLGxtvLmsXDSqNUuPVl9IwIsrxCzlijb1Sjqw5tx4VIJIoEx2vosZgmur186l&#xA;p8VxHZTXkIvXA4wM6LI1e4Std8izeY+dvzI83+Q9Suob2O01+3vvVvdN4l7WWytxKkKQzLHFN6wL&#xA;yosbL8TMTUU3EoxtjOYjXeU2/LT81pPNd3NpeqaadK1eFJXRKuY5RbyCG4WkiRvHLDIyh42B6ggn&#xA;syjW6IzBJHUPQsizdirCvPfm3WrPUtP0Hy1YXOo65K8F/dRwCBUTTorlBcB5bl441aZA0ab1r4Yq&#xA;r/4w84f9SJqf/SZpP/ZZiqUz+fvM9h5o0+XXfL9/pHlm9C6f6sjWVwqX9xMqwSStazTOkZH7up25&#xA;MMUvRMUOxV4B5cv9Qt/K1pa6ZFHNq2p6vf2WnpMSIhLJf3Ll5CvxcI443c03NKZtMebw8AP45vOZ&#xA;9L42slHpsT8ghrXzbdw6cuqvqsk7xxvdT6NqNillJcWUNTPc6bLE8iS+kql2jLMeINePXKIa6YPq&#xA;5Obm7HxGPo2l+ObMvJ5B/N+Yg1B8vbH/AKPRh1/1D3MOxP7uX9b9D1bMF3LsVSvzL6f6MT1OPE3d&#xA;iPiKAEm8ioP3iyLuem1fAg0IVeF6deTx67dTWk195RvLGW9t5tSh0e/v21Ey3kkimSKKIwNHDG3F&#xA;Gc8+XSij4lKa/lnzP5iWsEWn3M8ljaapJd+Zp7W7tjqJupLQwvMbxElEqCMqy7oP2Ntgqmdr5Xg8&#xA;0rr/AJy/MKxn8tzIVtLGl08cltZWqkl+a8VcSyyvVXQq1NgRQmQkQdmuUBIbhf8Ak/o2nad5blvr&#xA;K4Nxp+q+YJW0yZ1hhD21uxtonESxrGrP6LP8CIxr2wE2WUY0KD13Al2KsI/M/wDvfKn/AG2X/wC6&#xA;Vf5k6T+8H46OB2p/i8vh94eP+YbDW/NH5gmO0tYZ9K0BFhWa7+K0W8mVZXd4geU5RGT93stftHjV&#xA;Wy8+OWWdD6Q63RajHpsPFL659PJqbU9Ju/y380R2a3huWspL26vNQjEct2LpH9O6FDQxyCIhKUoq&#xA;0oKYwlDwpCPRGXHlGphLJXqO1dPJ9MZq3onYq7FWCfmx5A1LzXp0EmkXEUOqWsVzbCO5/uZra9RU&#xA;njLcZODfu0ZG4kVG4ocnCZi15cQmBfQg/J435Q8mebdM8p6b5k07UodMgudQSDS0C/WZRJq8qaZL&#xA;PNLSJUMKsWj2ff7W1ACZ+nhHJEcVTMz9VUreYI9I0v8AMR/KKWFnNB+ktNsBp91Yx3U17FfoHnvL&#xA;jVXP1iO4DNVPiB6UB7Vtyb+Yfy88269/iWyt9Wjvo/LpOjQ214D6kunzRw6ivK7PqkzxeosYLR9F&#xA;3PI1E4Tq/Nqy4hKj1ibZB+Q/5f6jYWOn+ZtRljW3nsnfRrGM83SLUnS6klnk4R1kYIihd+IH2iej&#xA;KdgDoEQxcMjLrKvsexZBtdiryvzlfaVafmmDqN9qdijaHFwbSobqZmP1ubZ/q0M5A+dMUpN5Y806&#xA;Hcx6mdQ8w+ZmaLUbqG19G21KQC3R6RBuFq/F6faU0I7gYqlT+YNL1DyF5febWddu9auZNCkuYbq3&#xA;vvqbTNeWrTH1ZLdYCAeRQ+pQmnEnbFX0Fih2KvAvLWm3V55VtprGcW2p6fq19e6fcOvNFmi1C5FH&#xA;XYlHRmRqGtCc2uLF4mAD8c3m9Rqjh1kpcxtfyCGsfJd+dOOkyaZbWSTqYNS1mS9l1G8e0Ziz2tms&#xA;kECWsUm6tT9k9Cd8phoJX6js5WbtqHD6AeLzZj5Q/wDJwTf+A9/2OjBr/qHuT2J/dS/rfoeq5gu5&#xA;diqWeYmcadGU5cvrdkPg9WtDdxA/3JD0p1/Zp9r4a4q88/ML8wPM9xqV75M8s2lzpOuRenOms3P1&#xA;dYTbrRzJAjMzyqzgREhKCprQ5bhwmZoONqdVHDHikmegfnFaX+i6jqF9o17ZtpkkFmwQQzpdX07e&#xA;mLazeKR1kcS0U7/DUciN8rlEg0W+EhIAjkUZaec73zFo8jw+VJtQ0y5EtvcL9b0yWJgCY5YnpcMp&#xA;7qwwMkPoPmnSL0Wmhadpsuiy6XcWxXTxwMRtXMiLJC9m8kTx8kKtU0B+0OmKWf4odirGPzA8tanr&#xA;ul2baTNFFqul3iX9mtxyEMjLFJA8UjIGZQ8U7jkAaGm2Tx5DCQIac+EZYGB6vKX0j8zfK0Gr61c6&#xA;Rbto6fWb+ayjuozJzc+ox9TgzuewFB26DMuGtonbZ1uTskTiBfqFC/d5MkuvyRa98jabYLfNp/mK&#xA;HSbbTL+RGZ7W4SGNqwTRV4kB5WAlUcwOnhmHGZF11drPFGRBI5cnovljW21vQ7bUXgNrNJ6kdxbl&#xA;g/CaCRoZVDj7SiSNuLdxvQZFmmmKuxVplVlKsAVIoQdwQcVY9c+TvKS+WP8AB8UMen6ZdI6WtrAw&#xA;jdXDet6kNTXnG/7yu9DvirxbWXa188fUbrzHplzfm4gubrV5rq7gtFvtP9CO1+vWcQa3+sURTxEy&#xA;qeBrx2DGivEOT2ny35a0nSdKn0Oe6Gp3t/6t3rElwU9W6e5+CWV4hssbU4KBsFAXtgVONL0vT9K0&#xA;6203ToFtrG0jWK3gT7KIooAK7/fiqKxV2KsA1SDzDL+bEg0a9tLJxoMPqteWkt2GH1yXZRHc2nH7&#xA;zilJfKTeb9K0TzTqT65pdtY2Grarc38kulXMx/dSNJPIojv4yF2JVKMR0q2KsI0qfztrvlO10ZtT&#xA;u7LTtH0jSjbWiaWLTne2haURs96tw87RPbQ1eJlRv5BvXMwaUyB4rDq9X2kMcoiBjK+e/Ll3PYfI&#xA;Hn6y8xWkFjMLmLX7aygn1KC6tJrQl3HGR0EqIrL6oYfDtmLKJjzFOwhkjMXEg+5l+RZvDNM0HyPo&#xA;7X+neaZ9c0zU4r+9kRbefVUtZree6kmglt/qpaLiY5FDdDyBqK5MZZAUCWqenxyNmMSfcEJpEXko&#xA;31wNY1a/Sx3+qGzvfMbyn4tvUEiKv2fA9cPjT/nH5sfymL+ZH5BmH5b6BpI856nr2iLqMmirYQ2E&#xA;F7qcl07TzGZpZvQF4fV9NAEFacS1adDkZTMuZtthjjAVEAe56dkWTsVSvzLbzXGmIkUBuHW7spPS&#xA;VUc0ivIpGakhVfgClq1qKVG9MVYT5u8oT+afMFjq91FrlnbWdnJbfUbN7SB2aasxb11uOa/FAiMq&#xA;9W4b8eWSjMx5MJ44zFSFrdN8lT2fkn/C8sWq3Jgu5L7T9TK2KzQTi5S4iZU9Yo3GSViQRRgrigqo&#xA;IJtnEACgl2n/AJYvbwSGRNUjv1dJNNnsY7OztrVxLJI7i0S5eKUyMg9X1eQKMirQAhQlNPL/AJRv&#xA;7PU4b++gu7vUJJbZPXkgs4Le3tof3vGOKKeVgTJcNyclmqppRePJV6Tih2KuxVJPPGlXureTta02&#xA;xp9eurKeO0DUoZih9MGu1C1BiqXw/mNphs0kuNL1qG79MNLZjR9TkZZKfFGJEt2hbfbkH4nxpiqK&#xA;/L+w1Ky8o2MWpxfV9Ql9a6ubeoPpPdTvcGIkbEp6vE08MVZDirsVdiqQebPJWg+ZYFOoWiS31rHK&#xA;unXZLpJA8oHxRyRlXXdV6HFXydNbJY+bdNsdS0+QSWotYNSsHAe9M0cUqXMMMXqhpo7qR+bMsbc+&#xA;Va+OSJR4gf4QHBlCfBKP8ZJo7/Dfy/Q+l/yu/L3TvLeh6be3Vksfmh7FIdRu3d5pvi4u0Jkdm2Qq&#xA;F+HbbbbMZzmc4q7FXYqkmveSPKHmC4judb0e01G4hT04pbmJJGVKk8QWHSpriqRap+Sv5Z3umXln&#xA;H5fsbSS6hkhS7hgjEsJkQqJIyQaMlar74ptiOsrrHlXUb3TLia51SFdOgn0y5jsJWBnLXCSRE26y&#xA;L8IiiO5H2s2WDWbHiPuef1nZfqj4YNE+rf3ftZb+XnlG/s3g8zapfST6nqOm28M1q8KwCCv75k4j&#xA;4qq7kb5hZcspmy7fT6aGEVF//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:987f6413-9b44-4fb2-8abc-7280d3997bb0</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:987f6413-9b44-4fb2-8abc-7280d3997bb0</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:7e86dabd-0cfa-477f-937c-e409ce33c39e</stRef:instanceID>
            <stRef:documentID>xmp.did:7e86dabd-0cfa-477f-937c-e409ce33c39e</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7e86dabd-0cfa-477f-937c-e409ce33c39e</stEvt:instanceID>
                  <stEvt:when>2015-11-23T19:46:04+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:987f6413-9b44-4fb2-8abc-7280d3997bb0</stEvt:instanceID>
                  <stEvt:when>2015-12-10T18:30:27+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -399.922 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 399.922 li
374.91 399.922 li
374.91 0 li
cp
clp
344.321 47.8413 mo
24.6682 47.8413 li
24.6682 .74518 li
344.321 .74518 li
344.321 47.8413 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.348486 0 .00491341 0 cmyk
f
25.4134 47.0961 mo
343.575 47.0961 li
343.575 1.49038 li
25.4134 1.49038 li
25.4134 47.0961 li
cp
344.321 48.5865 mo
24.6682 48.5865 li
24.2566 48.5865 23.923 48.2528 23.923 47.8413 cv
23.923 .745191 li
23.923 .333589 24.2566 0 24.6682 0 cv
344.321 0 li
344.732 0 345.066 .333589 345.066 .745191 cv
345.066 47.8413 li
345.066 48.2528 344.732 48.5865 344.321 48.5865 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
76.3228 29.8351 mo
76.3228 31.3857 75.9294 32.7624 75.1428 33.9651 cv
74.3561 35.1681 73.2215 36.1028 71.7395 36.7698 cv
70.2573 37.4367 68.5186 37.7702 66.5236 37.7702 cv
64.8588 37.7702 63.4624 37.6532 62.3337 37.4196 cv
61.205 37.1861 60.0306 36.7783 58.8108 36.1969 cv
58.8108 30.1771 li
60.099 30.8385 61.4385 31.3545 62.8296 31.7248 cv
64.2205 32.0954 65.4975 32.2806 66.6604 32.2806 cv
67.6635 32.2806 68.3988 32.1069 68.8665 31.759 cv
69.3338 31.4114 69.5676 30.9638 69.5676 30.4165 cv
69.5676 30.0745 69.4736 29.7752 69.2855 29.5187 cv
69.0973 29.2622 68.7952 29.003 68.3791 28.7406 cv
67.9628 28.4785 66.8541 27.9427 65.0528 27.133 cv
63.4223 26.3921 62.1996 25.6738 61.3846 24.9782 cv
60.5693 24.283 59.9651 23.4848 59.5718 22.584 cv
59.1784 21.6835 58.9818 20.6173 58.9818 19.386 cv
58.9818 17.0832 59.8198 15.2875 61.4957 13.999 cv
63.1717 12.7108 65.4745 12.0666 68.4047 12.0666 cv
70.9927 12.0666 73.6319 12.6651 76.3228 13.8622 cv
74.2535 19.0782 li
71.9162 18.0067 69.8982 17.4707 68.1995 17.4707 cv
67.3214 17.4707 66.6831 17.6246 66.2841 17.9324 cv
65.8849 18.2402 65.6856 18.6224 65.6856 19.0782 cv
65.6856 19.5685 65.9392 20.0076 66.4467 20.395 cv
66.9538 20.7828 68.3304 21.4895 70.5766 22.5156 cv
72.7314 23.4848 74.2278 24.525 75.0658 25.6366 cv
75.9037 26.7482 76.3228 28.1479 76.3228 29.8351 cv
cp
f
59.556 35.72 mo
60.5673 36.1709 61.5506 36.4966 62.4847 36.6899 cv
63.5593 36.9122 64.9182 37.025 66.5236 37.025 cv
68.4032 37.025 70.0552 36.7105 71.4338 36.0902 cv
72.7774 35.4855 73.8155 34.6333 74.5191 33.5572 cv
75.2214 32.4834 75.5776 31.2311 75.5776 29.8351 cv
75.5776 28.3212 75.2052 27.0595 74.4708 26.0852 cv
73.7131 25.0802 72.3 24.1079 70.271 23.1952 cv
67.1782 21.7824 66.3491 21.2584 65.9941 20.987 cv
65.1233 20.3222 64.9404 19.582 64.9404 19.0782 cv
64.9404 18.3908 65.2477 17.7906 65.8291 17.3423 cv
66.367 16.9273 67.1424 16.7255 68.1995 16.7255 cv
69.8182 16.7255 71.7149 17.1822 73.8461 18.0842 cv
75.3622 14.2626 li
73.003 13.2995 70.6656 12.8118 68.4047 12.8118 cv
65.6566 12.8118 63.4848 13.41 61.9498 14.5899 cv
60.4541 15.7398 59.727 17.3087 59.727 19.386 cv
59.727 20.5086 59.9045 21.4842 60.2547 22.2857 cv
60.6007 23.0782 61.1435 23.7932 61.8682 24.4112 cv
62.6265 25.0585 63.8017 25.746 65.3611 26.4546 cv
67.2088 27.2851 68.3267 27.827 68.7762 28.11 cv
69.2774 28.4261 69.6404 28.7426 69.8863 29.0779 cv
70.1694 29.464 70.3128 29.9143 70.3128 30.4165 cv
70.3128 31.1985 69.9665 31.8695 69.3113 32.3569 cv
68.7063 32.807 67.8392 33.0258 66.6604 33.0258 cv
65.4377 33.0258 64.0843 32.8303 62.6377 32.4448 cv
61.5877 32.1653 60.5553 31.8012 59.556 31.3586 cv
59.556 35.72 li
cp
66.5236 38.5154 mo
64.8169 38.5154 63.3564 38.3922 62.1827 38.1493 cv
61.0012 37.9049 59.7589 37.4743 58.4901 36.8695 cv
58.2308 36.7459 58.0656 36.4842 58.0656 36.1969 cv
58.0656 30.1771 li
58.0656 29.9174 58.2008 29.6765 58.4224 29.5411 cv
58.6442 29.4058 58.9203 29.3956 59.1511 29.5142 cv
60.3865 30.1484 61.6886 30.6499 63.0213 31.0047 cv
64.3429 31.3569 65.5672 31.5354 66.6604 31.5354 cv
67.7003 31.5354 68.1922 31.3319 68.4217 31.1611 cv
68.6989 30.9549 68.8225 30.7253 68.8225 30.4165 cv
68.8225 30.233 68.7786 30.0877 68.6845 29.9593 cv
68.5942 29.8362 68.3988 29.6341 67.9816 29.3709 cv
67.7175 29.2046 66.9417 28.799 64.7473 27.8127 cv
63.0345 27.0344 61.7772 26.293 60.9008 25.5451 cv
60.003 24.7793 59.326 23.8834 58.8889 22.8822 cv
58.4561 21.8915 58.2366 20.7152 58.2366 19.386 cv
58.2366 16.8504 59.1803 14.8392 61.0415 13.4083 cv
62.8431 12.0235 65.3204 11.3214 68.4047 11.3214 cv
71.0855 11.3214 73.8514 11.9472 76.6256 13.1814 cv
76.9909 13.3438 77.1628 13.7655 77.0154 14.137 cv
74.9461 19.353 li
74.8708 19.543 74.7207 19.6937 74.531 19.7698 cv
74.3413 19.8459 74.1287 19.8408 73.943 19.7556 cv
71.7142 18.7339 69.7819 18.2158 68.1995 18.2158 cv
67.2747 18.2158 66.8877 18.4079 66.7394 18.5224 cv
66.4674 18.7321 66.4308 18.921 66.4308 19.0782 cv
66.4308 19.169 66.4308 19.4453 66.8989 19.8027 cv
67.2157 20.0449 68.1643 20.5943 70.8863 21.8378 cv
73.1745 22.867 74.7376 23.9635 75.6609 25.188 cv
76.5946 26.4267 77.068 27.9902 77.068 29.8351 cv
77.068 31.5258 76.63 33.0526 75.7664 34.373 cv
74.9046 35.6909 73.6527 36.7259 72.0454 37.4493 cv
70.4732 38.1567 68.6155 38.5154 66.5236 38.5154 cv
cp
f
86.7287 24.8927 mo
86.7287 29.7269 88.4103 32.1438 91.7737 32.1438 cv
93.4838 32.1438 94.7521 31.5567 95.5787 30.3823 cv
96.4053 29.2082 96.8186 27.3783 96.8186 24.8927 cv
96.8186 22.3959 96.3996 20.5519 95.5617 19.3604 cv
94.7237 18.1692 93.4723 17.5733 91.8079 17.5733 cv
88.4218 17.5733 86.7287 20.0132 86.7287 24.8927 cv
cp
103.933 24.8927 mo
103.933 29.0997 102.901 32.2977 100.838 34.4867 cv
98.7738 36.6757 95.7525 37.7702 91.7737 37.7702 cv
87.8515 37.7702 84.8447 36.6701 82.7526 34.4696 cv
80.6604 32.2694 79.6145 29.0655 79.6145 24.8585 cv
79.6145 20.6972 80.6548 17.5193 82.7355 15.3244 cv
84.816 13.1298 87.8403 12.0324 91.8079 12.0324 cv
95.7867 12.0324 98.8024 13.1213 100.855 15.2988 cv
102.907 17.4765 103.933 20.6745 103.933 24.8927 cv
cp
f
91.8079 18.3185 mo
90.3614 18.3185 89.3156 18.8122 88.6108 19.828 cv
87.8564 20.9151 87.4739 22.6191 87.4739 24.8927 cv
87.4739 27.1434 87.8534 28.8299 88.6016 29.9054 cv
89.3007 30.9102 90.3382 31.3986 91.7737 31.3986 cv
93.2395 31.3986 94.2849 30.9259 94.9694 29.9534 cv
95.702 28.9127 96.0735 27.2101 96.0735 24.8927 cv
96.0735 22.5642 95.6962 20.847 94.9522 19.789 cv
94.256 18.7995 93.2275 18.3185 91.8079 18.3185 cv
cp
91.7737 32.889 mo
89.8415 32.889 88.3626 32.1716 87.3782 30.7567 cv
86.4398 29.4078 85.9835 27.4897 85.9835 24.8927 cv
85.9835 22.2732 86.4424 20.3386 87.3863 18.9783 cv
88.3764 17.5515 89.864 16.8281 91.8079 16.8281 cv
93.7212 16.8281 95.1892 17.5358 96.1712 18.9316 cv
97.1084 20.2642 97.5638 22.2141 97.5638 24.8927 cv
97.5638 27.5603 97.1138 29.4963 96.1881 30.8113 cv
95.2177 32.1899 93.7324 32.889 91.7737 32.889 cv
cp
91.8079 12.7776 mo
88.0714 12.7776 85.2009 13.8069 83.2763 15.8371 cv
81.341 17.8786 80.3597 20.9139 80.3597 24.8585 cv
80.3597 28.8486 81.3465 31.9095 83.2926 33.9561 cv
85.2287 35.9925 88.0821 37.025 91.7737 37.025 cv
95.5205 37.025 98.3876 35.999 100.295 33.9755 cv
102.215 31.9394 103.188 28.8835 103.188 24.8927 cv
103.188 20.8905 102.22 17.8346 100.312 15.8098 cv
98.416 13.7978 95.5547 12.7776 91.8079 12.7776 cv
cp
91.7737 38.5154 mo
87.6577 38.5154 84.4409 37.3269 82.2125 34.983 cv
79.9941 32.6502 78.8693 29.2438 78.8693 24.8585 cv
78.8693 20.5196 79.9882 17.1394 82.1948 14.8117 cv
84.4119 12.473 87.6462 11.2872 91.8079 11.2872 cv
95.9816 11.2872 99.2078 12.4649 101.397 14.7877 cv
103.574 17.0982 104.678 20.498 104.678 24.8927 cv
104.678 29.2761 103.568 32.676 101.38 34.9979 cv
99.1793 37.3319 95.9473 38.5154 91.7737 38.5154 cv
cp
f
119.931 17.6075 mo
118.324 17.6075 117.069 18.2659 116.169 19.5827 cv
115.268 20.8995 114.818 22.7152 114.818 25.0295 cv
114.818 29.841 116.648 32.2464 120.307 32.2464 cv
121.413 32.2464 122.485 32.0925 123.522 31.7847 cv
124.56 31.4768 125.603 31.1065 126.652 30.6731 cv
126.652 36.385 li
124.566 37.3085 122.206 37.7702 119.572 37.7702 cv
115.798 37.7702 112.905 36.6757 110.893 34.4867 cv
108.881 32.2977 107.874 29.1339 107.874 24.9953 cv
107.874 22.4074 108.362 20.1329 109.337 18.1718 cv
110.311 16.211 111.714 14.7032 113.544 13.6485 cv
115.374 12.5941 117.525 12.0666 119.999 12.0666 cv
122.702 12.0666 125.284 12.6539 127.746 13.828 cv
125.677 19.1466 li
124.754 18.7135 123.83 18.3487 122.907 18.0521 cv
121.983 17.7558 120.991 17.6075 119.931 17.6075 cv
cp
f
119.999 12.8118 mo
117.67 12.8118 115.623 13.3105 113.916 14.2941 cv
112.224 15.2692 110.908 16.6855 110.004 18.5036 cv
109.085 20.3515 108.62 22.5357 108.62 24.9953 cv
108.62 28.9219 109.569 31.9456 111.442 33.9824 cv
113.297 36.0013 116.033 37.025 119.572 37.025 cv
121.903 37.025 124.031 36.6436 125.907 35.8907 cv
125.907 31.768 li
125.18 32.041 124.453 32.2858 123.734 32.4991 cv
122.633 32.8259 121.48 32.9916 120.307 32.9916 cv
118.241 32.9916 116.656 32.2857 115.597 30.8934 cv
114.585 29.5636 114.073 27.5907 114.073 25.0295 cv
114.073 22.5728 114.571 20.5987 115.554 19.162 cv
116.597 17.636 118.07 16.8623 119.931 16.8623 cv
121.063 16.8623 122.141 17.0239 123.134 17.3426 cv
123.843 17.57 124.557 17.8389 125.267 18.1451 cv
126.796 14.2152 li
124.631 13.2836 122.348 12.8118 119.999 12.8118 cv
cp
119.572 38.5154 mo
115.599 38.5154 112.494 37.3296 110.344 34.991 cv
108.211 32.6704 107.129 29.3074 107.129 24.9953 cv
107.129 22.3035 107.647 19.8961 108.669 17.8401 cv
109.706 15.7546 111.221 14.1271 113.171 13.0028 cv
115.108 11.8871 117.405 11.3214 119.999 11.3214 cv
122.8 11.3214 125.515 11.9384 128.067 13.1554 cv
128.419 13.3233 128.582 13.7345 128.441 14.0982 cv
126.372 19.4168 li
126.297 19.6091 126.146 19.7618 125.954 19.8385 cv
125.762 19.9151 125.548 19.9089 125.361 19.8213 cv
124.471 19.4039 123.569 19.0474 122.679 18.7616 cv
121.833 18.4903 120.909 18.3527 119.931 18.3527 cv
118.573 18.3527 117.543 18.8926 116.784 20.0033 cv
115.974 21.1877 115.563 22.8787 115.563 25.0295 cv
115.563 27.2573 115.973 28.9266 116.783 29.9911 cv
117.556 31.0072 118.709 31.5012 120.307 31.5012 cv
121.336 31.5012 122.347 31.3562 123.31 31.0702 cv
124.32 30.7706 125.349 30.4053 126.367 29.9843 cv
126.597 29.8893 126.859 29.9153 127.066 30.0536 cv
127.273 30.1919 127.397 30.4243 127.397 30.6731 cv
127.397 36.385 li
127.397 36.6799 127.223 36.947 126.954 37.0664 cv
124.781 38.0279 122.298 38.5154 119.572 38.5154 cv
cp
f
131.876 37.4282 mo
131.876 12.4257 li
138.665 12.4257 li
138.665 37.4282 li
131.876 37.4282 li
cp
f
132.621 36.683 mo
137.92 36.683 li
137.92 13.1709 li
132.621 13.1709 li
132.621 36.683 li
cp
138.665 38.1734 mo
131.876 38.1734 li
131.465 38.1734 131.131 37.8397 131.131 37.4282 cv
131.131 12.4257 li
131.131 12.0141 131.465 11.6805 131.876 11.6805 cv
138.665 11.6805 li
139.077 11.6805 139.411 12.0141 139.411 12.4257 cv
139.411 37.4282 li
139.411 37.8397 139.077 38.1734 138.665 38.1734 cv
cp
f
157.126 27.2014 mo
156.049 23.0971 li
155.798 22.1851 155.493 21.0051 155.134 19.557 cv
154.775 18.1093 154.538 17.0717 154.424 16.4446 cv
154.322 17.026 154.119 17.9837 153.817 19.3176 cv
153.515 20.6515 152.845 23.2796 151.808 27.2014 cv
157.126 27.2014 li
cp
159.76 37.4282 mo
158.529 32.7423 li
150.405 32.7423 li
149.14 37.4282 li
141.718 37.4282 li
149.875 12.3231 li
158.888 12.3231 li
167.148 37.4282 li
159.76 37.4282 li
cp
f
152.775 26.4562 mo
156.16 26.4562 li
155.329 23.2905 li
155.087 22.4117 154.792 21.2688 154.449 19.8915 cv
154.142 21.1954 153.581 23.3973 152.775 26.4562 cv
cp
157.126 27.9466 mo
151.808 27.9466 li
151.576 27.9466 151.358 27.8393 151.217 27.656 cv
151.076 27.4728 151.028 27.2344 151.087 27.0109 cv
152.118 23.1127 152.792 20.4689 153.09 19.153 cv
153.389 17.834 153.591 16.8792 153.69 16.3151 cv
153.753 15.9596 154.061 15.7002 154.422 15.6994 cv
154.423 15.6994 154.424 15.6994 154.424 15.6994 cv
154.784 15.6994 155.093 15.957 155.157 16.3115 cv
155.268 16.9184 155.503 17.95 155.857 19.3776 cv
156.214 20.8146 156.52 21.9995 156.767 22.8994 cv
156.768 22.9022 156.769 22.905 156.77 22.9079 cv
157.847 27.0122 li
157.906 27.2357 157.857 27.4737 157.716 27.6566 cv
157.575 27.8395 157.357 27.9466 157.126 27.9466 cv
cp
160.335 36.683 mo
166.118 36.683 li
158.348 13.0683 li
150.417 13.0683 li
142.743 36.683 li
148.569 36.683 li
149.686 32.548 li
149.774 32.223 150.069 31.9971 150.405 31.9971 cv
158.529 31.9971 li
158.867 31.9971 159.163 32.2255 159.249 32.5529 cv
160.335 36.683 li
cp
167.148 38.1734 mo
159.76 38.1734 li
159.421 38.1734 159.125 37.945 159.039 37.6176 cv
157.954 33.4875 li
150.976 33.4875 li
149.859 37.6225 li
149.771 37.9475 149.477 38.1734 149.14 38.1734 cv
141.718 38.1734 li
141.479 38.1734 141.255 38.0592 141.115 37.8662 cv
140.975 37.6732 140.935 37.4247 141.009 37.1979 cv
149.166 12.0928 li
149.266 11.7858 149.552 11.5779 149.875 11.5779 cv
158.888 11.5779 li
159.209 11.5779 159.495 11.7845 159.596 12.0902 cv
167.856 37.1953 li
167.93 37.4223 167.892 37.6714 167.751 37.8651 cv
167.611 38.0587 167.387 38.1734 167.148 38.1734 cv
cp
f
170.2 37.4282 mo
170.2 12.4257 li
176.955 12.4257 li
176.955 31.9728 li
186.583 31.9728 li
186.583 37.4282 li
170.2 37.4282 li
cp
f
170.945 36.683 mo
185.838 36.683 li
185.838 32.718 li
176.955 32.718 li
176.544 32.718 176.21 32.3843 176.21 31.9728 cv
176.21 13.1709 li
170.945 13.1709 li
170.945 36.683 li
cp
186.583 38.1734 mo
170.2 38.1734 li
169.788 38.1734 169.455 37.8397 169.455 37.4282 cv
169.455 12.4257 li
169.455 12.0141 169.788 11.6805 170.2 11.6805 cv
176.955 11.6805 li
177.367 11.6805 177.7 12.0141 177.7 12.4257 cv
177.7 31.2276 li
186.583 31.2276 li
186.995 31.2276 187.329 31.5612 187.329 31.9728 cv
187.329 37.4282 li
187.329 37.8397 186.995 38.1734 186.583 38.1734 cv
cp
f
200.384 37.4282 mo
200.384 12.4257 li
207.173 12.4257 li
207.173 37.4282 li
200.384 37.4282 li
cp
0 0 0 0 cmyk
f
201.129 36.683 mo
206.428 36.683 li
206.428 13.1709 li
201.129 13.1709 li
201.129 36.683 li
cp
207.173 38.1734 mo
200.384 38.1734 li
199.972 38.1734 199.638 37.8397 199.638 37.4282 cv
199.638 12.4257 li
199.638 12.0141 199.972 11.6805 200.384 11.6805 cv
207.173 11.6805 li
207.584 11.6805 207.918 12.0141 207.918 12.4257 cv
207.918 37.4282 li
207.918 37.8397 207.584 38.1734 207.173 38.1734 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
224.06 17.6075 mo
222.453 17.6075 221.198 18.2659 220.298 19.5827 cv
219.397 20.8995 218.947 22.7152 218.947 25.0295 cv
218.947 29.841 220.777 32.2464 224.437 32.2464 cv
225.542 32.2464 226.614 32.0925 227.652 31.7847 cv
228.689 31.4768 229.732 31.1065 230.781 30.6731 cv
230.781 36.385 li
228.695 37.3085 226.335 37.7702 223.701 37.7702 cv
219.927 37.7702 217.034 36.6757 215.022 34.4867 cv
213.01 32.2977 212.004 29.1339 212.004 24.9953 cv
212.004 22.4074 212.491 20.1329 213.466 18.1718 cv
214.441 16.211 215.843 14.7032 217.673 13.6485 cv
219.503 12.5941 221.655 12.0666 224.129 12.0666 cv
226.831 12.0666 229.413 12.6539 231.876 13.828 cv
229.806 19.1466 li
228.883 18.7135 227.959 18.3487 227.036 18.0521 cv
226.112 17.7558 225.121 17.6075 224.06 17.6075 cv
cp
0 0 0 0 cmyk
f
224.129 12.8118 mo
221.799 12.8118 219.752 13.3105 218.045 14.2941 cv
216.353 15.2692 215.037 16.6855 214.133 18.5036 cv
213.215 20.3515 212.749 22.5357 212.749 24.9953 cv
212.749 28.9219 213.698 31.9456 215.571 33.9824 cv
217.427 36.0013 220.162 37.025 223.701 37.025 cv
226.032 37.025 228.161 36.6436 230.036 35.8907 cv
230.036 31.768 li
229.309 32.041 228.582 32.2858 227.864 32.4991 cv
226.762 32.8259 225.609 32.9916 224.437 32.9916 cv
222.37 32.9916 220.785 32.2857 219.726 30.8934 cv
218.715 29.5636 218.202 27.5907 218.202 25.0295 cv
218.202 22.5728 218.7 20.5987 219.683 19.162 cv
220.726 17.636 222.199 16.8623 224.06 16.8623 cv
225.193 16.8623 226.27 17.0239 227.264 17.3426 cv
227.972 17.57 228.686 17.8389 229.396 18.1451 cv
230.925 14.2152 li
228.76 13.2836 226.477 12.8118 224.129 12.8118 cv
cp
223.701 38.5154 mo
219.728 38.5154 216.623 37.3296 214.474 34.991 cv
212.34 32.6704 211.259 29.3074 211.259 24.9953 cv
211.259 22.3035 211.777 19.8961 212.799 17.8401 cv
213.835 15.7546 215.35 14.1271 217.301 13.0028 cv
219.237 11.8871 221.534 11.3214 224.129 11.3214 cv
226.93 11.3214 229.644 11.9384 232.196 13.1554 cv
232.549 13.3233 232.712 13.7345 232.57 14.0982 cv
230.501 19.4168 li
230.426 19.6091 230.275 19.7618 230.083 19.8385 cv
229.892 19.9151 229.677 19.9089 229.49 19.8213 cv
228.6 19.4039 227.698 19.0474 226.808 18.7616 cv
225.963 18.4903 225.038 18.3527 224.06 18.3527 cv
222.702 18.3527 221.673 18.8926 220.913 20.0033 cv
220.103 21.1877 219.692 22.8787 219.692 25.0295 cv
219.692 27.2573 220.103 28.9266 220.912 29.9911 cv
221.685 31.0072 222.838 31.5012 224.437 31.5012 cv
225.465 31.5012 226.476 31.3562 227.44 31.0702 cv
228.449 30.7706 229.478 30.4053 230.497 29.9843 cv
230.727 29.8893 230.989 29.9153 231.196 30.0536 cv
231.402 30.1919 231.526 30.4243 231.526 30.6731 cv
231.526 36.385 li
231.526 36.6799 231.352 36.947 231.083 37.0664 cv
228.911 38.0279 226.427 38.5154 223.701 38.5154 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
242.196 24.8927 mo
242.196 29.7269 243.878 32.1438 247.241 32.1438 cv
248.951 32.1438 250.219 31.5567 251.046 30.3823 cv
251.873 29.2082 252.286 27.3783 252.286 24.8927 cv
252.286 22.3959 251.867 20.5519 251.029 19.3604 cv
250.191 18.1692 248.94 17.5733 247.275 17.5733 cv
243.889 17.5733 242.196 20.0132 242.196 24.8927 cv
cp
259.4 24.8927 mo
259.4 29.0997 258.368 32.2977 256.305 34.4867 cv
254.241 36.6757 251.22 37.7702 247.241 37.7702 cv
243.319 37.7702 240.312 36.6701 238.22 34.4696 cv
236.128 32.2694 235.082 29.0655 235.082 24.8585 cv
235.082 20.6972 236.122 17.5193 238.203 15.3244 cv
240.283 13.1298 243.308 12.0324 247.275 12.0324 cv
251.254 12.0324 254.27 13.1213 256.322 15.2988 cv
258.374 17.4765 259.4 20.6745 259.4 24.8927 cv
cp
0 0 0 0 cmyk
f
247.275 18.3185 mo
245.829 18.3185 244.783 18.8122 244.078 19.828 cv
243.324 20.9151 242.941 22.6191 242.941 24.8927 cv
242.941 27.1434 243.321 28.8299 244.069 29.9054 cv
244.768 30.9102 245.806 31.3986 247.241 31.3986 cv
248.707 31.3986 249.752 30.9259 250.437 29.9534 cv
251.169 28.9127 251.541 27.2101 251.541 24.8927 cv
251.541 22.5642 251.164 20.847 250.42 19.789 cv
249.723 18.7995 248.695 18.3185 247.275 18.3185 cv
cp
247.241 32.889 mo
245.309 32.889 243.83 32.1716 242.846 30.7567 cv
241.907 29.4078 241.451 27.4897 241.451 24.8927 cv
241.451 22.2732 241.91 20.3386 242.854 18.9783 cv
243.844 17.5515 245.331 16.8281 247.275 16.8281 cv
249.189 16.8281 250.657 17.5358 251.639 18.9316 cv
252.576 20.2642 253.031 22.2141 253.031 24.8927 cv
253.031 27.5603 252.581 29.4963 251.656 30.8113 cv
250.685 32.1899 249.2 32.889 247.241 32.889 cv
cp
247.275 12.7776 mo
243.539 12.7776 240.668 13.8069 238.744 15.8371 cv
236.808 17.8786 235.827 20.9139 235.827 24.8585 cv
235.827 28.8486 236.814 31.9095 238.76 33.9561 cv
240.696 35.9925 243.55 37.025 247.241 37.025 cv
250.988 37.025 253.855 35.999 255.763 33.9755 cv
257.682 31.9394 258.655 28.8835 258.655 24.8927 cv
258.655 20.8905 257.688 17.8346 255.78 15.8098 cv
253.883 13.7978 251.022 12.7776 247.275 12.7776 cv
cp
247.241 38.5154 mo
243.125 38.5154 239.908 37.3269 237.68 34.983 cv
235.462 32.6502 234.337 29.2438 234.337 24.8585 cv
234.337 20.5196 235.456 17.1394 237.662 14.8117 cv
239.879 12.473 243.114 11.2872 247.275 11.2872 cv
251.449 11.2872 254.675 12.4649 256.864 14.7877 cv
259.042 17.0982 260.146 20.498 260.146 24.8927 cv
260.146 29.2761 259.036 32.676 256.847 34.9979 cv
254.647 37.3319 251.415 38.5154 247.241 38.5154 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
288.071 37.4282 mo
279.212 37.4282 li
270.08 19.8136 li
269.926 19.8136 li
270.142 22.584 270.251 24.699 270.251 26.1582 cv
270.251 37.4282 li
264.265 37.4282 li
264.265 12.4257 li
273.09 12.4257 li
282.188 29.8009 li
282.29 29.8009 li
282.131 27.2813 282.051 25.2578 282.051 23.7298 cv
282.051 12.4257 li
288.071 12.4257 li
288.071 37.4282 li
cp
0 0 0 0 cmyk
f
279.665 36.683 mo
287.326 36.683 li
287.326 13.1709 li
282.796 13.1709 li
282.796 23.7298 li
282.796 25.2379 282.876 27.2646 283.034 29.7537 cv
283.047 29.9591 282.975 30.1608 282.834 30.3109 cv
282.693 30.4609 282.496 30.5461 282.29 30.5461 cv
282.188 30.5461 li
281.911 30.5461 281.656 30.3922 281.528 30.1465 cv
272.639 13.1709 li
265.011 13.1709 li
265.011 36.683 li
269.506 36.683 li
269.506 26.1582 li
269.506 24.7275 269.397 22.6124 269.183 19.8716 cv
269.167 19.6645 269.238 19.4601 269.379 19.3076 cv
269.52 19.1551 269.718 19.0684 269.926 19.0684 cv
270.08 19.0684 li
270.358 19.0684 270.613 19.2235 270.742 19.4706 cv
279.665 36.683 li
cp
288.071 38.1734 mo
279.212 38.1734 li
278.934 38.1734 278.679 38.0182 278.551 37.7711 cv
270.89 22.9945 li
270.96 24.2636 270.996 25.3219 270.996 26.1582 cv
270.996 37.4282 li
270.996 37.8397 270.662 38.1734 270.251 38.1734 cv
264.265 38.1734 li
263.854 38.1734 263.52 37.8397 263.52 37.4282 cv
263.52 12.4257 li
263.52 12.0141 263.854 11.6805 264.265 11.6805 cv
273.09 11.6805 li
273.367 11.6805 273.621 11.8344 273.75 12.08 cv
281.375 26.6427 li
281.329 25.5285 281.306 24.5547 281.306 23.7298 cv
281.306 12.4257 li
281.306 12.0141 281.639 11.6805 282.051 11.6805 cv
288.071 11.6805 li
288.482 11.6805 288.816 12.0141 288.816 12.4257 cv
288.816 37.4282 li
288.816 37.8397 288.482 38.1734 288.071 38.1734 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
310.174 29.8351 mo
310.174 31.3857 309.781 32.7624 308.994 33.9651 cv
308.208 35.1681 307.073 36.1028 305.591 36.7698 cv
304.109 37.4367 302.37 37.7702 300.375 37.7702 cv
298.71 37.7702 297.314 37.6532 296.185 37.4196 cv
295.056 37.1861 293.882 36.7783 292.662 36.1969 cv
292.662 30.1771 li
293.95 30.8385 295.29 31.3545 296.681 31.7248 cv
298.072 32.0954 299.349 32.2806 300.512 32.2806 cv
301.515 32.2806 302.25 32.1069 302.718 31.759 cv
303.185 31.4114 303.419 30.9638 303.419 30.4165 cv
303.419 30.0745 303.325 29.7752 303.137 29.5187 cv
302.949 29.2622 302.647 29.003 302.23 28.7406 cv
301.814 28.4785 300.706 27.9427 298.904 27.133 cv
297.274 26.3921 296.051 25.6738 295.236 24.9782 cv
294.421 24.283 293.817 23.4848 293.423 22.584 cv
293.03 21.6835 292.833 20.6173 292.833 19.386 cv
292.833 17.0832 293.671 15.2875 295.347 13.999 cv
297.023 12.7108 299.326 12.0666 302.256 12.0666 cv
304.844 12.0666 307.483 12.6651 310.174 13.8622 cv
308.105 19.0782 li
305.768 18.0067 303.75 17.4707 302.051 17.4707 cv
301.173 17.4707 300.535 17.6246 300.136 17.9324 cv
299.736 18.2402 299.537 18.6224 299.537 19.0782 cv
299.537 19.5685 299.791 20.0076 300.298 20.395 cv
300.805 20.7828 302.182 21.4895 304.428 22.5156 cv
306.583 23.4848 308.079 24.525 308.917 25.6366 cv
309.755 26.7482 310.174 28.1479 310.174 29.8351 cv
cp
0 0 0 0 cmyk
f
293.407 35.72 mo
294.419 36.1709 295.402 36.4966 296.336 36.6899 cv
297.411 36.9122 298.77 37.025 300.375 37.025 cv
302.255 37.025 303.907 36.7105 305.285 36.0902 cv
306.629 35.4855 307.667 34.6333 308.371 33.5572 cv
309.073 32.4834 309.429 31.2311 309.429 29.8351 cv
309.429 28.3212 309.057 27.0595 308.322 26.0852 cv
307.564 25.0802 306.151 24.1079 304.122 23.1952 cv
301.03 21.7824 300.201 21.2584 299.845 20.987 cv
298.975 20.3222 298.792 19.582 298.792 19.0782 cv
298.792 18.3908 299.099 17.7906 299.681 17.3423 cv
300.218 16.9273 300.994 16.7255 302.051 16.7255 cv
303.67 16.7255 305.566 17.1822 307.698 18.0842 cv
309.214 14.2626 li
306.854 13.2995 304.517 12.8118 302.256 12.8118 cv
299.508 12.8118 297.336 13.41 295.801 14.5899 cv
294.306 15.7398 293.578 17.3087 293.578 19.386 cv
293.578 20.5086 293.756 21.4842 294.106 22.2857 cv
294.452 23.0782 294.995 23.7932 295.72 24.4112 cv
296.478 25.0585 297.653 25.746 299.213 26.4546 cv
301.06 27.2851 302.178 27.827 302.628 28.11 cv
303.129 28.4261 303.492 28.7426 303.738 29.0779 cv
304.021 29.464 304.164 29.9143 304.164 30.4165 cv
304.164 31.1985 303.818 31.8695 303.163 32.3569 cv
302.558 32.807 301.691 33.0258 300.512 33.0258 cv
299.289 33.0258 297.936 32.8303 296.489 32.4448 cv
295.439 32.1653 294.407 31.8012 293.407 31.3586 cv
293.407 35.72 li
cp
300.375 38.5154 mo
298.668 38.5154 297.208 38.3922 296.034 38.1493 cv
294.853 37.9049 293.61 37.4743 292.342 36.8695 cv
292.082 36.7459 291.917 36.4842 291.917 36.1969 cv
291.917 30.1771 li
291.917 29.9174 292.052 29.6765 292.274 29.5411 cv
292.496 29.4058 292.772 29.3956 293.003 29.5142 cv
294.238 30.1484 295.54 30.6499 296.873 31.0047 cv
298.194 31.3569 299.419 31.5354 300.512 31.5354 cv
301.552 31.5354 302.044 31.3319 302.273 31.1611 cv
302.55 30.9549 302.674 30.7253 302.674 30.4165 cv
302.674 30.233 302.63 30.0877 302.536 29.9593 cv
302.446 29.8362 302.25 29.6341 301.833 29.3709 cv
301.569 29.2046 300.793 28.799 298.599 27.8127 cv
296.886 27.0344 295.629 26.293 294.752 25.5451 cv
293.854 24.7793 293.177 23.8834 292.74 22.8822 cv
292.307 21.8915 292.088 20.7152 292.088 19.386 cv
292.088 16.8504 293.032 14.8392 294.893 13.4083 cv
296.695 12.0235 299.172 11.3214 302.256 11.3214 cv
304.937 11.3214 307.703 11.9472 310.477 13.1814 cv
310.842 13.3438 311.014 13.7655 310.867 14.137 cv
308.798 19.353 li
308.722 19.543 308.572 19.6937 308.382 19.7698 cv
308.193 19.8459 307.98 19.8408 307.794 19.7556 cv
305.566 18.7339 303.633 18.2158 302.051 18.2158 cv
301.126 18.2158 300.739 18.4079 300.591 18.5224 cv
300.319 18.7321 300.282 18.921 300.282 19.0782 cv
300.282 19.169 300.282 19.4453 300.75 19.8027 cv
301.067 20.0449 302.016 20.5943 304.738 21.8378 cv
307.026 22.867 308.589 23.9635 309.512 25.188 cv
310.446 26.4267 310.919 27.9902 310.919 29.8351 cv
310.919 31.5258 310.481 33.0526 309.618 34.373 cv
308.756 35.6909 307.504 36.7259 305.897 37.4493 cv
304.325 38.1567 302.467 38.5154 300.375 38.5154 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
323.229 94.354 mo
328.884 97.5848 li
329.117 97.7175 329.26 97.9644 329.26 98.2319 cv
329.26 100.988 li
329.26 103.038 330.927 104.706 332.977 104.706 cv
354.441 104.706 li
356.49 104.706 358.158 103.038 358.158 100.988 cv
358.158 87.7195 li
358.158 85.6699 356.49 84.0023 354.441 84.0023 cv
332.977 84.0023 li
330.927 84.0023 329.26 85.6699 329.26 87.7195 cv
329.26 90.4761 li
329.26 90.7435 329.117 90.9904 328.884 91.1231 cv
323.229 94.354 li
cp
354.441 106.196 mo
332.977 106.196 li
330.106 106.196 327.77 103.86 327.77 100.988 cv
327.77 98.6644 li
321.357 95.001 li
321.125 94.8683 320.982 94.6214 320.982 94.354 cv
320.982 94.0865 321.125 93.8396 321.357 93.7069 cv
327.77 90.0435 li
327.77 87.7195 li
327.77 84.848 330.106 82.5119 332.977 82.5119 cv
354.441 82.5119 li
357.312 82.5119 359.648 84.848 359.648 87.7195 cv
359.648 100.988 li
359.648 103.86 357.312 106.196 354.441 106.196 cv
cp
f
340.316 98.4756 mo
340.316 94.668 li
340.316 93.7315 340.038 93.2633 339.484 93.2633 cv
339.089 93.2633 338.799 93.4287 338.612 93.7593 cv
338.425 94.0899 338.332 94.6393 338.332 95.4074 cv
338.332 98.4756 li
335.923 98.4756 li
335.923 88.8888 li
338.332 88.8888 li
338.332 90.2505 li
338.332 90.8666 338.299 91.5689 338.233 92.3576 cv
338.344 92.3576 li
338.574 91.9962 338.847 91.7415 339.163 91.5936 cv
339.48 91.4457 339.847 91.3718 340.266 91.3718 cv
341.047 91.3718 341.653 91.5967 342.087 92.0464 cv
342.52 92.4962 342.737 93.1257 342.737 93.9349 cv
342.737 98.4756 li
340.316 98.4756 li
cp
.75021 .679683 .670222 .90164 cmyk
f
346.797 98.4756 mo
344.388 98.4756 li
344.388 91.495 li
346.797 91.495 li
346.797 98.4756 li
cp
344.327 89.7576 mo
344.327 89.3962 344.427 89.1271 344.628 88.9504 cv
344.83 88.7739 345.154 88.6855 345.602 88.6855 cv
346.049 88.6855 346.376 88.7759 346.582 88.9566 cv
346.787 89.1374 346.89 89.4044 346.89 89.7576 cv
346.89 90.4641 346.46 90.8173 345.602 90.8173 cv
344.752 90.8173 344.327 90.4641 344.327 89.7576 cv
cp
f
348.177 97.4529 mo
348.177 97.0792 348.288 96.7885 348.51 96.5811 cv
348.732 96.3737 349.054 96.27 349.477 96.27 cv
349.896 96.27 350.214 96.3737 350.429 96.5811 cv
350.645 96.7885 350.753 97.0792 350.753 97.4529 cv
350.753 97.8225 350.641 98.1112 350.417 98.3185 cv
350.193 98.5259 349.88 98.6297 349.477 98.6297 cv
349.071 98.6297 348.752 98.5259 348.522 98.3185 cv
348.292 98.1112 348.177 97.8225 348.177 97.4529 cv
cp
350.5 95.2965 mo
348.467 95.2965 li
348.153 89.468 li
350.814 89.468 li
350.5 95.2965 li
cp
f
367.377 120.219 mo
367.377 117.462 li
374.165 113.584 li
367.377 109.707 li
367.377 106.95 li
367.377 104.485 365.379 102.488 362.914 102.488 cv
341.451 102.488 li
338.986 102.488 336.988 104.485 336.988 106.95 cv
336.988 120.219 li
336.988 122.683 338.986 124.681 341.451 124.681 cv
362.914 124.681 li
365.379 124.681 367.377 122.683 367.377 120.219 cv
cp
.348486 0 .00491341 0 cmyk
f
341.451 103.233 mo
339.401 103.233 337.734 104.9 337.734 106.95 cv
337.734 120.219 li
337.734 122.269 339.401 123.936 341.451 123.936 cv
362.914 123.936 li
364.964 123.936 366.632 122.269 366.632 120.219 cv
366.632 117.462 li
366.632 117.195 366.775 116.948 367.007 116.815 cv
372.662 113.584 li
367.007 110.354 li
366.775 110.221 366.632 109.974 366.632 109.707 cv
366.632 106.95 li
366.632 104.9 364.964 103.233 362.914 103.233 cv
341.451 103.233 li
cp
362.914 125.426 mo
341.451 125.426 li
338.579 125.426 336.243 123.09 336.243 120.219 cv
336.243 106.95 li
336.243 104.079 338.579 101.742 341.451 101.742 cv
362.914 101.742 li
365.786 101.742 368.122 104.079 368.122 106.95 cv
368.122 109.274 li
374.534 112.937 li
374.767 113.07 374.91 113.317 374.91 113.584 cv
374.91 113.852 374.767 114.099 374.534 114.232 cv
368.122 117.895 li
368.122 120.219 li
368.122 123.09 365.786 125.426 362.914 125.426 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
361.976 113.389 mo
361.976 114.709 360.906 115.779 359.586 115.779 cv
358.266 115.779 357.196 114.709 357.196 113.389 cv
357.196 112.069 358.266 110.999 359.586 110.999 cv
360.906 110.999 361.976 112.069 361.976 113.389 cv
cp
0 0 0 0 cmyk
f
359.586 111.744 mo
358.679 111.744 357.941 112.482 357.941 113.389 cv
357.941 114.296 358.679 115.034 359.586 115.034 cv
360.493 115.034 361.231 114.296 361.231 113.389 cv
361.231 112.482 360.493 111.744 359.586 111.744 cv
cp
359.586 116.525 mo
357.857 116.525 356.451 115.118 356.451 113.389 cv
356.451 111.661 357.857 110.254 359.586 110.254 cv
361.315 110.254 362.721 111.661 362.721 113.389 cv
362.721 115.118 361.315 116.525 359.586 116.525 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
354.635 113.389 mo
354.635 114.709 353.565 115.779 352.245 115.779 cv
350.925 115.779 349.855 114.709 349.855 113.389 cv
349.855 112.069 350.925 110.999 352.245 110.999 cv
353.565 110.999 354.635 112.069 354.635 113.389 cv
cp
0 0 0 0 cmyk
f
352.245 111.744 mo
351.338 111.744 350.6 112.482 350.6 113.389 cv
350.6 114.296 351.338 115.034 352.245 115.034 cv
353.152 115.034 353.89 114.296 353.89 113.389 cv
353.89 112.482 353.152 111.744 352.245 111.744 cv
cp
352.245 116.525 mo
350.516 116.525 349.11 115.118 349.11 113.389 cv
349.11 111.661 350.516 110.254 352.245 110.254 cv
353.974 110.254 355.38 111.661 355.38 113.389 cv
355.38 115.118 353.974 116.525 352.245 116.525 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
347.294 113.389 mo
347.294 114.709 346.224 115.779 344.904 115.779 cv
343.584 115.779 342.514 114.709 342.514 113.389 cv
342.514 112.069 343.584 110.999 344.904 110.999 cv
346.224 110.999 347.294 112.069 347.294 113.389 cv
cp
0 0 0 0 cmyk
f
344.904 111.744 mo
343.997 111.744 343.259 112.482 343.259 113.389 cv
343.259 114.296 343.997 115.034 344.904 115.034 cv
345.811 115.034 346.549 114.296 346.549 113.389 cv
346.549 112.482 345.811 111.744 344.904 111.744 cv
cp
344.904 116.525 mo
343.175 116.525 341.769 115.118 341.769 113.389 cv
341.769 111.661 343.175 110.254 344.904 110.254 cv
346.633 110.254 348.039 111.661 348.039 113.389 cv
348.039 115.118 346.633 116.525 344.904 116.525 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
89.3809 118.391 mo
123.928 118.391 li
123.928 95.0273 li
89.3809 95.0273 li
89.3809 118.391 li
cp
124.674 119.881 mo
88.6357 119.881 li
88.2241 119.881 87.8905 119.547 87.8905 119.136 cv
87.8905 94.2821 li
87.8905 93.8705 88.2241 93.5369 88.6357 93.5369 cv
124.674 93.5369 li
125.085 93.5369 125.419 93.8705 125.419 94.2821 cv
125.419 119.136 li
125.419 119.547 125.085 119.881 124.674 119.881 cv
cp
f
90.5831 95.0273 mo
106.655 109.436 li
122.726 95.0273 li
90.5831 95.0273 li
cp
106.655 111.182 mo
106.477 111.182 106.299 111.119 106.157 110.992 cv
88.1382 94.8369 li
87.9083 94.6308 87.8293 94.3042 87.9397 94.0158 cv
88.0501 93.7274 88.3269 93.5369 88.6357 93.5369 cv
124.674 93.5369 li
124.982 93.5369 125.259 93.7274 125.37 94.0158 cv
125.48 94.3042 125.401 94.6308 125.171 94.8369 cv
107.152 110.992 li
107.011 111.119 106.833 111.182 106.655 111.182 cv
cp
f
88.6357 119.881 mo
88.4408 119.881 88.246 119.805 88.0998 119.654 cv
87.8138 119.358 87.8218 118.886 88.1178 118.6 cv
101.459 105.707 li
101.755 105.421 102.226 105.429 102.512 105.725 cv
102.798 106.021 102.79 106.493 102.494 106.779 cv
89.1535 119.672 li
89.0088 119.811 88.8222 119.881 88.6357 119.881 cv
cp
f
124.673 119.881 mo
124.487 119.881 124.3 119.811 124.156 119.672 cv
110.815 106.779 li
110.519 106.493 110.511 106.021 110.797 105.725 cv
111.083 105.429 111.554 105.421 111.85 105.707 cv
125.191 118.6 li
125.487 118.886 125.495 119.358 125.209 119.654 cv
125.063 119.805 124.868 119.881 124.673 119.881 cv
cp
f
132.751 93.5054 mo
132.751 97.9665 129.135 101.583 124.673 101.583 cv
120.212 101.583 116.596 97.9665 116.596 93.5054 cv
116.596 89.0443 120.212 85.428 124.673 85.428 cv
129.135 85.428 132.751 89.0443 132.751 93.5054 cv
cp
.348486 0 .00491341 0 cmyk
f
124.674 86.1732 mo
120.63 86.1732 117.341 89.4624 117.341 93.5054 cv
117.341 97.5484 120.63 100.838 124.674 100.838 cv
128.717 100.838 132.006 97.5484 132.006 93.5054 cv
132.006 89.4624 128.717 86.1732 124.674 86.1732 cv
cp
124.674 102.328 mo
119.809 102.328 115.851 98.3702 115.851 93.5054 cv
115.851 88.6406 119.809 84.6828 124.674 84.6828 cv
129.538 84.6828 133.496 88.6406 133.496 93.5054 cv
133.496 98.3702 129.538 102.328 124.674 102.328 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
126.157 97.2557 mo
123.91 97.2557 li
123.91 92.9167 li
123.91 92.3897 123.921 91.9076 123.943 91.4703 cv
123.805 91.6385 123.633 91.8142 123.427 91.9973 cv
122.497 92.7653 li
121.348 91.3526 li
124.162 89.0598 li
126.157 89.0598 li
126.157 97.2557 li
cp
.75021 .679683 .670222 .90164 cmyk
f
169.712 112.391 mo
205.333 112.391 li
205.333 85.5637 li
169.712 85.5637 li
169.712 112.391 li
cp
206.078 113.881 mo
168.967 113.881 li
168.556 113.881 168.222 113.547 168.222 113.136 cv
168.222 84.8185 li
168.222 84.4069 168.556 84.0733 168.967 84.0733 cv
206.078 84.0733 li
206.489 84.0733 206.823 84.4069 206.823 84.8185 cv
206.823 113.136 li
206.823 113.547 206.489 113.881 206.078 113.881 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
169.712 123.422 mo
205.333 123.422 li
205.333 113.881 li
169.712 113.881 li
169.712 123.422 li
cp
206.078 124.912 mo
168.967 124.912 li
168.556 124.912 168.222 124.579 168.222 124.167 cv
168.222 113.136 li
168.222 112.724 168.556 112.391 168.967 112.391 cv
206.078 112.391 li
206.489 112.391 206.823 112.724 206.823 113.136 cv
206.823 124.167 li
206.823 124.579 206.489 124.912 206.078 124.912 cv
cp
f
196.763 117.856 mo
184.542 117.856 li
184.13 117.856 183.797 117.523 183.797 117.111 cv
183.797 116.7 184.13 116.366 184.542 116.366 cv
196.763 116.366 li
197.174 116.366 197.508 116.7 197.508 117.111 cv
197.508 117.523 197.174 117.856 196.763 117.856 cv
cp
f
201.234 120.986 mo
184.542 120.986 li
184.13 120.986 183.797 120.653 183.797 120.241 cv
183.797 119.829 184.13 119.496 184.542 119.496 cv
201.234 119.496 li
201.646 119.496 201.979 119.829 201.979 120.241 cv
201.979 120.653 201.646 120.986 201.234 120.986 cv
cp
f
192.831 94.7143 mo
192.831 97.9431 190.213 100.561 186.984 100.561 cv
183.756 100.561 181.138 97.9431 181.138 94.7143 cv
181.138 91.4854 183.756 88.8679 186.984 88.8679 cv
190.213 88.8679 192.831 91.4854 192.831 94.7143 cv
cp
.348486 0 .00491341 0 cmyk
f
186.984 89.6131 mo
184.172 89.6131 181.883 91.9015 181.883 94.7143 cv
181.883 97.5271 184.172 99.8154 186.984 99.8154 cv
189.797 99.8154 192.086 97.5271 192.086 94.7143 cv
192.086 91.9015 189.797 89.6131 186.984 89.6131 cv
cp
186.984 101.306 mo
183.35 101.306 180.393 98.3488 180.393 94.7143 cv
180.393 91.0797 183.35 88.1227 186.984 88.1227 cv
190.619 88.1227 193.576 91.0797 193.576 94.7143 cv
193.576 98.3488 190.619 101.306 186.984 101.306 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
192.968 108.375 mo
181.001 108.375 li
181.001 106.613 li
181.001 103.309 183.68 100.63 186.984 100.63 cv
186.984 100.63 li
190.289 100.63 192.968 103.309 192.968 106.613 cv
192.968 108.375 li
cp
.348486 0 .00491341 0 cmyk
f
181.746 107.63 mo
192.222 107.63 li
192.222 106.613 li
192.222 103.725 189.873 101.375 186.984 101.375 cv
184.096 101.375 181.746 103.725 181.746 106.613 cv
181.746 107.63 li
cp
192.968 109.12 mo
181.001 109.12 li
180.59 109.12 180.256 108.787 180.256 108.375 cv
180.256 106.613 li
180.256 102.903 183.274 99.8847 186.984 99.8847 cv
190.695 99.8847 193.713 102.903 193.713 106.613 cv
193.713 108.375 li
193.713 108.787 193.379 109.12 192.968 109.12 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
175.542 117.082 mo
174.922 117.082 174.702 117.635 174.702 118.109 cv
174.702 118.839 176.067 119.982 177.002 120.557 cv
177.955 119.972 179.3 118.818 179.3 118.109 cv
179.3 117.635 179.08 117.082 178.46 117.082 cv
178.24 117.082 177.782 117.331 177.536 117.584 cv
177.396 117.729 177.203 117.811 177.001 117.811 cv
176.799 117.811 176.606 117.729 176.466 117.584 cv
176.22 117.331 175.762 117.082 175.542 117.082 cv
cp
177.001 122.159 mo
176.884 122.159 176.766 122.131 176.659 122.075 cv
176.624 122.057 173.212 120.233 173.212 118.109 cv
173.212 116.65 174.192 115.591 175.542 115.591 cv
176.038 115.591 176.57 115.817 177.001 116.106 cv
177.432 115.817 177.964 115.591 178.46 115.591 cv
179.81 115.591 180.79 116.65 180.79 118.109 cv
180.79 120.214 177.376 122.059 177.341 122.077 cv
177.234 122.131 177.118 122.159 177.001 122.159 cv
cp
f
252.868 89.9112 mo
250.426 89.9112 248.439 91.8977 248.439 94.3394 cv
248.439 113.776 li
248.439 116.218 250.426 118.204 252.868 118.204 cv
287.908 118.204 li
290.349 118.204 292.336 116.218 292.336 113.776 cv
292.336 94.3394 li
292.336 91.8977 290.349 89.9112 287.908 89.9112 cv
252.868 89.9112 li
cp
287.908 119.695 mo
252.868 119.695 li
249.604 119.695 246.949 117.04 246.949 113.776 cv
246.949 94.3394 li
246.949 91.0758 249.604 88.4208 252.868 88.4208 cv
287.908 88.4208 li
291.171 88.4208 293.826 91.0758 293.826 94.3394 cv
293.826 113.776 li
293.826 117.04 291.171 119.695 287.908 119.695 cv
cp
f
284.585 118.95 mo
252.868 118.95 li
252.868 89.166 li
284.585 89.166 li
284.585 118.95 li
cp
.348486 0 .00491341 0 cmyk
f
253.613 118.204 mo
283.84 118.204 li
283.84 89.9112 li
253.613 89.9112 li
253.613 118.204 li
cp
284.585 119.695 mo
252.868 119.695 li
252.456 119.695 252.123 119.361 252.123 118.95 cv
252.123 89.166 li
252.123 88.7544 252.456 88.4208 252.868 88.4208 cv
284.585 88.4208 li
284.996 88.4208 285.33 88.7544 285.33 89.166 cv
285.33 118.95 li
285.33 119.361 284.996 119.695 284.585 119.695 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
288.609 107.444 mo
288.198 107.444 287.864 107.11 287.864 106.699 cv
287.864 101.417 li
287.864 101.005 288.198 100.672 288.609 100.672 cv
289.021 100.672 289.354 101.005 289.354 101.417 cv
289.354 106.699 li
289.354 107.11 289.021 107.444 288.609 107.444 cv
cp
f
274.174 103.526 mo
270.969 106.731 li
261.551 97.3137 li
264.756 94.1087 li
274.174 103.526 li
cp
0 0 0 0 cmyk
f
262.605 97.3137 mo
270.969 105.677 li
273.12 103.526 li
264.756 95.1625 li
262.605 97.3137 li
cp
270.969 107.476 mo
270.771 107.476 270.581 107.398 270.442 107.258 cv
261.024 97.8407 li
260.884 97.7009 260.806 97.5114 260.806 97.3137 cv
260.806 97.1161 260.884 96.9265 261.024 96.7868 cv
264.229 93.5817 li
264.52 93.2907 264.992 93.2908 265.283 93.5817 cv
274.701 102.999 li
274.992 103.29 274.992 103.762 274.701 104.053 cv
271.496 107.258 li
271.356 107.398 271.166 107.476 270.969 107.476 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
270.969 106.731 mo
276.243 108.801 li
274.174 103.526 li
270.969 106.731 li
cp
0 0 0 0 cmyk
f
272.3 106.453 mo
274.926 107.484 li
273.896 104.858 li
272.3 106.453 li
cp
276.243 109.546 mo
276.152 109.546 276.06 109.529 275.971 109.495 cv
270.696 107.425 li
270.462 107.333 270.291 107.13 270.239 106.884 cv
270.188 106.637 270.264 106.382 270.442 106.204 cv
273.647 102.999 li
273.824 102.821 274.08 102.745 274.326 102.797 cv
274.572 102.848 274.776 103.02 274.867 103.254 cv
276.937 108.529 li
277.045 108.805 276.98 109.118 276.77 109.328 cv
276.628 109.47 276.437 109.546 276.243 109.546 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
267.702 97.0549 mo
264.497 100.26 li
261.551 97.3137 li
264.756 94.1087 li
267.702 97.0549 li
cp
0 0 0 0 cmyk
f
262.605 97.3137 mo
264.497 99.2061 li
266.648 97.0549 li
264.756 95.1625 li
262.605 97.3137 li
cp
264.497 101.005 mo
264.307 101.005 264.116 100.932 263.97 100.787 cv
261.024 97.8407 li
260.884 97.7009 260.806 97.5114 260.806 97.3137 cv
260.806 97.1161 260.884 96.9265 261.024 96.7868 cv
264.229 93.5817 li
264.52 93.2907 264.992 93.2908 265.283 93.5817 cv
268.229 96.5279 li
268.369 96.6677 268.448 96.8572 268.448 97.0549 cv
268.448 97.2525 268.369 97.4421 268.229 97.5818 cv
265.024 100.787 li
264.879 100.932 264.688 101.005 264.497 101.005 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
276.243 112.848 mo
265.879 112.848 li
265.467 112.848 265.134 112.514 265.134 112.103 cv
265.134 111.691 265.467 111.358 265.879 111.358 cv
276.243 111.358 li
276.655 111.358 276.989 111.691 276.989 112.103 cv
276.989 112.514 276.655 112.848 276.243 112.848 cv
cp
f
18.3285 86.1936 mo
16.2682 86.1936 14.592 87.8698 14.592 89.9301 cv
14.592 120.284 li
14.592 122.345 16.2682 124.021 18.3285 124.021 cv
33.4938 124.021 li
35.5541 124.021 37.2303 122.345 37.2303 120.284 cv
37.2303 89.9301 li
37.2303 87.8698 35.5541 86.1936 33.4938 86.1936 cv
18.3285 86.1936 li
cp
33.4938 125.511 mo
18.3285 125.511 li
15.4464 125.511 13.1016 123.167 13.1016 120.284 cv
13.1016 89.9301 li
13.1016 87.048 15.4464 84.7033 18.3285 84.7033 cv
33.4938 84.7033 li
36.3759 84.7033 38.7207 87.048 38.7207 89.9301 cv
38.7207 120.284 li
38.7207 123.167 36.3759 125.511 33.4938 125.511 cv
cp
f
14.592 116.661 mo
37.2303 116.661 li
37.2303 90.6753 li
14.592 90.6753 li
14.592 116.661 li
cp
37.9755 118.151 mo
13.8468 118.151 li
13.4353 118.151 13.1016 117.818 13.1016 117.406 cv
13.1016 89.9301 li
13.1016 89.5185 13.4353 89.1849 13.8468 89.1849 cv
37.9755 89.1849 li
38.387 89.1849 38.7207 89.5185 38.7207 89.9301 cv
38.7207 117.406 li
38.7207 117.818 38.387 118.151 37.9755 118.151 cv
cp
f
28.199 121.637 mo
23.6233 121.637 li
23.2117 121.637 22.8781 121.304 22.8781 120.892 cv
22.8781 120.481 23.2117 120.147 23.6233 120.147 cv
28.199 120.147 li
28.6105 120.147 28.9442 120.481 28.9442 120.892 cv
28.9442 121.304 28.6105 121.637 28.199 121.637 cv
cp
f
46.3255 103.433 mo
50.8698 98.8888 50.8698 91.5211 46.3255 86.9768 cv
41.7813 82.4325 34.4135 82.4325 29.8693 86.9768 cv
26.418 90.428 25.5887 95.5076 27.3797 99.7423 cv
26.2172 107.085 li
33.5602 105.923 li
33.5601 105.923 li
37.7947 107.714 42.8743 106.884 46.3255 103.433 cv
cp
.348486 0 .00491341 0 cmyk
f
38.0974 84.3189 mo
35.3081 84.3189 32.5197 85.3803 30.3962 87.5038 cv
28.8329 89.067 27.7939 91.0374 27.3913 93.202 cv
26.998 95.317 27.2313 97.4782 28.066 99.452 cv
28.1203 99.5803 28.1375 99.7212 28.1157 99.8588 cv
27.1136 106.189 li
33.4287 105.189 li
33.5671 105.164 33.7133 105.178 33.8504 105.236 cv
35.8241 106.071 37.9854 106.304 40.1004 105.911 cv
42.2649 105.508 44.2354 104.469 45.7986 102.906 cv
45.7986 102.906 li
50.045 98.6597 50.045 91.7502 45.7986 87.5037 cv
43.6756 85.3808 40.8861 84.3189 38.0974 84.3189 cv
cp
26.2171 107.83 mo
26.0211 107.83 25.831 107.753 25.6902 107.612 cv
25.5216 107.443 25.4438 107.204 25.4812 106.969 cv
26.611 99.8327 li
25.7294 97.6435 25.4923 95.2615 25.926 92.9295 cv
26.3839 90.4676 27.5652 88.227 29.3423 86.4499 cv
34.1699 81.6224 42.0249 81.6223 46.8525 86.4498 cv
51.6799 91.2774 51.6799 99.1324 46.8525 103.96 cv
46.8525 103.96 46.8525 103.96 46.8525 103.96 cv
45.0754 105.737 42.8347 106.918 40.3728 107.376 cv
38.0411 107.81 35.6591 107.573 33.4699 106.692 cv
26.3337 107.821 li
26.2948 107.827 26.2558 107.83 26.2171 107.83 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
45.2193 100.207 mo
31.0661 100.207 li
31.0661 90.4465 li
45.2193 90.4465 li
45.2193 100.207 li
cp
0 0 0 0 cmyk
f
31.8113 99.4621 mo
44.4741 99.4621 li
44.4741 91.1917 li
31.8113 91.1917 li
31.8113 99.4621 li
cp
45.2193 100.952 mo
31.0661 100.952 li
30.6546 100.952 30.3209 100.619 30.3209 100.207 cv
30.3209 90.4465 li
30.3209 90.0349 30.6546 89.7013 31.0661 89.7013 cv
45.2193 89.7013 li
45.6308 89.7013 45.9645 90.0349 45.9645 90.4465 cv
45.9645 100.207 li
45.9645 100.619 45.6308 100.952 45.2193 100.952 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
31.0661 90.4465 mo
38.1427 96.791 li
45.2193 90.4465 li
31.0661 90.4465 li
cp
0 0 0 0 cmyk
f
33.0136 91.1917 mo
38.1427 95.7902 li
43.2718 91.1917 li
33.0136 91.1917 li
cp
38.1427 97.5362 mo
37.9648 97.5362 37.7868 97.4727 37.6452 97.3459 cv
30.5686 91.0013 li
30.3387 90.7952 30.2598 90.4686 30.3701 90.1802 cv
30.4805 89.8918 30.7573 89.7013 31.0661 89.7013 cv
45.2193 89.7013 li
45.528 89.7013 45.8049 89.8918 45.9153 90.1802 cv
46.0256 90.4686 45.9466 90.7952 45.7167 91.0013 cv
38.6402 97.3459 li
38.4986 97.4727 38.3206 97.5362 38.1427 97.5362 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
39.2472 179.928 mo
18.7608 179.928 li
18.7608 189.559 li
39.2472 189.559 li
39.2472 179.928 li
cp
0 0 0 0 cmyk
f
19.506 188.813 mo
38.5021 188.813 li
38.5021 180.673 li
19.506 180.673 li
19.506 188.813 li
cp
39.2473 190.304 mo
18.7608 190.304 li
18.3493 190.304 18.0156 189.97 18.0156 189.559 cv
18.0156 179.928 li
18.0156 179.516 18.3493 179.183 18.7608 179.183 cv
39.2473 179.183 li
39.6588 179.183 39.9924 179.516 39.9924 179.928 cv
39.9924 189.559 li
39.9924 189.97 39.6588 190.304 39.2473 190.304 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
53.9097 183.123 mo
4.09834 183.123 li
4.09834 151.484 li
53.9097 151.484 li
53.9097 183.123 li
cp
0 0 0 0 cmyk
f
4.84351 182.378 mo
53.1646 182.378 li
53.1646 152.229 li
4.84351 152.229 li
4.84351 182.378 li
cp
53.9098 183.869 mo
4.09832 183.869 li
3.68679 183.869 3.35313 183.535 3.35313 183.123 cv
3.35313 151.484 li
3.35313 151.073 3.68679 150.739 4.09832 150.739 cv
53.9098 150.739 li
54.3213 150.739 54.6549 151.073 54.6549 151.484 cv
54.6549 183.123 li
54.6549 183.535 54.3213 183.869 53.9098 183.869 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
53.9097 178.161 mo
4.09834 178.161 li
4.09834 154.68 li
53.9097 154.68 li
53.9097 178.161 li
cp
.348486 0 .00491341 0 cmyk
f
4.84351 177.416 mo
53.1646 177.416 li
53.1646 155.425 li
4.84351 155.425 li
4.84351 177.416 li
cp
53.9098 178.906 mo
4.09832 178.906 li
3.68679 178.906 3.35313 178.573 3.35313 178.161 cv
3.35313 154.68 li
3.35313 154.268 3.68679 153.935 4.09832 153.935 cv
53.9098 153.935 li
54.3213 153.935 54.6549 154.268 54.6549 154.68 cv
54.6549 178.161 li
54.6549 178.573 54.3213 178.906 53.9098 178.906 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
13.9703 164.139 mo
13.9703 164.139 li
9.89241 166.469 li
13.9703 168.798 li
13.9703 168.798 li
13.9703 171.193 15.9119 173.135 18.307 173.135 cv
41.9743 173.135 li
44.3694 173.135 46.311 171.193 46.311 168.798 cv
46.311 164.139 li
46.311 161.744 44.3694 159.802 41.9743 159.802 cv
18.307 159.802 li
15.9119 159.802 13.9703 161.744 13.9703 164.139 cv
cp
0 0 0 0 cmyk
f
11.3946 166.469 mo
14.3399 168.151 li
14.5722 168.284 14.7155 168.531 14.7155 168.798 cv
14.7155 170.779 16.3267 172.39 18.307 172.39 cv
41.9743 172.39 li
43.9546 172.39 45.5658 170.779 45.5658 168.798 cv
45.5658 164.139 li
45.5658 162.158 43.9546 160.547 41.9743 160.547 cv
18.307 160.547 li
16.3267 160.547 14.7155 162.158 14.7155 164.139 cv
14.7155 164.406 14.5722 164.653 14.3399 164.786 cv
11.3946 166.469 li
cp
41.9743 173.88 mo
18.307 173.88 li
15.6542 173.88 13.4695 171.837 13.2442 169.242 cv
9.52279 167.116 li
9.2905 166.983 9.14721 166.736 9.14721 166.469 cv
9.14721 166.201 9.2905 165.954 9.52279 165.821 cv
13.2442 163.695 li
13.4695 161.1 15.6542 159.057 18.307 159.057 cv
41.9743 159.057 li
44.7764 159.057 47.0562 161.337 47.0562 164.139 cv
47.0562 168.798 li
47.0562 171.6 44.7764 173.88 41.9743 173.88 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
18.5265 168.917 mo
17.0966 168.917 li
17.0966 163.542 li
20.2725 163.542 li
20.2725 164.708 li
18.5265 164.708 li
18.5265 165.733 li
20.1365 165.733 li
20.1365 166.898 li
18.5265 166.898 li
18.5265 168.917 li
cp
.75021 .679683 .670222 .90164 cmyk
f
22.3494 166.825 mo
22.3494 167.183 22.3972 167.455 22.4928 167.643 cv
22.5884 167.83 22.7488 167.924 22.9743 167.924 cv
23.1973 167.924 23.3547 167.83 23.4467 167.643 cv
23.5386 167.455 23.5845 167.183 23.5845 166.825 cv
23.5845 166.47 23.5379 166.201 23.4448 166.02 cv
23.3516 165.839 23.1924 165.748 22.9669 165.748 cv
22.7464 165.748 22.5884 165.838 22.4928 166.018 cv
22.3972 166.198 22.3494 166.467 22.3494 166.825 cv
cp
25.0475 166.825 mo
25.0475 167.506 24.8643 168.037 24.4979 168.418 cv
24.1316 168.799 23.6188 168.99 22.9596 168.99 cv
22.3273 168.99 21.8243 168.795 21.4506 168.406 cv
21.077 168.016 20.8901 167.489 20.8901 166.825 cv
20.8901 166.146 21.0732 165.619 21.4397 165.243 cv
21.8059 164.866 22.32 164.678 22.9816 164.678 cv
23.3909 164.678 23.7523 164.765 24.066 164.939 cv
24.3797 165.113 24.6216 165.363 24.792 165.687 cv
24.9623 166.012 25.0475 166.391 25.0475 166.825 cv
cp
f
27.3045 168.917 mo
25.8672 168.917 li
25.8672 163.197 li
27.3045 163.197 li
27.3045 168.917 li
cp
f
29.7378 168.917 mo
28.3006 168.917 li
28.3006 163.197 li
29.7378 163.197 li
29.7378 168.917 li
cp
f
32.0132 166.825 mo
32.0132 167.183 32.061 167.455 32.1566 167.643 cv
32.2521 167.83 32.4127 167.924 32.6381 167.924 cv
32.8611 167.924 33.0186 167.83 33.1105 167.643 cv
33.2024 167.455 33.2483 167.183 33.2483 166.825 cv
33.2483 166.47 33.2017 166.201 33.1087 166.02 cv
33.0154 165.839 32.8562 165.748 32.6308 165.748 cv
32.4102 165.748 32.2521 165.838 32.1566 166.018 cv
32.061 166.198 32.0132 166.467 32.0132 166.825 cv
cp
34.7113 166.825 mo
34.7113 167.506 34.5281 168.037 34.1618 168.418 cv
33.7953 168.799 33.2826 168.99 32.6234 168.99 cv
31.9912 168.99 31.4882 168.795 31.1145 168.406 cv
30.7408 168.016 30.5539 167.489 30.5539 166.825 cv
30.5539 166.146 30.7371 165.619 31.1035 165.243 cv
31.4698 164.866 31.9838 164.678 32.6455 164.678 cv
33.0547 164.678 33.4161 164.765 33.7299 164.939 cv
34.0435 165.113 34.2855 165.363 34.4558 165.687 cv
34.6261 166.012 34.7113 166.391 34.7113 166.825 cv
cp
f
39.115 168.917 mo
38.6445 166.932 li
38.5342 166.332 li
38.4607 165.851 li
38.4386 165.851 li
38.3185 166.537 38.2377 166.97 38.1961 167.148 cv
37.7732 168.917 li
36.2625 168.917 li
35.1267 164.752 li
36.5419 164.752 li
36.88 166.351 li
36.9879 166.9 37.0503 167.356 37.0675 167.718 cv
37.0896 167.718 li
37.0969 167.493 37.1643 167.064 37.2918 166.432 cv
37.6777 164.752 li
39.2657 164.752 li
39.6185 166.454 li
39.7313 166.995 39.8024 167.417 39.8318 167.718 cv
39.8538 167.718 li
39.8685 167.532 39.893 167.3 39.9273 167.022 cv
39.9617 166.744 39.9996 166.52 40.0413 166.351 cv
40.4088 164.752 li
41.7947 164.752 li
40.6515 168.917 li
39.115 168.917 li
cp
f
42.2027 168.306 mo
42.2027 168.083 42.2688 167.91 42.4011 167.786 cv
42.5335 167.662 42.7259 167.601 42.9783 167.601 cv
43.2283 167.601 43.4176 167.662 43.5462 167.786 cv
43.6749 167.91 43.7392 168.083 43.7392 168.306 cv
43.7392 168.527 43.6724 168.699 43.5389 168.823 cv
43.4053 168.946 43.2184 169.008 42.9783 169.008 cv
42.7357 169.008 42.5457 168.946 42.4086 168.823 cv
42.2712 168.699 42.2027 168.527 42.2027 168.306 cv
cp
43.5885 167.02 mo
42.3755 167.02 li
42.188 163.542 li
43.776 163.542 li
43.5885 167.02 li
cp
f
42.9912 192.965 mo
15.0169 192.965 li
15.0169 189.559 li
42.9912 189.559 li
42.9912 192.965 li
cp
0 0 0 0 cmyk
f
15.7621 192.22 mo
42.246 192.22 li
42.246 190.304 li
15.7621 190.304 li
15.7621 192.22 li
cp
42.9912 193.71 mo
15.0169 193.71 li
14.6054 193.71 14.2717 193.377 14.2717 192.965 cv
14.2717 189.559 li
14.2717 189.147 14.6054 188.813 15.0169 188.813 cv
42.9912 188.813 li
43.4027 188.813 43.7364 189.147 43.7364 189.559 cv
43.7364 192.965 li
43.7364 193.377 43.4027 193.71 42.9912 193.71 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
44.5891 223.299 mo
44.5891 255.967 li
44.5891 258.006 42.9363 259.659 40.8974 259.659 cv
15.2107 259.659 li
13.1719 259.659 11.519 258.006 11.519 255.967 cv
11.519 223.299 li
11.519 221.261 13.1719 219.608 15.2107 219.608 cv
40.8974 219.608 li
42.9363 219.608 44.5891 221.261 44.5891 223.299 cv
cp
0 0 0 0 cmyk
f
15.2107 220.353 mo
13.586 220.353 12.2642 221.675 12.2642 223.299 cv
12.2642 255.967 li
12.2642 257.592 13.586 258.914 15.2107 258.914 cv
40.8974 258.914 li
42.5222 258.914 43.8439 257.592 43.8439 255.967 cv
43.8439 223.299 li
43.8439 221.675 42.5222 220.353 40.8974 220.353 cv
15.2107 220.353 li
cp
40.8974 260.404 mo
15.2107 260.404 li
12.7642 260.404 10.7738 258.414 10.7738 255.967 cv
10.7738 223.299 li
10.7738 220.853 12.7642 218.863 15.2107 218.863 cv
40.8974 218.863 li
43.3439 218.863 45.3343 220.853 45.3343 223.299 cv
45.3343 255.967 li
45.3343 258.414 43.3439 260.404 40.8974 260.404 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
18.0029 219.608 mo
18.0029 259.659 li
15.2107 259.659 li
13.1719 259.659 11.519 258.006 11.519 255.967 cv
11.519 223.299 li
11.519 221.261 13.1719 219.608 15.2107 219.608 cv
18.0029 219.608 li
cp
.348486 0 .00491341 0 cmyk
f
15.2107 220.353 mo
13.586 220.353 12.2642 221.675 12.2642 223.299 cv
12.2642 255.967 li
12.2642 257.592 13.586 258.914 15.2107 258.914 cv
17.2578 258.914 li
17.2578 220.353 li
15.2107 220.353 li
cp
18.003 260.404 mo
15.2107 260.404 li
12.7642 260.404 10.7738 258.414 10.7738 255.967 cv
10.7738 223.299 li
10.7738 220.853 12.7642 218.863 15.2107 218.863 cv
18.003 218.863 li
18.4145 218.863 18.7482 219.196 18.7482 219.608 cv
18.7482 259.659 li
18.7482 260.07 18.4145 260.404 18.003 260.404 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
13.7705 225.787 mo
9.33562 225.787 li
13.7705 225.787 li
cp
.348486 0 .00491341 0 cmyk
f
13.7705 226.532 mo
9.33562 226.532 li
8.92409 226.532 8.59043 226.198 8.59043 225.787 cv
8.59043 225.375 8.92409 225.042 9.33562 225.042 cv
13.7705 225.042 li
14.1821 225.042 14.5157 225.375 14.5157 225.787 cv
14.5157 226.198 14.1821 226.532 13.7705 226.532 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
13.7705 231.325 mo
9.33562 231.325 li
13.7705 231.325 li
cp
.348486 0 .00491341 0 cmyk
f
13.7705 232.07 mo
9.33562 232.07 li
8.92409 232.07 8.59043 231.737 8.59043 231.325 cv
8.59043 230.914 8.92409 230.58 9.33562 230.58 cv
13.7705 230.58 li
14.1821 230.58 14.5157 230.914 14.5157 231.325 cv
14.5157 231.737 14.1821 232.07 13.7705 232.07 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
13.7705 236.864 mo
9.33562 236.864 li
13.7705 236.864 li
cp
.348486 0 .00491341 0 cmyk
f
13.7705 237.609 mo
9.33562 237.609 li
8.92409 237.609 8.59043 237.275 8.59043 236.864 cv
8.59043 236.452 8.92409 236.119 9.33562 236.119 cv
13.7705 236.119 li
14.1821 236.119 14.5157 236.452 14.5157 236.864 cv
14.5157 237.275 14.1821 237.609 13.7705 237.609 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
13.7705 242.403 mo
9.33562 242.403 li
13.7705 242.403 li
cp
.348486 0 .00491341 0 cmyk
f
13.7705 243.148 mo
9.33562 243.148 li
8.92409 243.148 8.59043 242.814 8.59043 242.403 cv
8.59043 241.991 8.92409 241.657 9.33562 241.657 cv
13.7705 241.657 li
14.1821 241.657 14.5157 241.991 14.5157 242.403 cv
14.5157 242.814 14.1821 243.148 13.7705 243.148 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
13.7705 247.941 mo
9.33562 247.941 li
13.7705 247.941 li
cp
.348486 0 .00491341 0 cmyk
f
13.7705 248.686 mo
9.33562 248.686 li
8.92409 248.686 8.59043 248.353 8.59043 247.941 cv
8.59043 247.53 8.92409 247.196 9.33562 247.196 cv
13.7705 247.196 li
14.1821 247.196 14.5157 247.53 14.5157 247.941 cv
14.5157 248.353 14.1821 248.686 13.7705 248.686 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
13.7705 253.48 mo
9.33562 253.48 li
13.7705 253.48 li
cp
.348486 0 .00491341 0 cmyk
f
13.7705 254.225 mo
9.33562 254.225 li
8.92409 254.225 8.59043 253.891 8.59043 253.48 cv
8.59043 253.068 8.92409 252.735 9.33562 252.735 cv
13.7705 252.735 li
14.1821 252.735 14.5157 253.068 14.5157 253.48 cv
14.5157 253.891 14.1821 254.225 13.7705 254.225 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
36.7017 234.651 mo
36.7017 237.88 34.0842 240.498 30.8553 240.498 cv
27.6265 240.498 25.009 237.88 25.009 234.651 cv
25.009 231.423 27.6265 228.805 30.8553 228.805 cv
34.0842 228.805 36.7017 231.423 36.7017 234.651 cv
cp
.348486 0 .00491341 0 cmyk
f
30.8553 229.55 mo
28.0425 229.55 25.7541 231.839 25.7541 234.651 cv
25.7541 237.464 28.0425 239.753 30.8553 239.753 cv
33.6681 239.753 35.9566 237.464 35.9566 234.651 cv
35.9566 231.839 33.6681 229.55 30.8553 229.55 cv
cp
30.8553 241.243 mo
27.2207 241.243 24.2637 238.286 24.2637 234.651 cv
24.2637 231.017 27.2207 228.06 30.8553 228.06 cv
34.49 228.06 37.4469 231.017 37.4469 234.651 cv
37.4469 238.286 34.49 241.243 30.8553 241.243 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
36.8385 248.312 mo
24.8722 248.312 li
24.8722 246.55 li
24.8722 243.246 27.5509 240.567 30.8553 240.567 cv
30.8554 240.567 li
34.1598 240.567 36.8385 243.246 36.8385 246.55 cv
36.8385 248.312 li
cp
.348486 0 .00491341 0 cmyk
f
25.6174 247.567 mo
36.0933 247.567 li
36.0933 246.55 li
36.0933 243.662 33.7435 241.312 30.8553 241.312 cv
27.9671 241.312 25.6174 243.662 25.6174 246.55 cv
25.6174 247.567 li
cp
36.8385 249.057 mo
24.8722 249.057 li
24.4607 249.057 24.127 248.724 24.127 248.312 cv
24.127 246.55 li
24.127 242.84 27.1453 239.822 30.8553 239.822 cv
34.5654 239.822 37.5837 242.84 37.5837 246.55 cv
37.5837 248.312 li
37.5837 248.724 37.25 249.057 36.8385 249.057 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
126.044 193.867 mo
89.7985 193.867 li
94.9837 183.834 li
120.859 183.834 li
126.044 193.867 li
cp
0 0 0 0 cmyk
f
91.0225 193.122 mo
124.82 193.122 li
120.405 184.579 li
95.4374 184.579 li
91.0225 193.122 li
cp
126.044 194.612 mo
89.7986 194.612 li
89.5386 194.612 89.2973 194.477 89.1621 194.255 cv
89.0268 194.033 89.0171 193.756 89.1366 193.525 cv
94.3217 183.492 li
94.4496 183.244 94.705 183.089 94.9837 183.089 cv
120.859 183.089 li
121.138 183.089 121.393 183.244 121.521 183.492 cv
126.706 193.525 li
126.826 193.756 126.816 194.033 126.681 194.255 cv
126.546 194.477 126.304 194.612 126.044 194.612 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
120.468 163.441 mo
120.468 156.512 114.85 150.895 107.921 150.895 cv
100.992 150.895 95.3753 156.512 95.3753 163.441 cv
95.3753 163.441 95.0633 176.061 107.921 188.919 cv
120.779 176.061 120.468 163.441 120.468 163.441 cv
cp
.348486 0 .00491341 0 cmyk
f
107.921 151.64 mo
101.414 151.64 96.1205 156.934 96.1205 163.441 cv
96.1205 163.447 96.1204 163.453 96.1202 163.459 cv
96.1196 163.489 96.0696 166.597 97.5594 171.203 cv
98.4339 173.906 99.6602 176.589 101.204 179.178 cv
103.016 182.217 105.274 185.134 107.921 187.857 cv
110.569 185.134 112.826 182.217 114.639 179.178 cv
116.183 176.589 117.409 173.906 118.283 171.203 cv
119.773 166.597 119.723 163.489 119.723 163.458 cv
119.722 163.453 119.722 163.446 119.722 163.441 cv
119.722 156.934 114.428 151.64 107.921 151.64 cv
cp
107.921 189.664 mo
107.724 189.664 107.534 189.586 107.394 189.446 cv
104.418 186.469 101.895 183.256 99.896 179.894 cv
98.2935 177.2 97.0221 174.404 96.117 171.586 cv
94.5953 166.847 94.6254 163.674 94.6301 163.433 cv
94.6344 156.108 100.595 150.15 107.921 150.15 cv
115.248 150.15 121.208 156.107 121.213 163.433 cv
121.217 163.671 121.248 166.845 119.726 171.586 cv
118.821 174.404 117.549 177.2 115.947 179.894 cv
113.948 183.256 111.425 186.469 108.448 189.446 cv
108.309 189.586 108.119 189.664 107.921 189.664 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
114.485 164.204 mo
114.485 167.829 111.546 170.767 107.921 170.767 cv
104.297 170.767 101.358 167.829 101.358 164.204 cv
101.358 160.579 104.297 157.64 107.921 157.64 cv
111.546 157.64 114.485 160.579 114.485 164.204 cv
cp
0 0 0 0 cmyk
f
107.921 158.386 mo
104.713 158.386 102.103 160.996 102.103 164.204 cv
102.103 167.412 104.713 170.022 107.921 170.022 cv
111.13 170.022 113.74 167.412 113.74 164.204 cv
113.74 160.996 111.13 158.386 107.921 158.386 cv
cp
107.921 171.512 mo
103.891 171.512 100.613 168.234 100.613 164.204 cv
100.613 160.174 103.891 156.895 107.921 156.895 cv
111.951 156.895 115.23 160.174 115.23 164.204 cv
115.23 168.234 111.951 171.512 107.921 171.512 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
107.921 166.161 mo
107.731 166.161 107.547 166.089 107.408 165.957 cv
104.514 163.208 li
104.216 162.925 104.204 162.453 104.487 162.155 cv
104.77 161.856 105.242 161.844 105.54 162.128 cv
107.813 164.285 li
113.878 155.78 li
114.117 155.445 114.582 155.367 114.917 155.606 cv
115.253 155.845 115.33 156.311 115.091 156.646 cv
108.528 165.849 li
108.403 166.025 108.208 166.137 107.993 166.158 cv
107.969 166.16 107.945 166.161 107.921 166.161 cv
cp
f
209.822 186.68 mo
163.844 186.68 li
163.844 151.572 li
209.822 151.572 li
209.822 186.68 li
cp
.348486 0 .00491341 0 cmyk
f
164.589 185.935 mo
209.076 185.935 li
209.076 152.317 li
164.589 152.317 li
164.589 185.935 li
cp
209.822 187.425 mo
163.844 187.425 li
163.433 187.425 163.099 187.092 163.099 186.68 cv
163.099 151.572 li
163.099 151.16 163.433 150.827 163.844 150.827 cv
209.822 150.827 li
210.233 150.827 210.567 151.16 210.567 151.572 cv
210.567 186.68 li
210.567 187.092 210.233 187.425 209.822 187.425 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
209.822 159.419 mo
163.844 159.419 li
163.844 151.572 li
209.822 151.572 li
209.822 159.419 li
cp
0 0 0 0 cmyk
f
164.589 158.674 mo
209.076 158.674 li
209.076 152.317 li
164.589 152.317 li
164.589 158.674 li
cp
209.822 160.164 mo
163.844 160.164 li
163.433 160.164 163.099 159.831 163.099 159.419 cv
163.099 151.572 li
163.099 151.16 163.433 150.827 163.844 150.827 cv
209.822 150.827 li
210.233 150.827 210.567 151.16 210.567 151.572 cv
210.567 159.419 li
210.567 159.831 210.233 160.164 209.822 160.164 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
181.019 164.755 mo
194.719 172.664 li
181.019 180.574 li
181.019 164.755 li
cp
0 0 0 0 cmyk
f
181.764 166.045 mo
181.764 179.283 li
193.229 172.664 li
181.764 166.045 li
cp
181.019 181.319 mo
180.89 181.319 180.762 181.286 180.647 181.22 cv
180.416 181.086 180.274 180.84 180.274 180.574 cv
180.274 164.755 li
180.274 164.488 180.416 164.242 180.647 164.109 cv
180.877 163.976 181.161 163.976 181.392 164.109 cv
195.092 172.019 li
195.322 172.152 195.464 172.398 195.464 172.664 cv
195.464 172.931 195.322 173.177 195.092 173.31 cv
181.392 181.22 li
181.276 181.286 181.148 181.319 181.019 181.319 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
169.803 155.495 mo
169.803 156.112 169.303 156.611 168.687 156.611 cv
168.071 156.611 167.571 156.112 167.571 155.495 cv
167.571 154.879 168.071 154.379 168.687 154.379 cv
169.303 154.379 169.803 154.879 169.803 155.495 cv
cp
f
173.417 155.495 mo
173.417 156.112 172.917 156.611 172.301 156.611 cv
171.684 156.611 171.185 156.112 171.185 155.495 cv
171.185 154.879 171.684 154.379 172.301 154.379 cv
172.917 154.379 173.417 154.879 173.417 155.495 cv
cp
f
177.031 155.495 mo
177.031 156.112 176.531 156.611 175.915 156.611 cv
175.298 156.611 174.799 156.112 174.799 155.495 cv
174.799 154.879 175.298 154.379 175.915 154.379 cv
176.531 154.379 177.031 154.879 177.031 155.495 cv
cp
f
207.011 178.035 mo
208.51 182.651 li
208.585 182.882 208.8 183.038 209.043 183.038 cv
213.896 183.038 li
214.438 183.038 214.664 183.732 214.225 184.05 cv
210.299 186.903 li
210.102 187.046 210.02 187.298 210.095 187.529 cv
211.595 192.145 li
211.763 192.66 211.172 193.089 210.734 192.77 cv
206.807 189.918 li
206.611 189.775 206.345 189.775 206.149 189.918 cv
202.223 192.77 li
201.784 193.089 201.194 192.66 201.362 192.145 cv
202.861 187.529 li
202.936 187.298 202.854 187.046 202.658 186.903 cv
198.731 184.05 li
198.293 183.732 198.518 183.038 199.06 183.038 cv
203.914 183.038 li
204.156 183.038 204.371 182.882 204.446 182.651 cv
205.946 178.035 li
206.114 177.52 206.843 177.52 207.011 178.035 cv
cp
0 0 0 0 cmyk
f
199.631 183.783 mo
203.096 186.3 li
203.555 186.633 203.745 187.22 203.57 187.759 cv
202.247 191.832 li
205.711 189.315 li
206.17 188.981 206.787 188.981 207.245 189.315 cv
210.71 191.832 li
209.387 187.759 li
209.211 187.22 209.402 186.633 209.86 186.3 cv
213.325 183.783 li
209.043 183.783 li
208.476 183.783 207.977 183.421 207.802 182.881 cv
206.478 178.808 li
205.155 182.881 li
204.98 183.421 204.481 183.783 203.914 183.783 cv
199.631 183.783 li
cp
201.894 193.623 mo
201.625 193.623 201.356 193.54 201.127 193.373 cv
200.668 193.04 200.478 192.454 200.653 191.914 cv
202.111 187.427 li
198.294 184.653 li
197.835 184.32 197.644 183.734 197.819 183.194 cv
197.995 182.655 198.493 182.293 199.06 182.293 cv
203.779 182.293 li
205.237 177.805 li
205.412 177.266 205.911 176.903 206.478 176.903 cv
207.045 176.903 207.544 177.266 207.719 177.805 cv
207.719 177.805 li
209.177 182.293 li
213.896 182.293 li
214.463 182.293 214.962 182.655 215.137 183.194 cv
215.312 183.733 215.122 184.32 214.663 184.653 cv
210.846 187.427 li
212.304 191.914 li
212.479 192.454 212.289 193.04 211.83 193.373 cv
211.371 193.707 210.755 193.707 210.296 193.373 cv
206.478 190.6 li
202.661 193.373 li
202.431 193.54 202.163 193.623 201.894 193.623 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
251.293 286.556 mo
249.804 286.556 248.593 287.767 248.593 289.256 cv
248.593 312.591 li
248.593 314.08 249.804 315.291 251.293 315.291 cv
262.951 315.291 li
264.44 315.291 265.651 314.08 265.651 312.591 cv
265.651 289.256 li
265.651 287.767 264.44 286.556 262.951 286.556 cv
251.293 286.556 li
cp
262.951 316.782 mo
251.293 316.782 li
248.982 316.782 247.102 314.902 247.102 312.591 cv
247.102 289.256 li
247.102 286.946 248.982 285.066 251.293 285.066 cv
262.951 285.066 li
265.262 285.066 267.141 286.946 267.141 289.256 cv
267.141 312.591 li
267.141 314.902 265.262 316.782 262.951 316.782 cv
cp
f
248.593 309.633 mo
265.651 309.633 li
265.651 290.001 li
248.593 290.001 li
248.593 309.633 li
cp
266.396 311.123 mo
247.847 311.123 li
247.436 311.123 247.102 310.79 247.102 310.378 cv
247.102 289.256 li
247.102 288.845 247.436 288.511 247.847 288.511 cv
266.396 288.511 li
266.808 288.511 267.141 288.845 267.141 289.256 cv
267.141 310.378 li
267.141 310.79 266.808 311.123 266.396 311.123 cv
cp
f
258.881 313.804 mo
255.363 313.804 li
254.951 313.804 254.618 313.47 254.618 313.058 cv
254.618 312.647 254.951 312.313 255.363 312.313 cv
258.881 312.313 li
259.292 312.313 259.626 312.647 259.626 313.058 cv
259.626 313.47 259.292 313.804 258.881 313.804 cv
cp
f
277.116 299.893 mo
275.627 299.893 274.416 301.104 274.416 302.593 cv
274.416 325.928 li
274.416 327.417 275.627 328.628 277.116 328.628 cv
288.774 328.628 li
290.263 328.628 291.475 327.417 291.475 325.928 cv
291.475 302.593 li
291.475 301.104 290.263 299.893 288.774 299.893 cv
277.116 299.893 li
cp
288.774 330.118 mo
277.116 330.118 li
274.806 330.118 272.926 328.239 272.926 325.928 cv
272.926 302.593 li
272.926 300.282 274.806 298.403 277.116 298.403 cv
288.774 298.403 li
291.085 298.403 292.965 300.282 292.965 302.593 cv
292.965 325.928 li
292.965 328.239 291.085 330.118 288.774 330.118 cv
cp
f
273.671 323.715 mo
273.671 302.593 li
292.22 302.593 li
292.22 323.715 li
273.671 323.715 li
cp
.348486 0 .00491341 0 cmyk
f
274.416 322.97 mo
291.475 322.97 li
291.475 303.338 li
274.416 303.338 li
274.416 322.97 li
cp
292.22 324.46 mo
273.671 324.46 li
273.259 324.46 272.926 324.127 272.926 323.715 cv
272.926 302.593 li
272.926 302.182 273.259 301.848 273.671 301.848 cv
292.22 301.848 li
292.631 301.848 292.965 302.182 292.965 302.593 cv
292.965 323.715 li
292.965 324.127 292.631 324.46 292.22 324.46 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
284.704 327.14 mo
281.186 327.14 li
280.775 327.14 280.441 326.807 280.441 326.395 cv
280.441 325.984 280.775 325.65 281.186 325.65 cv
284.704 325.65 li
285.116 325.65 285.449 325.984 285.449 326.395 cv
285.449 326.807 285.116 327.14 284.704 327.14 cv
cp
f
262.6 303.595 mo
251.644 303.595 li
251.644 296.039 li
262.6 296.039 li
262.6 303.595 li
cp
.348486 0 .00491341 0 cmyk
f
252.389 302.85 mo
261.855 302.85 li
261.855 296.785 li
252.389 296.785 li
252.389 302.85 li
cp
262.6 304.34 mo
251.644 304.34 li
251.232 304.34 250.899 304.007 250.899 303.595 cv
250.899 296.039 li
250.899 295.628 251.232 295.294 251.644 295.294 cv
262.6 295.294 li
263.011 295.294 263.345 295.628 263.345 296.039 cv
263.345 303.595 li
263.345 304.007 263.011 304.34 262.6 304.34 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
251.644 296.039 mo
257.122 300.951 li
262.6 296.039 li
251.644 296.039 li
cp
.348486 0 .00491341 0 cmyk
f
253.591 296.785 mo
257.122 299.95 li
260.652 296.785 li
253.591 296.785 li
cp
257.122 301.696 mo
256.944 301.696 256.766 301.632 256.624 301.505 cv
251.146 296.594 li
250.916 296.388 250.837 296.061 250.948 295.773 cv
251.058 295.485 251.335 295.294 251.644 295.294 cv
262.6 295.294 li
262.908 295.294 263.185 295.485 263.296 295.773 cv
263.406 296.061 263.327 296.388 263.097 296.594 cv
257.619 301.505 li
257.478 301.632 257.3 301.696 257.122 301.696 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
278.988 295.881 mo
278.576 295.881 278.243 295.547 278.243 295.136 cv
278.243 291.541 li
278.243 290.7 277.558 290.015 276.717 290.015 cv
274.07 290.015 li
273.658 290.015 273.325 289.681 273.325 289.27 cv
273.325 288.858 273.658 288.525 274.07 288.525 cv
276.717 288.525 li
278.38 288.525 279.733 289.878 279.733 291.541 cv
279.733 295.136 li
279.733 295.547 279.399 295.881 278.988 295.881 cv
cp
f
275.691 291.148 mo
271.108 289.264 li
275.691 287.609 li
275.691 291.148 li
cp
0 0 0 0 cmyk
f
273.177 289.309 mo
274.945 290.036 li
274.945 288.67 li
273.177 289.309 li
cp
275.69 291.893 mo
275.595 291.893 275.498 291.875 275.407 291.837 cv
270.824 289.953 li
270.54 289.836 270.356 289.556 270.363 289.248 cv
270.369 288.94 270.565 288.668 270.855 288.563 cv
275.437 286.908 li
275.666 286.825 275.92 286.859 276.119 286.999 cv
276.317 287.138 276.436 287.366 276.436 287.609 cv
276.436 291.148 li
276.436 291.397 276.312 291.629 276.105 291.767 cv
275.981 291.851 275.836 291.893 275.69 291.893 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
265.962 325.967 mo
263.316 325.967 li
261.652 325.967 260.299 324.613 260.299 322.95 cv
260.299 319.355 li
260.299 318.944 260.633 318.61 261.044 318.61 cv
261.456 318.61 261.79 318.944 261.79 319.355 cv
261.79 322.95 li
261.79 323.792 262.474 324.476 263.316 324.476 cv
265.962 324.476 li
266.374 324.476 266.708 324.81 266.708 325.221 cv
266.708 325.633 266.374 325.967 265.962 325.967 cv
cp
f
264.342 323.343 mo
268.924 325.227 li
264.342 326.882 li
264.342 323.343 li
cp
0 0 0 0 cmyk
f
265.087 324.455 mo
265.087 325.821 li
266.855 325.182 li
265.087 324.455 li
cp
264.342 327.628 mo
264.191 327.628 264.041 327.582 263.914 327.492 cv
263.715 327.353 263.597 327.125 263.597 326.882 cv
263.597 323.343 li
263.597 323.094 263.721 322.862 263.927 322.724 cv
264.133 322.586 264.395 322.559 264.625 322.654 cv
269.208 324.538 li
269.493 324.655 269.676 324.936 269.67 325.243 cv
269.663 325.551 269.467 325.824 269.178 325.928 cv
264.595 327.583 li
264.513 327.613 264.427 327.628 264.342 327.628 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
281.585 317.486 mo
281.395 317.486 281.211 317.414 281.072 317.281 cv
278.178 314.533 li
277.879 314.25 277.867 313.778 278.15 313.48 cv
278.434 313.181 278.905 313.169 279.204 313.452 cv
281.476 315.61 li
287.542 307.105 li
287.781 306.77 288.246 306.692 288.581 306.931 cv
288.916 307.17 288.994 307.635 288.755 307.97 cv
282.192 317.174 li
282.066 317.349 281.871 317.462 281.656 317.483 cv
281.632 317.485 281.609 317.486 281.585 317.486 cv
cp
f
369.637 179.989 mo
326.851 179.989 li
326.851 151.985 li
369.637 151.985 li
369.637 179.989 li
cp
.348486 0 .00491341 0 cmyk
f
327.596 179.244 mo
368.892 179.244 li
368.892 152.73 li
327.596 152.73 li
327.596 179.244 li
cp
369.637 180.734 mo
326.851 180.734 li
326.439 180.734 326.105 180.4 326.105 179.989 cv
326.105 151.985 li
326.105 151.574 326.439 151.24 326.851 151.24 cv
369.637 151.24 li
370.049 151.24 370.382 151.574 370.382 151.985 cv
370.382 179.989 li
370.382 180.4 370.049 180.734 369.637 180.734 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
341.821 161.025 mo
341.821 162.51 340.617 163.714 339.132 163.714 cv
337.646 163.714 336.442 162.51 336.442 161.025 cv
336.442 159.539 337.646 158.335 339.132 158.335 cv
340.617 158.335 341.821 159.539 341.821 161.025 cv
cp
0 0 0 0 cmyk
f
339.132 159.08 mo
338.06 159.08 337.187 159.952 337.187 161.025 cv
337.187 162.097 338.06 162.969 339.132 162.969 cv
340.204 162.969 341.076 162.097 341.076 161.025 cv
341.076 159.952 340.204 159.08 339.132 159.08 cv
cp
339.132 164.459 mo
337.238 164.459 335.697 162.918 335.697 161.025 cv
335.697 159.131 337.238 157.59 339.132 157.59 cv
341.026 157.59 342.567 159.131 342.567 161.025 cv
342.567 162.918 341.026 164.459 339.132 164.459 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
334.215 173.222 mo
340.545 166.912 li
344.053 169.764 li
351.485 162.159 li
361.949 173.222 li
334.215 173.222 li
cp
0 0 0 0 cmyk
f
336.018 172.476 mo
360.218 172.476 li
351.476 163.234 li
344.586 170.285 li
344.317 170.56 343.882 170.585 343.583 170.342 cv
340.596 167.914 li
336.018 172.476 li
cp
361.949 173.967 mo
334.215 173.967 li
333.913 173.967 333.641 173.785 333.526 173.506 cv
333.411 173.227 333.475 172.907 333.689 172.694 cv
340.019 166.385 li
340.29 166.115 340.719 166.094 341.016 166.334 cv
343.995 168.757 li
350.952 161.638 li
351.093 161.495 351.285 161.414 351.485 161.414 cv
351.487 161.414 351.489 161.414 351.491 161.414 cv
351.694 161.416 351.887 161.5 352.027 161.647 cv
362.49 172.71 li
362.695 172.926 362.751 173.243 362.633 173.516 cv
362.516 173.79 362.247 173.967 361.949 173.967 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
327.596 190.908 mo
368.892 190.908 li
368.892 180.734 li
327.596 180.734 li
327.596 190.908 li
cp
369.637 192.398 mo
326.851 192.398 li
326.439 192.398 326.105 192.064 326.105 191.653 cv
326.105 179.989 li
326.105 179.577 326.439 179.244 326.851 179.244 cv
369.637 179.244 li
370.049 179.244 370.382 179.577 370.382 179.989 cv
370.382 191.653 li
370.382 192.064 370.049 192.398 369.637 192.398 cv
cp
f
332.162 185.932 mo
332.892 186.661 334.457 187.985 336.198 187.985 cv
337.43 187.985 338.573 187.308 339.315 186.74 cv
339.693 186.45 340.005 186.162 340.234 185.934 cv
339.504 185.204 337.94 183.88 336.198 183.88 cv
334.967 183.88 333.823 184.557 333.081 185.126 cv
332.703 185.415 332.391 185.703 332.162 185.932 cv
cp
336.198 189.475 mo
333.09 189.475 330.671 186.526 330.57 186.401 cv
330.349 186.128 330.349 185.737 330.57 185.464 cv
330.671 185.339 333.09 182.39 336.198 182.39 cv
339.307 182.39 341.725 185.339 341.826 185.464 cv
342.047 185.737 342.047 186.128 341.826 186.401 cv
341.725 186.526 339.307 189.475 336.198 189.475 cv
cp
f
336.198 185.109 mo
335.744 185.109 335.374 185.478 335.374 185.933 cv
335.374 186.387 335.744 186.757 336.198 186.757 cv
336.653 186.757 337.022 186.387 337.022 185.933 cv
337.022 185.478 336.653 185.109 336.198 185.109 cv
cp
336.198 188.247 mo
334.922 188.247 333.884 187.209 333.884 185.933 cv
333.884 184.656 334.922 183.618 336.198 183.618 cv
337.474 183.618 338.513 184.656 338.513 185.933 cv
338.513 187.209 337.474 188.247 336.198 188.247 cv
cp
f
347.52 188.672 mo
343.669 188.672 li
343.669 187.729 li
344.965 186.418 li
345.335 186.031 345.577 185.767 345.691 185.625 cv
345.805 185.484 345.884 185.362 345.929 185.26 cv
345.973 185.159 345.996 185.052 345.996 184.941 cv
345.996 184.803 345.951 184.694 345.862 184.614 cv
345.772 184.534 345.646 184.494 345.484 184.494 cv
345.317 184.494 345.148 184.542 344.978 184.638 cv
344.807 184.733 344.614 184.874 344.399 185.061 cv
343.611 184.139 li
343.885 183.894 344.114 183.719 344.301 183.614 cv
344.487 183.509 344.69 183.428 344.909 183.373 cv
345.128 183.317 345.374 183.289 345.647 183.289 cv
345.991 183.289 346.298 183.35 346.568 183.471 cv
346.837 183.592 347.047 183.764 347.196 183.988 cv
347.344 184.212 347.419 184.463 347.419 184.741 cv
347.419 184.949 347.393 185.142 347.341 185.318 cv
347.289 185.495 347.208 185.669 347.099 185.839 cv
346.99 186.01 346.846 186.189 346.666 186.378 cv
346.485 186.567 346.101 186.925 345.513 187.453 cv
345.513 187.489 li
347.52 187.489 li
347.52 188.672 li
cp
.75021 .679683 .670222 .90164 cmyk
f
351.698 184.516 mo
351.698 184.845 351.598 185.128 351.397 185.364 cv
351.196 185.6 350.906 185.771 350.526 185.877 cv
350.526 185.899 li
351.411 186.01 351.854 186.429 351.854 187.155 cv
351.854 187.649 351.659 188.037 351.268 188.32 cv
350.877 188.603 350.335 188.745 349.64 188.745 cv
349.355 188.745 349.09 188.724 348.847 188.683 cv
348.604 188.642 348.341 188.567 348.058 188.458 cv
348.058 187.268 li
348.29 187.386 348.526 187.474 348.767 187.531 cv
349.008 187.588 349.23 187.616 349.433 187.616 cv
349.748 187.616 349.977 187.572 350.121 187.484 cv
350.265 187.395 350.337 187.257 350.337 187.068 cv
350.337 186.923 350.3 186.811 350.225 186.732 cv
350.15 186.654 350.029 186.594 349.862 186.554 cv
349.695 186.514 349.477 186.494 349.208 186.494 cv
348.882 186.494 li
348.882 185.416 li
349.216 185.416 li
349.944 185.416 350.308 185.23 350.308 184.857 cv
350.308 184.717 350.254 184.613 350.147 184.545 cv
350.039 184.477 349.894 184.444 349.713 184.444 cv
349.374 184.444 349.023 184.557 348.66 184.785 cv
348.065 183.827 li
348.346 183.633 348.633 183.495 348.927 183.413 cv
349.221 183.331 349.558 183.289 349.938 183.289 cv
350.487 183.289 350.918 183.398 351.23 183.616 cv
351.542 183.834 351.698 184.134 351.698 184.516 cv
cp
f
353.847 186.026 mo
353.847 186.626 353.885 187.039 353.96 187.264 cv
354.035 187.489 354.16 187.601 354.337 187.601 cv
354.516 187.601 354.643 187.485 354.716 187.253 cv
354.79 187.021 354.827 186.612 354.827 186.026 cv
354.827 185.438 354.79 185.026 354.715 184.79 cv
354.64 184.554 354.514 184.436 354.337 184.436 cv
354.16 184.436 354.035 184.55 353.96 184.778 cv
353.885 185.005 353.847 185.421 353.847 186.026 cv
cp
356.254 186.026 mo
356.254 186.965 356.096 187.653 355.782 188.09 cv
355.467 188.526 354.986 188.745 354.337 188.745 cv
353.703 188.745 353.225 188.517 352.903 188.061 cv
352.581 187.605 352.421 186.926 352.421 186.026 cv
352.421 185.082 352.578 184.39 352.892 183.95 cv
353.207 183.51 353.689 183.289 354.337 183.289 cv
354.969 183.289 355.446 183.519 355.769 183.977 cv
356.092 184.436 356.254 185.119 356.254 186.026 cv
cp
f
88.4623 221.761 mo
86.0206 221.761 84.034 223.747 84.034 226.189 cv
84.034 245.626 li
84.034 248.067 86.0206 250.054 88.4623 250.054 cv
123.502 250.054 li
125.944 250.054 127.93 248.067 127.93 245.626 cv
127.93 226.189 li
127.93 223.747 125.944 221.761 123.502 221.761 cv
88.4623 221.761 li
cp
123.502 251.544 mo
88.4623 251.544 li
85.1988 251.544 82.5436 248.889 82.5436 245.626 cv
82.5436 226.189 li
82.5436 222.925 85.1988 220.27 88.4623 220.27 cv
123.502 220.27 li
126.766 220.27 129.421 222.925 129.421 226.189 cv
129.421 245.626 li
129.421 248.889 126.766 251.544 123.502 251.544 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
91.7851 221.016 mo
123.502 221.016 li
123.502 250.799 li
91.7851 250.799 li
91.7851 221.016 li
cp
.348486 0 .00491341 0 cmyk
f
92.5303 250.054 mo
122.757 250.054 li
122.757 221.761 li
92.5303 221.761 li
92.5303 250.054 li
cp
123.502 251.544 mo
91.7851 251.544 li
91.3736 251.544 91.0399 251.211 91.0399 250.799 cv
91.0399 221.016 li
91.0399 220.604 91.3736 220.27 91.7851 220.27 cv
123.502 220.27 li
123.914 220.27 124.247 220.604 124.247 221.016 cv
124.247 250.799 li
124.247 251.211 123.914 251.544 123.502 251.544 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
87.7607 239.294 mo
87.3492 239.294 87.0155 238.96 87.0155 238.548 cv
87.0155 233.266 li
87.0155 232.855 87.3492 232.521 87.7607 232.521 cv
88.1722 232.521 88.5059 232.855 88.5059 233.266 cv
88.5059 238.548 li
88.5059 238.96 88.1722 239.294 87.7607 239.294 cv
cp
f
111.268 230.381 mo
109.993 230.381 108.364 231.394 107.541 232.243 cv
106.719 231.394 105.09 230.381 103.815 230.381 cv
101.316 230.381 99.769 232.407 99.769 234.906 cv
99.769 238.473 105.796 242.442 107.541 243.345 cv
109.264 242.462 115.314 238.473 115.314 234.906 cv
115.314 232.407 113.767 230.381 111.268 230.381 cv
cp
0 0 0 0 cmyk
f
103.815 231.127 mo
102.843 231.127 102.016 231.495 101.422 232.191 cv
100.836 232.876 100.514 233.84 100.514 234.906 cv
100.514 236.202 101.546 237.815 103.499 239.57 cv
104.934 240.861 106.578 241.951 107.543 242.498 cv
109.674 241.3 114.569 237.755 114.569 234.906 cv
114.569 233.84 114.247 232.876 113.661 232.191 cv
113.067 231.495 112.24 231.127 111.268 231.127 cv
110.276 231.127 108.839 231.975 108.077 232.761 cv
107.936 232.906 107.743 232.988 107.541 232.988 cv
107.541 232.988 li
107.34 232.988 107.147 232.906 107.006 232.761 cv
106.028 231.752 104.588 231.127 103.815 231.127 cv
cp
107.541 244.09 mo
107.424 244.09 107.306 244.063 107.199 244.007 cv
106.388 243.588 104.364 242.352 102.502 240.679 cv
100.194 238.603 99.0238 236.661 99.0238 234.906 cv
99.0238 231.853 101.039 229.636 103.815 229.636 cv
105.158 229.636 106.612 230.472 107.541 231.236 cv
108.471 230.472 109.925 229.636 111.268 229.636 cv
114.044 229.636 116.059 231.853 116.059 234.906 cv
116.059 236.661 114.886 238.606 112.572 240.686 cv
110.694 242.375 108.683 243.598 107.881 244.008 cv
107.775 244.063 107.658 244.09 107.541 244.09 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
120.882 256.397 mo
116.797 252.312 li
116.226 251.741 115.841 251.011 115.693 250.217 cv
115.356 248.413 li
115.28 248.009 115.084 247.638 114.794 247.347 cv
109.699 242.253 li
108.852 241.405 108.852 240.031 109.699 239.184 cv
109.699 239.184 li
110.547 238.336 111.921 238.336 112.768 239.184 cv
112.768 239.184 li
112.913 239.328 115.712 241.894 115.857 241.749 cv
117.031 240.575 li
117.825 239.782 119.111 239.782 119.904 240.575 cv
120.173 240.844 li
120.93 240.087 li
121.76 239.257 123.104 239.257 123.934 240.087 cv
123.934 240.087 li
123.934 240.087 li
124.713 239.307 125.977 239.307 126.756 240.087 cv
132.02 245.351 li
132.695 246.025 133.227 246.828 133.585 247.712 cv
134.485 249.933 li
134.777 250.652 134.61 251.476 134.061 252.025 cv
127.655 258.431 li
127.114 258.971 126.307 259.143 125.594 258.868 cv
123.36 258.008 li
122.43 257.65 121.586 257.101 120.882 256.397 cv
cp
0 0 0 0 cmyk
f
111.234 239.294 mo
110.869 239.294 110.504 239.433 110.226 239.711 cv
109.671 240.266 109.671 241.17 110.226 241.726 cv
115.321 246.82 li
115.719 247.219 115.985 247.722 116.088 248.277 cv
116.425 250.08 li
116.547 250.729 116.857 251.319 117.324 251.786 cv
121.408 255.87 li
122.043 256.505 122.79 256.99 123.628 257.313 cv
125.862 258.173 li
126.299 258.341 126.796 258.236 127.128 257.904 cv
133.534 251.498 li
133.872 251.16 133.974 250.655 133.795 250.213 cv
132.895 247.992 li
132.572 247.196 132.101 246.485 131.493 245.878 cv
126.229 240.614 li
125.742 240.126 124.948 240.126 124.461 240.614 cv
124.17 240.905 123.698 240.905 123.407 240.614 cv
122.869 240.076 121.995 240.076 121.457 240.614 cv
120.7 241.371 li
120.409 241.662 119.937 241.662 119.646 241.371 cv
119.377 241.102 li
119.134 240.859 118.811 240.725 118.468 240.725 cv
118.124 240.725 117.801 240.859 117.558 241.102 cv
116.384 242.276 li
116.25 242.41 115.876 242.682 115.294 242.319 cv
115.184 242.25 115.047 242.152 114.875 242.017 cv
114.61 241.81 114.256 241.514 113.823 241.137 cv
113.088 240.496 112.337 239.806 112.241 239.711 cv
111.964 239.433 111.599 239.294 111.234 239.294 cv
cp
126.287 259.742 mo
125.964 259.742 125.638 259.684 125.326 259.564 cv
123.092 258.703 li
122.059 258.306 121.138 257.707 120.355 256.924 cv
116.27 252.839 li
115.59 252.159 115.137 251.3 114.96 250.354 cv
114.623 248.55 li
114.575 248.293 114.452 248.059 114.267 247.874 cv
109.173 242.78 li
108.036 241.643 108.036 239.794 109.173 238.657 cv
110.309 237.52 112.159 237.52 113.295 238.657 cv
113.523 238.881 115.004 240.219 115.745 240.808 cv
116.505 240.048 li
117.029 239.523 117.726 239.235 118.468 239.235 cv
119.086 239.235 119.674 239.436 120.156 239.807 cv
120.403 239.56 li
121.361 238.603 122.831 238.464 123.937 239.145 cv
124.358 238.892 124.841 238.757 125.345 238.757 cv
126.077 238.757 126.765 239.042 127.283 239.56 cv
132.547 244.824 li
133.296 245.573 133.878 246.451 134.276 247.432 cv
135.176 249.653 li
135.581 250.652 135.35 251.79 134.588 252.552 cv
128.182 258.958 li
127.67 259.469 126.985 259.742 126.287 259.742 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
201.302 225.54 mo
201.115 225.54 200.928 225.47 200.783 225.33 cv
197.387 222.039 192.911 220.227 188.181 220.227 cv
187.164 220.227 186.144 220.311 185.15 220.479 cv
184.744 220.547 184.36 220.274 184.291 219.868 cv
184.223 219.462 184.496 219.078 184.902 219.009 cv
185.978 218.828 187.081 218.736 188.181 218.736 cv
193.3 218.736 198.144 220.698 201.82 224.26 cv
202.116 224.546 202.123 225.018 201.837 225.313 cv
201.691 225.464 201.496 225.54 201.302 225.54 cv
cp
f
188.457 221.601 mo
185.458 219.656 li
187.404 216.659 li
185.306 217.105 li
183.361 220.103 li
186.358 222.048 li
188.457 221.601 li
cp
f
173.698 251.16 mo
173.485 251.16 173.273 251.069 173.126 250.892 cv
170.193 247.38 168.579 242.921 168.579 238.338 cv
168.579 237.927 168.912 237.593 169.324 237.593 cv
169.735 237.593 170.069 237.927 170.069 238.338 cv
170.069 242.573 171.561 246.692 174.27 249.937 cv
174.533 250.253 174.491 250.723 174.175 250.987 cv
174.036 251.103 173.866 251.16 173.698 251.16 cv
cp
f
173.573 246.516 mo
173.405 250.086 li
169.834 249.915 li
171.278 251.503 li
174.847 251.672 li
175.017 248.103 li
173.573 246.516 li
cp
f
201.515 252.417 mo
201.324 252.417 201.133 252.345 200.988 252.199 cv
200.697 251.908 200.697 251.436 200.988 251.145 cv
203.985 248.148 205.843 244.18 206.22 239.974 cv
206.256 239.564 206.62 239.262 207.028 239.298 cv
207.438 239.335 207.741 239.697 207.704 240.107 cv
207.297 244.66 205.286 248.955 202.042 252.199 cv
201.896 252.345 201.705 252.417 201.515 252.417 cv
cp
f
204.287 242.882 mo
206.934 240.48 li
209.335 243.127 li
209.439 240.984 li
207.038 238.338 li
204.391 240.739 li
204.287 242.882 li
cp
f
197.104 262.16 mo
179.257 262.16 li
179.257 249.852 li
197.104 249.852 li
197.104 262.16 li
cp
.348486 0 .00491341 0 cmyk
f
180.003 261.415 mo
196.359 261.415 li
196.359 250.597 li
180.003 250.597 li
180.003 261.415 li
cp
197.104 262.905 mo
179.257 262.905 li
178.846 262.905 178.512 262.571 178.512 262.16 cv
178.512 249.852 li
178.512 249.44 178.846 249.107 179.257 249.107 cv
197.104 249.107 li
197.516 249.107 197.849 249.44 197.849 249.852 cv
197.849 262.16 li
197.849 262.571 197.516 262.905 197.104 262.905 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
179.257 249.852 mo
188.181 257.852 li
197.104 249.852 li
179.257 249.852 li
cp
.348486 0 .00491341 0 cmyk
f
181.205 250.597 mo
188.181 256.851 li
195.157 250.597 li
181.205 250.597 li
cp
188.181 258.597 mo
188.003 258.597 187.825 258.534 187.683 258.407 cv
178.76 250.407 li
178.53 250.2 178.451 249.874 178.561 249.585 cv
178.672 249.297 178.949 249.107 179.257 249.107 cv
197.104 249.107 li
197.413 249.107 197.69 249.297 197.8 249.585 cv
197.91 249.874 197.831 250.2 197.602 250.407 cv
188.678 258.407 li
188.537 258.534 188.359 258.597 188.181 258.597 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
179.257 262.16 mo
185.864 255.775 li
179.257 262.16 li
cp
.348486 0 .00491341 0 cmyk
f
179.257 262.905 mo
179.062 262.905 178.868 262.829 178.722 262.678 cv
178.436 262.382 178.444 261.91 178.74 261.624 cv
185.346 255.239 li
185.642 254.953 186.114 254.961 186.4 255.257 cv
186.686 255.553 186.678 256.025 186.382 256.311 cv
179.775 262.696 li
179.631 262.836 179.444 262.905 179.257 262.905 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
197.104 262.16 mo
190.497 255.775 li
197.104 262.16 li
cp
.348486 0 .00491341 0 cmyk
f
197.104 262.905 mo
196.918 262.905 196.731 262.836 196.586 262.696 cv
189.979 256.311 li
189.683 256.025 189.675 255.553 189.961 255.257 cv
190.248 254.961 190.719 254.953 191.015 255.239 cv
197.622 261.624 li
197.918 261.91 197.926 262.382 197.64 262.678 cv
197.494 262.829 197.299 262.905 197.104 262.905 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
210.781 221.295 mo
210.781 221.295 li
208.513 219.028 li
204.558 222.983 li
206.825 225.251 li
206.825 225.251 li
206.825 225.251 208.975 227.401 206.145 230.231 cv
203.576 232.8 201.567 231.266 201.218 230.961 cv
201.218 230.961 li
198.952 228.693 li
195.045 232.6 li
197.209 234.867 li
197.209 234.867 li
197.209 234.867 203.202 238.342 208.583 232.874 cv
214.48 226.881 210.781 221.295 210.781 221.295 cv
cp
0 0 0 0 cmyk
f
197.666 234.267 mo
197.998 234.438 199.284 235.048 201.001 235.183 cv
203.627 235.39 206 234.437 208.052 232.351 cv
210.316 230.051 211.361 227.568 211.157 224.973 cv
211.021 223.249 210.352 222.03 210.192 221.76 cv
208.513 220.081 li
205.611 222.983 li
207.352 224.724 li
207.423 224.795 208.054 225.45 208.276 226.529 cv
208.48 227.522 208.368 229.061 206.672 230.758 cv
204.324 233.105 202.002 232.636 200.728 231.521 cv
200.715 231.511 200.703 231.499 200.691 231.487 cv
198.952 229.747 li
196.086 232.612 li
197.666 234.267 li
cp
201.667 236.7 mo
201.368 236.7 201.083 236.687 200.815 236.664 cv
198.504 236.466 196.902 235.55 196.835 235.511 cv
196.774 235.476 196.718 235.432 196.669 235.381 cv
194.506 233.114 li
194.226 232.821 194.232 232.359 194.518 232.073 cv
198.425 228.166 li
198.564 228.026 198.754 227.947 198.952 227.947 cv
198.952 227.947 198.952 227.947 198.952 227.947 cv
199.149 227.947 199.339 228.026 199.479 228.166 cv
201.726 230.415 li
202.152 230.778 203.61 231.712 205.618 229.704 cv
207.825 227.497 206.456 225.942 206.293 225.772 cv
204.031 223.51 li
203.891 223.37 203.812 223.181 203.812 222.983 cv
203.812 222.786 203.891 222.596 204.031 222.456 cv
207.986 218.501 li
208.126 218.361 208.316 218.282 208.513 218.282 cv
208.513 218.282 li
208.711 218.282 208.9 218.361 209.04 218.501 cv
211.307 220.768 li
211.435 220.895 212.433 222.459 212.636 224.772 cv
212.821 226.886 212.36 230.098 209.114 233.397 cv
206.506 236.047 203.75 236.7 201.667 236.7 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
197.467 234.867 mo
199.679 232.647 li
197.467 234.867 li
cp
0 0 0 0 cmyk
f
197.467 235.612 mo
197.277 235.612 197.087 235.54 196.941 235.395 cv
196.65 235.104 196.649 234.632 196.939 234.341 cv
199.151 232.121 li
199.442 231.83 199.914 231.829 200.205 232.119 cv
200.497 232.41 200.498 232.882 200.207 233.173 cv
197.995 235.393 li
197.85 235.539 197.659 235.612 197.467 235.612 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
206.916 225.341 mo
209.169 223.064 li
206.916 225.341 li
cp
0 0 0 0 cmyk
f
206.916 226.087 mo
206.726 226.087 206.537 226.015 206.392 225.871 cv
206.099 225.582 206.097 225.11 206.386 224.817 cv
208.639 222.54 li
208.929 222.247 209.4 222.245 209.693 222.534 cv
209.986 222.823 209.988 223.295 209.699 223.588 cv
207.446 225.866 li
207.3 226.013 207.108 226.087 206.916 226.087 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
172.204 232.073 mo
172.204 233.161 171.322 234.043 170.235 234.043 cv
169.147 234.043 168.265 233.161 168.265 232.073 cv
168.265 230.985 169.147 230.103 170.235 230.103 cv
171.322 230.103 172.204 230.985 172.204 232.073 cv
cp
f
167.045 229.054 mo
166.834 229.054 166.624 228.964 166.476 228.791 cv
166.21 228.477 166.248 228.007 166.562 227.741 cv
167.584 226.871 168.889 226.392 170.235 226.392 cv
171.564 226.392 172.857 226.861 173.876 227.713 cv
174.191 227.977 174.233 228.447 173.969 228.763 cv
173.705 229.078 173.235 229.12 172.92 228.856 cv
172.169 228.228 171.215 227.883 170.235 227.883 cv
169.242 227.883 168.281 228.235 167.527 228.876 cv
167.387 228.995 167.215 229.054 167.045 229.054 cv
cp
f
164.398 225.93 mo
164.187 225.93 163.978 225.841 163.83 225.668 cv
163.564 225.354 163.602 224.884 163.916 224.617 cv
165.676 223.122 167.92 222.298 170.235 222.298 cv
172.523 222.298 174.748 223.105 176.499 224.57 cv
176.815 224.834 176.857 225.304 176.593 225.62 cv
176.328 225.936 175.858 225.977 175.543 225.713 cv
174.059 224.472 172.174 223.789 170.235 223.789 cv
168.273 223.789 166.372 224.486 164.88 225.753 cv
164.74 225.872 164.569 225.93 164.398 225.93 cv
cp
f
161.455 222.457 mo
161.243 222.457 161.033 222.367 160.886 222.193 cv
160.62 221.879 160.658 221.409 160.972 221.143 cv
163.555 218.953 166.844 217.747 170.235 217.747 cv
173.586 217.747 176.847 218.929 179.415 221.075 cv
179.731 221.339 179.773 221.809 179.509 222.125 cv
179.245 222.441 178.775 222.483 178.46 222.219 cv
176.159 220.296 173.238 219.238 170.235 219.238 cv
167.197 219.238 164.25 220.318 161.936 222.28 cv
161.796 222.398 161.625 222.457 161.455 222.457 cv
cp
f
362.071 235.343 mo
362.071 244.362 354.76 251.673 345.741 251.673 cv
336.722 251.673 329.411 244.362 329.411 235.343 cv
329.411 226.324 336.722 219.013 345.741 219.013 cv
354.76 219.013 362.071 226.324 362.071 235.343 cv
cp
0 0 0 0 cmyk
f
345.741 219.758 mo
337.147 219.758 330.156 226.75 330.156 235.343 cv
330.156 243.937 337.147 250.928 345.741 250.928 cv
354.334 250.928 361.326 243.937 361.326 235.343 cv
361.326 226.75 354.334 219.758 345.741 219.758 cv
cp
345.741 252.419 mo
341.18 252.419 336.892 250.642 333.667 247.417 cv
330.442 244.192 328.665 239.904 328.665 235.343 cv
328.665 230.782 330.442 226.494 333.667 223.269 cv
336.892 220.044 341.18 218.268 345.741 218.268 cv
350.302 218.268 354.59 220.044 357.815 223.269 cv
361.04 226.494 362.816 230.782 362.816 235.343 cv
362.816 239.904 361.04 244.192 357.815 247.417 cv
354.59 250.642 350.302 252.419 345.741 252.419 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
345.741 219.013 mo
345.741 251.673 li
345.741 219.013 li
cp
0 0 0 0 cmyk
f
346.486 251.673 mo
344.996 251.673 li
344.996 219.013 li
346.486 219.013 li
346.486 251.673 li
cp
.697627 .675227 .638575 .739559 cmyk
f
329.411 235.343 mo
362.071 235.343 li
329.411 235.343 li
cp
0 0 0 0 cmyk
f
362.071 236.088 mo
329.411 236.088 li
329.411 234.598 li
362.071 234.598 li
362.071 236.088 li
cp
.697627 .675227 .638575 .739559 cmyk
f
342.598 251.964 mo
339.131 247.859 336.971 243.542 336.179 239.135 cv
335.542 235.595 335.784 231.997 336.896 228.442 cv
338.782 222.415 342.483 218.645 342.639 218.488 cv
343.696 219.538 li
343.168 219.013 li
343.697 219.538 li
343.66 219.574 340.068 223.246 338.301 228.943 cv
337.272 232.26 337.054 235.613 337.652 238.908 cv
338.403 243.042 340.45 247.111 343.737 251.003 cv
342.598 251.964 li
cp
f
349.098 251.964 mo
347.959 251.003 li
351.246 247.111 353.294 243.042 354.044 238.908 cv
354.643 235.613 354.424 232.26 353.395 228.943 cv
351.629 223.246 348.036 219.574 348 219.538 cv
349.057 218.488 li
349.214 218.645 352.914 222.415 354.8 228.442 cv
355.913 231.997 356.154 235.595 355.518 239.135 cv
354.726 243.542 352.566 247.859 349.098 251.964 cv
cp
f
346.251 228.206 mo
344.554 228.206 342.826 228.041 341.083 227.714 cv
336.431 226.839 333.323 225.119 333.193 225.046 cv
333.921 223.745 li
333.557 224.396 li
333.92 223.745 li
333.95 223.762 336.984 225.435 341.409 226.259 cv
343.992 226.739 346.539 226.841 348.98 226.561 cv
352.018 226.212 354.903 225.266 357.555 223.749 cv
358.295 225.042 li
355.458 226.666 352.37 227.676 349.117 228.045 cv
348.174 228.152 347.218 228.206 346.251 228.206 cv
cp
f
357.562 247.092 mo
357.531 247.075 354.498 245.402 350.073 244.578 cv
347.49 244.097 344.942 243.996 342.502 244.276 cv
339.463 244.625 336.578 245.571 333.927 247.088 cv
333.187 245.794 li
336.024 244.171 339.112 243.16 342.365 242.791 cv
344.96 242.497 347.663 242.608 350.398 243.123 cv
355.05 243.997 358.159 245.718 358.289 245.791 cv
357.561 247.091 li
357.925 246.441 li
357.562 247.092 li
cp
f
370.841 246.035 mo
370.841 247.499 370.149 248.686 369.296 248.686 cv
368.443 248.686 367.751 247.499 367.751 246.035 cv
367.751 244.571 368.443 243.384 369.296 243.384 cv
370.149 243.384 370.841 244.571 370.841 246.035 cv
cp
0 0 0 0 cmyk
f
369.296 244.13 mo
369.014 244.13 368.496 244.853 368.496 246.035 cv
368.496 247.218 369.014 247.941 369.296 247.941 cv
369.578 247.941 370.096 247.218 370.096 246.035 cv
370.096 244.853 369.578 244.13 369.296 244.13 cv
cp
369.296 249.432 mo
367.991 249.432 367.006 247.971 367.006 246.035 cv
367.006 244.099 367.991 242.639 369.296 242.639 cv
370.602 242.639 371.586 244.099 371.586 246.035 cv
371.586 247.971 370.602 249.432 369.296 249.432 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
354.992 243.554 mo
354.992 243.554 li
353.603 246.035 li
352.974 246.035 li
353.288 246.598 li
352.974 247.16 li
353.603 247.16 li
354.992 249.642 li
354.992 249.642 li
359.896 249.642 362.527 251.426 366.213 254.662 cv
368.998 257.107 li
368.998 247.16 li
368.998 246.035 li
368.998 236.088 li
366.213 238.533 li
362.527 241.769 359.896 243.554 354.992 243.554 cv
cp
0 0 0 0 cmyk
f
355.431 248.901 mo
360.52 249.016 363.329 251.138 366.705 254.102 cv
368.253 255.461 li
368.253 237.734 li
366.705 239.093 li
363.329 242.057 360.52 244.179 355.431 244.294 cv
354.253 246.399 li
354.211 246.475 354.156 246.542 354.092 246.598 cv
354.156 246.653 354.211 246.72 354.253 246.796 cv
355.431 248.901 li
cp
368.998 257.852 mo
368.82 257.852 368.645 257.788 368.506 257.667 cv
365.721 255.222 li
361.913 251.878 359.46 250.387 354.992 250.387 cv
354.722 250.387 354.473 250.241 354.341 250.005 cv
353.166 247.905 li
352.974 247.905 li
352.709 247.905 352.465 247.765 352.331 247.537 cv
352.197 247.308 352.194 247.027 352.323 246.796 cv
352.434 246.598 li
352.323 246.399 li
352.194 246.169 352.197 245.887 352.331 245.658 cv
352.465 245.43 352.709 245.29 352.974 245.29 cv
353.166 245.29 li
354.341 243.19 li
354.473 242.954 354.722 242.808 354.992 242.808 cv
359.46 242.808 361.913 241.317 365.721 237.973 cv
368.506 235.528 li
368.726 235.335 369.039 235.289 369.305 235.41 cv
369.572 235.53 369.743 235.796 369.743 236.088 cv
369.743 257.107 li
369.743 257.399 369.572 257.665 369.305 257.785 cv
369.207 257.83 369.102 257.852 368.998 257.852 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
355.676 251.21 mo
343.763 251.21 li
343.763 241.985 li
355.676 241.985 li
355.676 251.21 li
cp
.348486 0 .00491341 0 cmyk
f
344.508 250.465 mo
354.93 250.465 li
354.93 242.73 li
344.508 242.73 li
344.508 250.465 li
cp
355.676 251.956 mo
343.763 251.956 li
343.351 251.956 343.018 251.622 343.018 251.21 cv
343.018 241.985 li
343.018 241.573 343.351 241.239 343.763 241.239 cv
355.676 241.239 li
356.087 241.239 356.421 241.573 356.421 241.985 cv
356.421 251.21 li
356.421 251.622 356.087 251.956 355.676 251.956 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
346.727 251.21 mo
346.727 261.478 li
354.5 261.478 li
351.679 251.21 li
346.727 251.21 li
cp
0 0 0 0 cmyk
f
347.472 260.733 mo
353.523 260.733 li
351.111 251.956 li
347.472 251.956 li
347.472 260.733 li
cp
354.5 262.223 mo
346.727 262.223 li
346.315 262.223 345.981 261.89 345.981 261.478 cv
345.981 251.21 li
345.981 250.799 346.315 250.465 346.727 250.465 cv
351.679 250.465 li
352.015 250.465 352.309 250.689 352.398 251.013 cv
355.219 261.281 li
355.28 261.505 355.234 261.745 355.093 261.93 cv
354.952 262.115 354.733 262.223 354.5 262.223 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
248.593 249.797 mo
291.475 249.797 li
291.475 222.773 li
248.593 222.773 li
248.593 249.797 li
cp
292.22 251.288 mo
247.847 251.288 li
247.436 251.288 247.102 250.954 247.102 250.542 cv
247.102 222.028 li
247.102 221.617 247.436 221.283 247.847 221.283 cv
292.22 221.283 li
292.631 221.283 292.965 221.617 292.965 222.028 cv
292.965 250.542 li
292.965 250.954 292.631 251.288 292.22 251.288 cv
cp
f
288.148 246.935 mo
251.919 246.935 li
251.919 225.636 li
288.148 225.636 li
288.148 246.935 li
cp
.348486 0 .00491341 0 cmyk
f
252.664 246.19 mo
287.403 246.19 li
287.403 226.381 li
252.664 226.381 li
252.664 246.19 li
cp
288.148 247.68 mo
251.919 247.68 li
251.507 247.68 251.174 247.347 251.174 246.935 cv
251.174 225.636 li
251.174 225.224 251.507 224.891 251.919 224.891 cv
288.148 224.891 li
288.56 224.891 288.893 225.224 288.893 225.636 cv
288.893 246.935 li
288.893 247.347 288.56 247.68 288.148 247.68 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
244.706 257.098 mo
295.361 257.098 li
291.802 251.288 li
248.265 251.288 li
244.706 257.098 li
cp
296.691 258.588 mo
243.376 258.588 li
243.106 258.588 242.858 258.442 242.726 258.207 cv
242.594 257.972 242.6 257.684 242.741 257.454 cv
247.212 250.153 li
247.347 249.932 247.588 249.797 247.847 249.797 cv
292.22 249.797 li
292.479 249.797 292.72 249.932 292.855 250.153 cv
297.326 257.454 li
297.467 257.684 297.473 257.972 297.341 258.207 cv
297.209 258.442 296.961 258.588 296.691 258.588 cv
cp
f
244.121 260.982 mo
295.946 260.982 li
295.946 258.588 li
244.121 258.588 li
244.121 260.982 li
cp
296.691 262.472 mo
243.376 262.472 li
242.965 262.472 242.631 262.138 242.631 261.727 cv
242.631 257.843 li
242.631 257.431 242.965 257.098 243.376 257.098 cv
296.691 257.098 li
297.102 257.098 297.436 257.431 297.436 257.843 cv
297.436 261.727 li
297.436 262.138 297.102 262.472 296.691 262.472 cv
cp
f
282.385 246.935 mo
257.645 246.935 li
257.645 218.493 li
282.385 218.493 li
282.385 246.935 li
cp
0 0 0 0 cmyk
f
258.39 246.19 mo
281.64 246.19 li
281.64 219.238 li
258.39 219.238 li
258.39 246.19 li
cp
282.385 247.68 mo
257.645 247.68 li
257.233 247.68 256.9 247.347 256.9 246.935 cv
256.9 218.493 li
256.9 218.081 257.233 217.747 257.645 217.747 cv
282.385 217.747 li
282.797 217.747 283.131 218.081 283.131 218.493 cv
283.131 246.935 li
283.131 247.347 282.797 247.68 282.385 247.68 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
264.812 226.234 mo
263.112 226.234 li
261.359 222.853 li
261.33 222.853 li
261.371 223.385 261.392 223.791 261.392 224.071 cv
261.392 226.234 li
260.243 226.234 li
260.243 221.435 li
261.937 221.435 li
263.683 224.77 li
263.703 224.77 li
263.672 224.286 263.657 223.898 263.657 223.605 cv
263.657 221.435 li
264.812 221.435 li
264.812 226.234 li
cp
.75021 .679683 .670222 .90164 cmyk
f
268.698 226.234 mo
265.849 226.234 li
265.849 221.435 li
268.698 221.435 li
268.698 222.476 li
267.146 222.476 li
267.146 223.23 li
268.583 223.23 li
268.583 224.271 li
267.146 224.271 li
267.146 225.177 li
268.698 225.177 li
268.698 226.234 li
cp
f
274.721 226.234 mo
273.188 226.234 li
272.729 224.143 li
272.707 224.055 272.672 223.881 272.625 223.621 cv
272.578 223.361 272.544 223.143 272.522 222.968 cv
272.504 223.11 272.476 223.287 272.437 223.498 cv
272.397 223.709 272.358 223.903 272.32 224.081 cv
272.282 224.258 272.123 224.975 271.843 226.234 cv
270.31 226.234 li
269.122 221.435 li
270.372 221.435 li
270.894 223.841 li
271.012 224.373 271.093 224.796 271.137 225.111 cv
271.165 224.888 271.216 224.585 271.289 224.202 cv
271.363 223.819 271.431 223.502 271.495 223.25 cv
271.918 221.435 li
273.119 221.435 li
273.53 223.25 li
273.6 223.541 273.671 223.877 273.743 224.258 cv
273.815 224.638 273.863 224.923 273.887 225.111 cv
273.916 224.868 273.993 224.447 274.12 223.848 cv
274.652 221.435 li
275.903 221.435 li
274.721 226.234 li
cp
f
279.661 224.776 mo
279.661 225.074 279.585 225.338 279.434 225.569 cv
279.283 225.8 279.066 225.979 278.781 226.107 cv
278.497 226.235 278.163 226.299 277.78 226.299 cv
277.46 226.299 277.193 226.277 276.976 226.232 cv
276.759 226.187 276.534 226.109 276.3 225.997 cv
276.3 224.842 li
276.547 224.969 276.804 225.068 277.071 225.139 cv
277.338 225.21 277.583 225.246 277.806 225.246 cv
277.999 225.246 278.14 225.212 278.23 225.146 cv
278.319 225.079 278.364 224.993 278.364 224.888 cv
278.364 224.822 278.346 224.765 278.31 224.716 cv
278.274 224.666 278.216 224.617 278.136 224.566 cv
278.056 224.516 277.843 224.413 277.498 224.258 cv
277.185 224.116 276.95 223.978 276.794 223.844 cv
276.637 223.711 276.521 223.558 276.446 223.385 cv
276.37 223.212 276.332 223.007 276.332 222.771 cv
276.332 222.329 276.493 221.984 276.815 221.737 cv
277.137 221.49 277.579 221.366 278.141 221.366 cv
278.638 221.366 279.144 221.481 279.661 221.711 cv
279.264 222.712 li
278.815 222.506 278.428 222.403 278.102 222.403 cv
277.933 222.403 277.811 222.433 277.734 222.492 cv
277.657 222.551 277.619 222.624 277.619 222.712 cv
277.619 222.806 277.668 222.89 277.765 222.965 cv
277.863 223.039 278.127 223.175 278.558 223.372 cv
278.971 223.558 279.259 223.757 279.419 223.971 cv
279.58 224.184 279.661 224.453 279.661 224.776 cv
cp
f
277.56 230.849 mo
262.507 230.849 li
262.096 230.849 261.762 230.515 261.762 230.103 cv
261.762 229.692 262.096 229.358 262.507 229.358 cv
277.56 229.358 li
277.972 229.358 278.305 229.692 278.305 230.103 cv
278.305 230.515 277.972 230.849 277.56 230.849 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
277.56 234.502 mo
262.507 234.502 li
262.096 234.502 261.762 234.169 261.762 233.757 cv
261.762 233.345 262.096 233.012 262.507 233.012 cv
277.56 233.012 li
277.972 233.012 278.305 233.345 278.305 233.757 cv
278.305 234.169 277.972 234.502 277.56 234.502 cv
cp
f
277.56 238.156 mo
262.507 238.156 li
262.096 238.156 261.762 237.822 261.762 237.41 cv
261.762 236.999 262.096 236.665 262.507 236.665 cv
277.56 236.665 li
277.972 236.665 278.305 236.999 278.305 237.41 cv
278.305 237.822 277.972 238.156 277.56 238.156 cv
cp
f
277.56 241.809 mo
262.507 241.809 li
262.096 241.809 261.762 241.476 261.762 241.064 cv
261.762 240.652 262.096 240.319 262.507 240.319 cv
277.56 240.319 li
277.972 240.319 278.305 240.652 278.305 241.064 cv
278.305 241.476 277.972 241.809 277.56 241.809 cv
cp
f
33.3728 314.049 mo
8.17455 322.671 li
.745366 300.957 li
25.9436 292.336 li
33.3728 314.049 li
cp
.348486 0 .00491341 0 cmyk
f
1.69173 301.421 mo
8.63838 321.725 li
32.4265 313.586 li
25.4798 293.282 li
1.69173 301.421 li
cp
8.17453 323.416 mo
8.06188 323.416 7.94959 323.391 7.84655 323.34 cv
7.66905 323.253 7.53348 323.099 7.46944 322.912 cv
.0403062 301.199 li
-.0928676 300.809 .114753 300.385 .504158 300.252 cv
25.7024 291.631 li
26.0918 291.498 26.5154 291.705 26.6487 292.095 cv
34.0779 313.808 li
34.1419 313.995 34.1289 314.2 34.042 314.377 cv
33.955 314.555 33.801 314.691 33.6141 314.755 cv
8.41577 323.376 li
8.3374 323.403 8.25582 323.416 8.17453 323.416 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
33.3728 314.049 mo
8.17455 322.671 li
10.418 329.228 li
35.6162 320.606 li
33.3728 314.049 li
cp
0 0 0 0 cmyk
f
9.12087 323.135 mo
10.8818 328.282 li
34.6699 320.143 li
32.909 314.996 li
9.12087 323.135 li
cp
10.4179 329.973 mo
10.1081 329.973 9.81883 329.779 9.71287 329.469 cv
7.46944 322.912 li
7.40547 322.725 7.41843 322.52 7.50539 322.343 cv
7.59235 322.165 7.74634 322.03 7.93329 321.966 cv
33.1316 313.344 li
33.3185 313.28 33.5234 313.293 33.7008 313.38 cv
33.8783 313.467 34.0139 313.621 34.0779 313.808 cv
36.3213 320.365 li
36.4545 320.755 36.2468 321.178 35.8574 321.311 cv
10.6592 329.933 li
10.5793 329.96 10.4979 329.973 10.4179 329.973 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
9.87614 315.193 mo
12.0651 308.311 li
15.1676 310.021 li
17.6782 301.77 li
27.6943 309.096 li
9.87614 315.193 li
cp
0 0 0 0 cmyk
f
12.5001 309.402 mo
11.0347 314.009 li
26.1007 308.854 li
18.0855 302.991 li
15.8805 310.238 li
15.8151 310.453 15.6561 310.627 15.4479 310.712 cv
15.2399 310.796 15.0046 310.783 14.8078 310.674 cv
12.5001 309.402 li
cp
9.87617 315.938 mo
9.68442 315.938 9.49645 315.864 9.3549 315.725 cv
9.15376 315.528 9.08062 315.235 9.16599 314.967 cv
11.3549 308.085 li
11.4225 307.873 11.5817 307.702 11.7889 307.619 cv
11.9962 307.536 12.2293 307.551 12.4248 307.658 cv
14.7222 308.925 li
16.9652 301.553 li
17.0355 301.322 17.2134 301.14 17.4424 301.063 cv
17.6715 300.987 17.9233 301.026 18.1181 301.169 cv
28.1342 308.495 li
28.3584 308.659 28.4727 308.934 28.431 309.208 cv
28.3892 309.483 28.1983 309.711 27.9355 309.801 cv
10.1173 315.898 li
10.0384 315.925 9.95695 315.938 9.87617 315.938 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
44.638 311.863 mo
18.0057 311.863 li
18.0057 288.914 li
44.638 288.914 li
44.638 311.863 li
cp
.348486 0 .00491341 0 cmyk
f
18.7509 311.118 mo
43.8928 311.118 li
43.8928 289.659 li
18.7509 289.659 li
18.7509 311.118 li
cp
44.638 312.609 mo
18.0057 312.609 li
17.5941 312.609 17.2605 312.275 17.2605 311.863 cv
17.2605 288.914 li
17.2605 288.503 17.5941 288.169 18.0057 288.169 cv
44.638 288.169 li
45.0495 288.169 45.3831 288.503 45.3831 288.914 cv
45.3831 311.863 li
45.3831 312.275 45.0495 312.609 44.638 312.609 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
44.638 311.863 mo
18.0057 311.863 li
18.0057 318.794 li
44.638 318.794 li
44.638 311.863 li
cp
0 0 0 0 cmyk
f
18.7509 318.048 mo
43.8928 318.048 li
43.8928 312.609 li
18.7509 312.609 li
18.7509 318.048 li
cp
44.638 319.539 mo
18.0057 319.539 li
17.5941 319.539 17.2605 319.205 17.2605 318.794 cv
17.2605 311.863 li
17.2605 311.452 17.5941 311.118 18.0057 311.118 cv
44.638 311.118 li
45.0495 311.118 45.3831 311.452 45.3831 311.863 cv
45.3831 318.794 li
45.3831 319.205 45.0495 319.539 44.638 319.539 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
22.0365 305.339 mo
26.3353 299.536 li
28.717 302.159 li
33.7636 295.165 li
40.8687 305.339 li
22.0365 305.339 li
cp
0 0 0 0 cmyk
f
23.5159 304.594 mo
39.4393 304.594 li
33.7537 296.452 li
29.3213 302.595 li
29.1898 302.777 28.9831 302.89 28.7588 302.903 cv
28.5347 302.916 28.3164 302.826 28.1653 302.66 cv
26.3938 300.709 li
23.5159 304.594 li
cp
40.8686 306.084 mo
22.0365 306.084 li
21.755 306.084 21.4975 305.925 21.371 305.674 cv
21.2443 305.423 21.2702 305.121 21.4377 304.895 cv
25.7365 299.093 li
25.8693 298.914 26.0754 298.803 26.2982 298.792 cv
26.5214 298.781 26.737 298.87 26.887 299.035 cv
28.6506 300.977 li
33.1593 294.729 li
33.2995 294.535 33.5243 294.42 33.7636 294.42 cv
33.7655 294.42 33.7674 294.42 33.7694 294.42 cv
34.0108 294.421 34.2364 294.54 34.3745 294.738 cv
41.4795 304.912 li
41.6386 305.14 41.6578 305.437 41.5294 305.683 cv
41.401 305.93 41.1463 306.084 40.8686 306.084 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
56.8467 319.898 mo
47.7776 314.049 li
47.7776 316.528 li
41.955 316.528 li
39.7559 316.528 37.9732 318.311 37.9732 320.51 cv
37.9732 329.228 li
44.7137 329.228 li
44.7137 324.581 li
44.7137 323.856 45.3014 323.269 46.0264 323.269 cv
47.7776 323.269 li
47.7776 325.747 li
56.8467 319.898 li
cp
0 0 0 0 cmyk
f
38.7184 328.483 mo
43.9685 328.483 li
43.9685 324.581 li
43.9685 323.447 44.8916 322.523 46.0264 322.523 cv
47.7776 322.523 li
48.1891 322.523 48.5228 322.857 48.5228 323.269 cv
48.5228 324.38 li
55.4717 319.898 li
48.5228 315.417 li
48.5228 316.528 li
48.5228 316.94 48.1891 317.273 47.7776 317.273 cv
41.955 317.273 li
40.1704 317.273 38.7184 318.725 38.7184 320.51 cv
38.7184 328.483 li
cp
44.7137 329.973 mo
37.9732 329.973 li
37.5617 329.973 37.228 329.639 37.228 329.228 cv
37.228 320.51 li
37.228 317.903 39.3486 315.783 41.955 315.783 cv
47.0324 315.783 li
47.0324 314.049 li
47.0324 313.777 47.1814 313.526 47.421 313.395 cv
47.6606 313.265 47.9524 313.276 48.1815 313.423 cv
57.2505 319.272 li
57.4633 319.409 57.5918 319.645 57.5918 319.898 cv
57.5918 320.151 57.4633 320.387 57.2505 320.525 cv
48.1815 326.373 li
47.9522 326.521 47.6606 326.532 47.421 326.401 cv
47.1814 326.271 47.0324 326.02 47.0324 325.747 cv
47.0324 324.014 li
46.0264 324.014 li
45.7135 324.014 45.4589 324.268 45.4589 324.581 cv
45.4589 329.228 li
45.4589 329.639 45.1252 329.973 44.7137 329.973 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
258.976 163.241 mo
258.976 166.532 256.308 169.2 253.017 169.2 cv
249.726 169.2 247.058 166.532 247.058 163.241 cv
247.058 159.95 249.726 157.282 253.017 157.282 cv
256.308 157.282 258.976 159.95 258.976 163.241 cv
cp
0 0 0 0 cmyk
f
253.017 158.027 mo
250.142 158.027 247.803 160.366 247.803 163.241 cv
247.803 166.116 250.142 168.455 253.017 168.455 cv
255.892 168.455 258.231 166.116 258.231 163.241 cv
258.231 160.366 255.892 158.027 253.017 158.027 cv
cp
253.017 169.945 mo
249.32 169.945 246.312 166.938 246.312 163.241 cv
246.312 159.544 249.32 156.536 253.017 156.536 cv
256.714 156.536 259.722 159.544 259.722 163.241 cv
259.722 166.938 256.714 169.945 253.017 169.945 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
259.116 177.166 mo
246.918 177.166 li
246.918 175.37 li
246.918 172.001 249.649 169.271 253.017 169.271 cv
253.017 169.271 li
256.385 169.271 259.116 172.001 259.116 175.37 cv
259.116 177.166 li
cp
0 0 0 0 cmyk
f
247.663 176.42 mo
258.371 176.42 li
258.371 175.37 li
258.371 172.418 255.969 170.016 253.017 170.016 cv
250.065 170.016 247.663 172.418 247.663 175.37 cv
247.663 176.42 li
cp
259.116 177.911 mo
246.918 177.911 li
246.507 177.911 246.173 177.577 246.173 177.166 cv
246.173 175.37 li
246.173 171.596 249.243 168.526 253.017 168.526 cv
256.791 168.526 259.861 171.596 259.861 175.37 cv
259.861 177.166 li
259.861 177.577 259.527 177.911 259.116 177.911 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
272.349 158.939 mo
272.349 163.247 268.856 166.74 264.548 166.74 cv
260.24 166.74 256.748 163.247 256.748 158.939 cv
256.748 154.631 260.24 151.139 264.548 151.139 cv
268.856 151.139 272.349 154.631 272.349 158.939 cv
cp
.348486 0 .00491341 0 cmyk
f
264.548 151.884 mo
260.658 151.884 257.493 155.049 257.493 158.939 cv
257.493 162.83 260.658 165.995 264.548 165.995 cv
268.439 165.995 271.603 162.83 271.603 158.939 cv
271.603 155.049 268.439 151.884 264.548 151.884 cv
cp
264.548 167.485 mo
259.836 167.485 256.003 163.651 256.003 158.939 cv
256.003 154.227 259.836 150.394 264.548 150.394 cv
269.26 150.394 273.094 154.227 273.094 158.939 cv
273.094 163.651 269.26 167.485 264.548 167.485 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
272.531 177.166 mo
256.566 177.166 li
256.566 174.815 li
256.566 170.406 260.14 166.832 264.548 166.832 cv
264.548 166.832 li
268.957 166.832 272.531 170.406 272.531 174.815 cv
272.531 177.166 li
cp
.348486 0 .00491341 0 cmyk
f
257.311 176.42 mo
271.786 176.42 li
271.786 174.815 li
271.786 170.824 268.539 167.577 264.548 167.577 cv
260.557 167.577 257.311 170.824 257.311 174.815 cv
257.311 176.42 li
cp
272.531 177.911 mo
256.566 177.911 li
256.154 177.911 255.82 177.577 255.82 177.166 cv
255.82 174.815 li
255.82 170.002 259.736 166.087 264.548 166.087 cv
269.361 166.087 273.276 170.002 273.276 174.815 cv
273.276 177.166 li
273.276 177.577 272.943 177.911 272.531 177.911 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
278.029 181.043 mo
275.841 183.565 272.023 183.834 269.501 181.646 cv
266.98 179.458 266.71 175.64 268.899 173.118 cv
271.087 170.597 274.905 170.327 277.426 172.516 cv
279.948 174.704 280.217 178.522 278.029 181.043 cv
cp
266.731 171.237 mo
263.503 174.955 263.901 180.586 267.62 183.814 cv
271.338 187.041 276.969 186.643 280.197 182.925 cv
283.424 179.206 283.026 173.575 279.308 170.348 cv
275.589 167.12 269.958 167.518 266.731 171.237 cv
cp
0 0 0 0 cmyk
f
273.467 171.783 mo
271.984 171.783 270.508 172.401 269.461 173.607 cv
268.533 174.676 268.077 176.042 268.177 177.454 cv
268.277 178.867 268.921 180.155 269.99 181.083 cv
271.059 182.011 272.425 182.467 273.837 182.367 cv
275.25 182.268 276.538 181.624 277.466 180.555 cv
279.382 178.348 279.145 174.994 276.938 173.078 cv
275.937 172.209 274.699 171.783 273.467 171.783 cv
cp
273.454 183.871 mo
271.82 183.871 270.259 183.29 269.013 182.209 cv
267.643 181.02 266.818 179.369 266.69 177.56 cv
266.563 175.75 267.147 174 268.336 172.63 cv
270.79 169.802 275.087 169.499 277.915 171.953 cv
280.742 174.407 281.046 178.704 278.592 181.532 cv
277.403 182.901 275.752 183.726 273.943 183.854 cv
273.779 183.866 273.616 183.871 273.454 183.871 cv
cp
273.476 168.91 mo
273.281 168.91 273.085 168.917 272.888 168.931 cv
270.711 169.085 268.724 170.077 267.294 171.725 cv
267.294 171.725 li
264.341 175.128 264.706 180.298 268.108 183.251 cv
269.607 184.552 271.486 185.251 273.451 185.251 cv
273.647 185.251 273.843 185.244 274.04 185.231 cv
276.217 185.077 278.203 184.084 279.634 182.436 cv
281.064 180.788 281.767 178.682 281.613 176.505 cv
281.46 174.328 280.467 172.341 278.819 170.911 cv
277.32 169.61 275.442 168.91 273.476 168.91 cv
cp
273.449 186.742 mo
271.125 186.742 268.904 185.915 267.131 184.376 cv
263.109 180.885 262.677 174.771 266.168 170.748 cv
267.86 168.8 270.209 167.626 272.783 167.444 cv
275.357 167.262 277.847 168.094 279.796 169.785 cv
281.745 171.477 282.918 173.826 283.1 176.4 cv
283.282 178.974 282.451 181.464 280.759 183.413 cv
279.068 185.362 276.719 186.535 274.145 186.717 cv
273.912 186.734 273.68 186.742 273.449 186.742 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
280.638 183.307 mo
285.823 187.808 li
280.638 183.307 li
cp
0 0 0 0 cmyk
f
285.822 188.553 mo
285.649 188.553 285.475 188.493 285.334 188.371 cv
280.149 183.87 li
279.838 183.6 279.805 183.13 280.075 182.819 cv
280.345 182.508 280.815 182.475 281.126 182.745 cv
286.311 187.245 li
286.622 187.515 286.655 187.986 286.385 188.296 cv
286.238 188.466 286.031 188.553 285.822 188.553 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
292.451 193.637 mo
292.451 193.637 li
291.87 194.306 290.857 194.378 290.187 193.797 cv
284.293 188.68 li
283.623 188.099 283.552 187.086 284.133 186.416 cv
284.133 186.416 li
284.714 185.747 285.727 185.675 286.397 186.256 cv
292.291 191.373 li
292.961 191.954 293.032 192.967 292.451 193.637 cv
cp
0 0 0 0 cmyk
f
285.345 186.609 mo
285.105 186.609 284.865 186.709 284.695 186.905 cv
284.385 187.263 284.423 187.807 284.781 188.118 cv
290.676 193.234 li
291.034 193.545 291.578 193.506 291.889 193.148 cv
292.199 192.79 292.161 192.246 291.803 191.936 cv
285.908 186.819 li
285.746 186.678 285.545 186.609 285.345 186.609 cv
cp
291.238 194.934 mo
290.692 194.934 290.143 194.745 289.699 194.36 cv
283.804 189.243 li
282.826 188.394 282.721 186.907 283.57 185.928 cv
284.419 184.949 285.906 184.844 286.885 185.694 cv
292.78 190.81 li
293.758 191.659 293.864 193.147 293.014 194.125 cv
293.014 194.125 293.014 194.125 293.014 194.125 cv
292.55 194.66 291.896 194.934 291.238 194.934 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
283.23 157.282 mo
283.23 166.214 li
283.23 157.282 li
cp
0 0 0 0 cmyk
f
283.23 166.959 mo
282.819 166.959 282.485 166.625 282.485 166.214 cv
282.485 157.282 li
282.485 156.87 282.819 156.536 283.23 156.536 cv
283.642 156.536 283.975 156.87 283.975 157.282 cv
283.975 166.214 li
283.975 166.625 283.642 166.959 283.23 166.959 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
287.696 161.748 mo
278.764 161.748 li
287.696 161.748 li
cp
0 0 0 0 cmyk
f
287.696 162.493 mo
278.764 162.493 li
278.353 162.493 278.019 162.159 278.019 161.748 cv
278.019 161.336 278.353 161.002 278.764 161.002 cv
287.696 161.002 li
288.108 161.002 288.441 161.336 288.441 161.748 cv
288.441 162.159 288.108 162.493 287.696 162.493 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
255.259 182.694 mo
255.259 189.298 li
255.259 182.694 li
cp
0 0 0 0 cmyk
f
255.259 190.043 mo
254.847 190.043 254.513 189.71 254.513 189.298 cv
254.513 182.694 li
254.513 182.283 254.847 181.949 255.259 181.949 cv
255.67 181.949 256.004 182.283 256.004 182.694 cv
256.004 189.298 li
256.004 189.71 255.67 190.043 255.259 190.043 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
258.561 185.996 mo
251.957 185.996 li
258.561 185.996 li
cp
0 0 0 0 cmyk
f
258.561 186.741 mo
251.957 186.741 li
251.545 186.741 251.211 186.408 251.211 185.996 cv
251.211 185.585 251.545 185.251 251.957 185.251 cv
258.561 185.251 li
258.972 185.251 259.306 185.585 259.306 185.996 cv
259.306 186.408 258.972 186.741 258.561 186.741 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
360.234 388.472 mo
330.957 388.472 li
330.957 361.46 li
330.957 359.689 332.393 358.253 334.165 358.253 cv
357.026 358.253 li
358.797 358.253 360.234 359.689 360.234 361.46 cv
360.234 388.472 li
cp
0 0 0 0 cmyk
f
331.702 387.727 mo
359.489 387.727 li
359.489 361.46 li
359.489 360.103 358.384 358.998 357.026 358.998 cv
334.165 358.998 li
332.807 358.998 331.702 360.103 331.702 361.46 cv
331.702 387.727 li
cp
360.234 389.217 mo
330.957 389.217 li
330.546 389.217 330.212 388.883 330.212 388.472 cv
330.212 361.46 li
330.212 359.281 331.985 357.507 334.165 357.507 cv
357.026 357.507 li
359.206 357.507 360.979 359.281 360.979 361.46 cv
360.979 388.472 li
360.979 388.883 360.645 389.217 360.234 389.217 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
330.957 365.523 mo
360.234 365.523 li
330.957 365.523 li
cp
0 0 0 0 cmyk
f
360.234 366.268 mo
330.957 366.268 li
330.546 366.268 330.212 365.935 330.212 365.523 cv
330.212 365.112 330.546 364.778 330.957 364.778 cv
360.234 364.778 li
360.645 364.778 360.979 365.112 360.979 365.523 cv
360.979 365.935 360.645 366.268 360.234 366.268 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
334.849 353.747 mo
334.849 358.051 li
334.849 353.747 li
cp
0 0 0 0 cmyk
f
334.849 358.796 mo
334.438 358.796 334.104 358.462 334.104 358.051 cv
334.104 353.747 li
334.104 353.336 334.438 353.002 334.849 353.002 cv
335.261 353.002 335.595 353.336 335.595 353.747 cv
335.595 358.051 li
335.595 358.462 335.261 358.796 334.849 358.796 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
356.507 353.747 mo
356.507 358.051 li
356.507 353.747 li
cp
0 0 0 0 cmyk
f
356.507 358.796 mo
356.095 358.796 355.761 358.462 355.761 358.051 cv
355.761 353.747 li
355.761 353.336 356.095 353.002 356.507 353.002 cv
356.918 353.002 357.252 353.336 357.252 353.747 cv
357.252 358.051 li
357.252 358.462 356.918 358.796 356.507 358.796 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
330.957 372.635 mo
360.234 372.635 li
330.957 372.635 li
cp
0 0 0 0 cmyk
f
360.234 373.38 mo
330.957 373.38 li
330.546 373.38 330.212 373.046 330.212 372.635 cv
330.212 372.223 330.546 371.89 330.957 371.89 cv
360.234 371.89 li
360.645 371.89 360.979 372.223 360.979 372.635 cv
360.979 373.046 360.645 373.38 360.234 373.38 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
330.957 380.364 mo
360.234 380.364 li
330.957 380.364 li
cp
0 0 0 0 cmyk
f
360.234 381.109 mo
330.957 381.109 li
330.546 381.109 330.212 380.775 330.212 380.364 cv
330.212 379.952 330.546 379.618 330.957 379.618 cv
360.234 379.618 li
360.645 379.618 360.979 379.952 360.979 380.364 cv
360.979 380.775 360.645 381.109 360.234 381.109 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
340.48 365.523 mo
340.48 388.472 li
340.48 365.523 li
cp
0 0 0 0 cmyk
f
340.48 389.217 mo
340.069 389.217 339.735 388.883 339.735 388.472 cv
339.735 365.523 li
339.735 365.112 340.069 364.778 340.48 364.778 cv
340.892 364.778 341.226 365.112 341.226 365.523 cv
341.226 388.472 li
341.226 388.883 340.892 389.217 340.48 389.217 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
350.696 365.523 mo
350.696 388.472 li
350.696 365.523 li
cp
0 0 0 0 cmyk
f
350.696 389.217 mo
350.284 389.217 349.951 388.883 349.951 388.472 cv
349.951 365.523 li
349.951 365.112 350.284 364.778 350.696 364.778 cv
351.107 364.778 351.441 365.112 351.441 365.523 cv
351.441 388.472 li
351.441 388.883 351.107 389.217 350.696 389.217 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
350.696 380.364 mo
340.48 380.364 li
340.48 372.635 li
350.696 372.635 li
350.696 380.364 li
cp
0 0 0 0 cmyk
f
341.226 379.618 mo
349.951 379.618 li
349.951 373.38 li
341.226 373.38 li
341.226 379.618 li
cp
350.696 381.109 mo
340.48 381.109 li
340.069 381.109 339.735 380.775 339.735 380.364 cv
339.735 372.635 li
339.735 372.223 340.069 371.89 340.48 371.89 cv
350.696 371.89 li
351.107 371.89 351.441 372.223 351.441 372.635 cv
351.441 380.364 li
351.441 380.775 351.107 381.109 350.696 381.109 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
368.481 384.862 mo
362.593 384.862 li
362.593 378.973 li
355.372 378.973 li
355.372 384.862 li
349.484 384.862 li
349.484 392.082 li
355.372 392.082 li
355.372 397.971 li
362.593 397.971 li
362.593 392.082 li
368.481 392.082 li
368.481 384.862 li
cp
.348486 0 .00491341 0 cmyk
f
356.118 397.225 mo
361.848 397.225 li
361.848 392.082 li
361.848 391.671 362.181 391.337 362.593 391.337 cv
367.736 391.337 li
367.736 385.607 li
362.593 385.607 li
362.181 385.607 361.848 385.273 361.848 384.862 cv
361.848 379.719 li
356.118 379.719 li
356.118 384.862 li
356.118 385.273 355.784 385.607 355.372 385.607 cv
350.229 385.607 li
350.229 391.337 li
355.372 391.337 li
355.784 391.337 356.118 391.671 356.118 392.082 cv
356.118 397.225 li
cp
362.593 398.716 mo
355.372 398.716 li
354.961 398.716 354.627 398.382 354.627 397.971 cv
354.627 392.827 li
349.484 392.827 li
349.073 392.827 348.739 392.494 348.739 392.082 cv
348.739 384.862 li
348.739 384.45 349.073 384.117 349.484 384.117 cv
354.627 384.117 li
354.627 378.973 li
354.627 378.562 354.961 378.228 355.372 378.228 cv
362.593 378.228 li
363.004 378.228 363.338 378.562 363.338 378.973 cv
363.338 384.117 li
368.481 384.117 li
368.893 384.117 369.226 384.45 369.226 384.862 cv
369.226 392.082 li
369.226 392.494 368.893 392.827 368.481 392.827 cv
363.338 392.827 li
363.338 397.971 li
363.338 398.382 363.004 398.716 362.593 398.716 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
19.6261 355.111 mo
17.2819 355.111 15.3747 357.018 15.3747 359.362 cv
15.3747 393.204 li
15.3747 395.548 17.2819 397.455 19.6261 397.455 cv
38.3981 397.455 li
40.7424 397.455 42.6495 395.548 42.6495 393.204 cv
42.6495 359.362 li
42.6495 357.018 40.7424 355.111 38.3981 355.111 cv
19.6261 355.111 li
cp
38.3981 398.945 mo
19.6261 398.945 li
16.4601 398.945 13.8843 396.37 13.8843 393.204 cv
13.8843 359.362 li
13.8843 356.196 16.4601 353.62 19.6261 353.62 cv
38.3981 353.62 li
41.5642 353.62 44.1399 356.196 44.1399 359.362 cv
44.1399 393.204 li
44.1399 396.37 41.5642 398.945 38.3981 398.945 cv
cp
f
14.6295 389.994 mo
14.6295 359.362 li
43.3947 359.362 li
43.3947 389.994 li
14.6295 389.994 li
cp
.348486 0 .00491341 0 cmyk
f
15.3747 389.249 mo
42.6495 389.249 li
42.6495 360.107 li
15.3747 360.107 li
15.3747 389.249 li
cp
43.3947 390.74 mo
14.6295 390.74 li
14.218 390.74 13.8843 390.406 13.8843 389.994 cv
13.8843 359.362 li
13.8843 358.95 14.218 358.617 14.6295 358.617 cv
43.3947 358.617 li
43.8062 358.617 44.1399 358.95 44.1399 359.362 cv
44.1399 389.994 li
44.1399 390.406 43.8062 390.74 43.3947 390.74 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
31.5628 394.626 mo
26.4614 394.626 li
26.0499 394.626 25.7162 394.293 25.7162 393.881 cv
25.7162 393.47 26.0499 393.136 26.4614 393.136 cv
31.5628 393.136 li
31.9744 393.136 32.308 393.47 32.308 393.881 cv
32.308 394.293 31.9744 394.626 31.5628 394.626 cv
cp
f
36.7563 374.58 mo
36.7563 378.857 33.2891 382.324 29.0121 382.324 cv
24.7351 382.324 21.2679 378.857 21.2679 374.58 cv
21.2679 370.303 24.7351 366.836 29.0121 366.836 cv
33.2891 366.836 36.7563 370.303 36.7563 374.58 cv
cp
0 0 0 0 cmyk
f
29.0122 367.581 mo
25.1529 367.581 22.0131 370.721 22.0131 374.58 cv
22.0131 378.439 25.1529 381.579 29.0122 381.579 cv
32.8714 381.579 36.0111 378.439 36.0111 374.58 cv
36.0111 370.721 32.8714 367.581 29.0122 367.581 cv
cp
29.0122 383.069 mo
24.3311 383.069 20.5227 379.261 20.5227 374.58 cv
20.5227 369.899 24.3311 366.09 29.0122 366.09 cv
33.6932 366.09 37.5015 369.899 37.5015 374.58 cv
37.5015 379.261 33.6932 383.069 29.0122 383.069 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
26.5036 370.508 mo
33.556 374.58 li
26.5036 378.652 li
26.5036 370.508 li
cp
0 0 0 0 cmyk
f
27.2488 371.799 mo
27.2488 377.361 li
32.0656 374.58 li
27.2488 371.799 li
cp
26.5036 379.397 mo
26.375 379.397 26.2463 379.364 26.131 379.297 cv
25.9005 379.164 25.7584 378.918 25.7584 378.652 cv
25.7584 370.508 li
25.7584 370.242 25.9005 369.996 26.131 369.863 cv
26.3616 369.73 26.6457 369.73 26.8762 369.863 cv
33.9286 373.935 li
34.1591 374.068 34.3012 374.314 34.3012 374.58 cv
34.3012 374.846 34.1591 375.092 33.9286 375.225 cv
26.8762 379.297 li
26.7609 379.364 26.6323 379.397 26.5036 379.397 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
356.143 315.333 mo
337.801 315.333 li
333.936 315.333 330.803 318.466 330.803 322.331 cv
330.803 326.196 333.936 329.329 337.801 329.329 cv
340.938 329.329 343.593 327.265 344.482 324.42 cv
349.462 324.42 li
350.351 327.265 353.006 329.329 356.143 329.329 cv
360.008 329.329 363.141 326.196 363.141 322.331 cv
363.141 318.466 360.008 315.333 356.143 315.333 cv
cp
.348486 0 .00491341 0 cmyk
f
344.482 323.675 mo
349.462 323.675 li
349.788 323.675 350.076 323.887 350.173 324.198 cv
350.993 326.821 353.392 328.584 356.143 328.584 cv
359.591 328.584 362.396 325.779 362.396 322.331 cv
362.396 318.883 359.591 316.078 356.143 316.078 cv
337.801 316.078 li
334.353 316.078 331.548 318.883 331.548 322.331 cv
331.548 325.779 334.353 328.584 337.801 328.584 cv
340.552 328.584 342.951 326.821 343.771 324.198 cv
343.868 323.887 344.156 323.675 344.482 323.675 cv
cp
356.143 330.074 mo
354.459 330.074 352.858 329.543 351.513 328.538 cv
350.362 327.679 349.461 326.495 348.935 325.165 cv
345.008 325.165 li
344.483 326.495 343.582 327.679 342.431 328.538 cv
341.085 329.543 339.484 330.074 337.801 330.074 cv
333.531 330.074 330.058 326.601 330.058 322.331 cv
330.058 318.061 333.531 314.588 337.801 314.588 cv
356.143 314.588 li
360.413 314.588 363.886 318.061 363.886 322.331 cv
363.886 326.601 360.413 330.074 356.143 330.074 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
338.179 319.686 mo
338.179 324.526 li
338.179 319.686 li
cp
0 0 0 0 cmyk
f
338.179 325.271 mo
337.767 325.271 337.434 324.938 337.434 324.526 cv
337.434 319.686 li
337.434 319.274 337.767 318.941 338.179 318.941 cv
338.59 318.941 338.924 319.274 338.924 319.686 cv
338.924 324.526 li
338.924 324.938 338.59 325.271 338.179 325.271 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
340.599 322.106 mo
335.759 322.106 li
340.599 322.106 li
cp
0 0 0 0 cmyk
f
340.599 322.851 mo
335.759 322.851 li
335.347 322.851 335.013 322.517 335.013 322.106 cv
335.013 321.694 335.347 321.361 335.759 321.361 cv
340.599 321.361 li
341.01 321.361 341.344 321.694 341.344 322.106 cv
341.344 322.517 341.01 322.851 340.599 322.851 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
357.206 319.72 mo
357.206 320.242 356.783 320.665 356.261 320.665 cv
355.739 320.665 355.316 320.242 355.316 319.72 cv
355.316 319.198 355.739 318.775 356.261 318.775 cv
356.783 318.775 357.206 319.198 357.206 319.72 cv
cp
f
357.206 324.183 mo
357.206 324.705 356.783 325.128 356.261 325.128 cv
355.739 325.128 355.316 324.705 355.316 324.183 cv
355.316 323.661 355.739 323.238 356.261 323.238 cv
356.783 323.238 357.206 323.661 357.206 324.183 cv
cp
f
358.492 322.896 mo
357.97 322.896 357.547 322.473 357.547 321.952 cv
357.547 321.43 357.97 321.007 358.492 321.007 cv
359.014 321.007 359.437 321.43 359.437 321.952 cv
359.437 322.473 359.014 322.896 358.492 322.896 cv
cp
f
354.029 322.896 mo
353.507 322.896 353.084 322.473 353.084 321.952 cv
353.084 321.43 353.507 321.007 354.029 321.007 cv
354.551 321.007 354.974 321.43 354.974 321.952 cv
354.974 322.473 354.551 322.896 354.029 322.896 cv
cp
f
336.706 292.409 mo
336.706 295.441 334.247 297.9 331.215 297.9 cv
328.182 297.9 325.724 295.441 325.724 292.409 cv
325.724 289.376 328.182 286.918 331.215 286.918 cv
334.247 286.918 336.706 289.376 336.706 292.409 cv
cp
0 0 0 0 cmyk
f
331.215 287.663 mo
328.598 287.663 326.469 289.792 326.469 292.409 cv
326.469 295.025 328.598 297.154 331.215 297.154 cv
333.831 297.154 335.96 295.025 335.96 292.409 cv
335.96 289.792 333.831 287.663 331.215 287.663 cv
cp
331.215 298.645 mo
327.776 298.645 324.979 295.847 324.979 292.409 cv
324.979 288.97 327.776 286.173 331.215 286.173 cv
334.653 286.173 337.451 288.97 337.451 292.409 cv
337.451 295.847 334.653 298.645 331.215 298.645 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
336.834 305.239 mo
325.595 305.239 li
325.595 303.584 li
325.595 300.48 328.111 297.965 331.215 297.965 cv
331.215 297.965 li
334.318 297.965 336.834 300.48 336.834 303.584 cv
336.834 305.239 li
cp
0 0 0 0 cmyk
f
326.341 304.493 mo
336.089 304.493 li
336.089 303.584 li
336.089 300.896 333.902 298.71 331.215 298.71 cv
328.527 298.71 326.341 300.896 326.341 303.584 cv
326.341 304.493 li
cp
336.834 305.984 mo
325.595 305.984 li
325.184 305.984 324.85 305.65 324.85 305.239 cv
324.85 303.584 li
324.85 300.074 327.705 297.219 331.215 297.219 cv
334.724 297.219 337.579 300.074 337.579 303.584 cv
337.579 305.239 li
337.579 305.65 337.246 305.984 336.834 305.984 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
352.188 292.409 mo
352.188 295.441 349.73 297.9 346.697 297.9 cv
343.665 297.9 341.206 295.441 341.206 292.409 cv
341.206 289.376 343.665 286.918 346.697 286.918 cv
349.73 286.918 352.188 289.376 352.188 292.409 cv
cp
0 0 0 0 cmyk
f
346.697 287.663 mo
344.08 287.663 341.952 289.792 341.952 292.409 cv
341.952 295.025 344.08 297.154 346.697 297.154 cv
349.314 297.154 351.443 295.025 351.443 292.409 cv
351.443 289.792 349.314 287.663 346.697 287.663 cv
cp
346.697 298.645 mo
343.259 298.645 340.461 295.847 340.461 292.409 cv
340.461 288.97 343.259 286.173 346.697 286.173 cv
350.136 286.173 352.933 288.97 352.933 292.409 cv
352.933 295.847 350.136 298.645 346.697 298.645 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
352.317 305.239 mo
341.078 305.239 li
341.078 303.584 li
341.078 300.48 343.594 297.965 346.697 297.965 cv
346.697 297.965 li
349.801 297.965 352.317 300.48 352.317 303.584 cv
352.317 305.239 li
cp
0 0 0 0 cmyk
f
341.823 304.493 mo
351.571 304.493 li
351.571 303.584 li
351.571 300.896 349.385 298.71 346.697 298.71 cv
344.01 298.71 341.823 300.896 341.823 303.584 cv
341.823 304.493 li
cp
352.317 305.984 mo
341.078 305.984 li
340.666 305.984 340.333 305.65 340.333 305.239 cv
340.333 303.584 li
340.333 300.074 343.188 297.219 346.697 297.219 cv
350.207 297.219 353.062 300.074 353.062 303.584 cv
353.062 305.239 li
353.062 305.65 352.728 305.984 352.317 305.984 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
367.729 292.409 mo
367.729 295.441 365.271 297.9 362.239 297.9 cv
359.206 297.9 356.748 295.441 356.748 292.409 cv
356.748 289.376 359.206 286.918 362.239 286.918 cv
365.271 286.918 367.729 289.376 367.729 292.409 cv
cp
0 0 0 0 cmyk
f
362.239 287.663 mo
359.622 287.663 357.493 289.792 357.493 292.409 cv
357.493 295.025 359.622 297.154 362.239 297.154 cv
364.855 297.154 366.984 295.025 366.984 292.409 cv
366.984 289.792 364.855 287.663 362.239 287.663 cv
cp
362.239 298.645 mo
358.8 298.645 356.003 295.847 356.003 292.409 cv
356.003 288.97 358.8 286.173 362.239 286.173 cv
365.677 286.173 368.475 288.97 368.475 292.409 cv
368.475 295.847 365.677 298.645 362.239 298.645 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
367.858 305.239 mo
356.619 305.239 li
356.619 303.584 li
356.619 300.48 359.135 297.965 362.239 297.965 cv
362.239 297.965 li
365.342 297.965 367.858 300.48 367.858 303.584 cv
367.858 305.239 li
cp
0 0 0 0 cmyk
f
357.364 304.493 mo
367.113 304.493 li
367.113 303.584 li
367.113 300.896 364.926 298.71 362.239 298.71 cv
359.551 298.71 357.364 300.896 357.364 303.584 cv
357.364 304.493 li
cp
367.858 305.984 mo
356.619 305.984 li
356.208 305.984 355.874 305.65 355.874 305.239 cv
355.874 303.584 li
355.874 300.074 358.729 297.219 362.239 297.219 cv
365.748 297.219 368.603 300.074 368.603 303.584 cv
368.603 305.239 li
368.603 305.65 368.269 305.984 367.858 305.984 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
362.239 311.751 mo
331.215 311.751 li
330.803 311.751 330.47 311.417 330.47 311.006 cv
330.47 305.158 li
330.47 304.746 330.803 304.413 331.215 304.413 cv
331.626 304.413 331.96 304.746 331.96 305.158 cv
331.96 310.261 li
361.493 310.261 li
361.493 305.158 li
361.493 304.746 361.827 304.413 362.239 304.413 cv
362.65 304.413 362.984 304.746 362.984 305.158 cv
362.984 311.006 li
362.984 311.417 362.65 311.751 362.239 311.751 cv
cp
f
346.993 316.078 mo
346.581 316.078 346.248 315.744 346.248 315.333 cv
346.248 306.076 li
346.248 305.665 346.581 305.331 346.993 305.331 cv
347.404 305.331 347.738 305.665 347.738 306.076 cv
347.738 315.333 li
347.738 315.744 347.404 316.078 346.993 316.078 cv
cp
f
263.267 390.024 mo
259.314 388.686 li
263.267 390.024 li
cp
0 0 0 0 cmyk
f
263.267 390.769 mo
263.188 390.769 263.108 390.756 263.028 390.729 cv
259.075 389.392 li
258.685 389.26 258.476 388.837 258.608 388.447 cv
258.74 388.057 259.163 387.848 259.553 387.98 cv
263.506 389.318 li
263.896 389.45 264.105 389.873 263.973 390.262 cv
263.868 390.573 263.578 390.769 263.267 390.769 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
257.1 389.833 mo
256.16 389.515 255.656 388.495 255.974 387.556 cv
256.292 386.616 257.312 386.112 258.252 386.43 cv
259.192 386.748 259.696 387.767 259.378 388.707 cv
259.059 389.647 258.04 390.151 257.1 389.833 cv
cp
f
275.503 390.024 mo
279.457 388.686 li
275.503 390.024 li
cp
0 0 0 0 cmyk
f
275.503 390.769 mo
275.192 390.769 274.902 390.573 274.797 390.262 cv
274.665 389.873 274.875 389.45 275.264 389.318 cv
279.218 387.98 li
279.607 387.848 280.03 388.057 280.162 388.447 cv
280.294 388.837 280.085 389.26 279.695 389.392 cv
275.742 390.729 li
275.663 390.756 275.582 390.769 275.503 390.769 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
281.671 389.833 mo
282.61 389.515 283.114 388.495 282.796 387.556 cv
282.478 386.616 281.459 386.112 280.519 386.43 cv
279.579 386.748 279.075 387.767 279.393 388.707 cv
279.711 389.647 280.731 390.151 281.671 389.833 cv
cp
f
279.098 372.165 mo
279.098 377.466 274.801 381.764 269.5 381.764 cv
264.199 381.764 259.902 377.466 259.902 372.165 cv
259.902 366.864 264.199 362.567 269.5 362.567 cv
274.801 362.567 279.098 366.864 279.098 372.165 cv
cp
0 0 0 0 cmyk
f
269.5 363.312 mo
264.618 363.312 260.647 367.284 260.647 372.165 cv
260.647 377.047 264.618 381.018 269.5 381.018 cv
274.382 381.018 278.353 377.047 278.353 372.165 cv
278.353 367.284 274.382 363.312 269.5 363.312 cv
cp
269.5 382.509 mo
263.797 382.509 259.156 377.869 259.156 372.165 cv
259.156 366.462 263.797 361.822 269.5 361.822 cv
275.203 361.822 279.843 366.462 279.843 372.165 cv
279.843 377.869 275.203 382.509 269.5 382.509 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
270.257 372.783 mo
268.609 372.813 li
267.382 373.117 266.473 374.224 266.473 375.544 cv
266.473 377.711 li
272.527 377.711 li
272.527 375.544 li
272.527 374.176 271.55 373.037 270.257 372.783 cv
cp
0 0 0 0 cmyk
f
267.218 376.966 mo
271.781 376.966 li
271.781 375.544 li
271.781 374.582 271.114 373.746 270.185 373.53 cv
268.713 373.556 li
267.829 373.81 267.218 374.617 267.218 375.544 cv
267.218 376.966 li
cp
272.527 378.456 mo
266.473 378.456 li
266.062 378.456 265.728 378.122 265.728 377.711 cv
265.728 375.544 li
265.728 373.904 266.839 372.484 268.43 372.09 cv
268.484 372.076 268.539 372.069 268.595 372.068 cv
270.243 372.038 li
270.295 372.037 270.349 372.042 270.4 372.052 cv
272.064 372.378 273.272 373.847 273.272 375.544 cv
273.272 377.711 li
273.272 378.122 272.938 378.456 272.527 378.456 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
272.837 369.957 mo
272.837 371.8 271.343 373.294 269.5 373.294 cv
267.657 373.294 266.163 371.8 266.163 369.957 cv
266.163 368.114 267.657 366.62 269.5 366.62 cv
271.343 366.62 272.837 368.114 272.837 369.957 cv
cp
0 0 0 0 cmyk
f
269.5 367.365 mo
268.071 367.365 266.908 368.528 266.908 369.957 cv
266.908 371.386 268.071 372.549 269.5 372.549 cv
270.929 372.549 272.092 371.386 272.092 369.957 cv
272.092 368.528 270.929 367.365 269.5 367.365 cv
cp
269.5 374.039 mo
267.249 374.039 265.418 372.208 265.418 369.957 cv
265.418 367.706 267.249 365.875 269.5 365.875 cv
271.751 365.875 273.582 367.706 273.582 369.957 cv
273.582 372.208 271.751 374.039 269.5 374.039 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
269.5 388.811 mo
269.5 381.764 li
269.5 388.811 li
cp
0 0 0 0 cmyk
f
269.5 389.557 mo
269.088 389.557 268.755 389.223 268.755 388.811 cv
268.755 381.764 li
268.755 381.352 269.088 381.018 269.5 381.018 cv
269.911 381.018 270.245 381.352 270.245 381.764 cv
270.245 388.811 li
270.245 389.223 269.911 389.557 269.5 389.557 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
254.262 364.858 mo
260.366 368.382 li
254.262 364.858 li
cp
0 0 0 0 cmyk
f
260.365 369.127 mo
260.238 369.127 260.11 369.095 259.993 369.027 cv
253.889 365.503 li
253.533 365.298 253.411 364.842 253.617 364.485 cv
253.822 364.129 254.278 364.007 254.635 364.213 cv
260.738 367.737 li
261.095 367.942 261.217 368.398 261.011 368.755 cv
260.873 368.994 260.622 369.127 260.365 369.127 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
284.721 364.858 mo
278.618 368.382 li
284.721 364.858 li
cp
0 0 0 0 cmyk
f
278.619 369.127 mo
278.361 369.127 278.111 368.994 277.973 368.755 cv
277.767 368.398 277.889 367.942 278.245 367.737 cv
284.349 364.213 li
284.705 364.007 285.161 364.129 285.367 364.485 cv
285.573 364.842 285.451 365.298 285.094 365.503 cv
278.991 369.027 li
278.873 369.095 278.745 369.127 278.619 369.127 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
294.702 363.223 mo
294.702 366.941 291.687 369.956 287.968 369.956 cv
284.249 369.956 281.234 366.941 281.234 363.223 cv
281.234 359.504 284.249 356.489 287.968 356.489 cv
291.687 356.489 294.702 359.504 294.702 363.223 cv
cp
.348486 0 .00491341 0 cmyk
f
287.968 357.234 mo
284.666 357.234 281.979 359.921 281.979 363.223 cv
281.979 366.525 284.666 369.211 287.968 369.211 cv
291.27 369.211 293.956 366.525 293.956 363.223 cv
293.956 359.921 291.27 357.234 287.968 357.234 cv
cp
287.968 370.701 mo
283.844 370.701 280.489 367.346 280.489 363.223 cv
280.489 359.099 283.844 355.744 287.968 355.744 cv
292.092 355.744 295.447 359.099 295.447 363.223 cv
295.447 367.346 292.092 370.701 287.968 370.701 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
288.564 363.962 mo
287.266 363.985 li
286.3 364.224 285.584 365.096 285.584 366.136 cv
285.584 366.971 li
290.351 366.971 li
290.351 366.136 li
290.351 365.059 289.583 364.161 288.564 363.962 cv
cp
0 0 0 0 cmyk
f
286.33 366.226 mo
289.606 366.226 li
289.606 366.136 li
289.606 365.458 289.141 364.869 288.49 364.708 cv
287.372 364.729 li
286.755 364.915 286.33 365.483 286.33 366.136 cv
286.33 366.226 li
cp
290.351 367.716 mo
285.584 367.716 li
285.173 367.716 284.839 367.383 284.839 366.971 cv
284.839 366.136 li
284.839 364.771 285.764 363.59 287.087 363.262 cv
287.141 363.248 287.197 363.241 287.253 363.24 cv
288.551 363.217 li
288.603 363.216 288.656 363.22 288.707 363.23 cv
290.092 363.502 291.096 364.724 291.096 366.136 cv
291.096 366.971 li
291.096 367.383 290.763 367.716 290.351 367.716 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
290.596 361.736 mo
290.596 363.187 289.419 364.364 287.968 364.364 cv
286.517 364.364 285.34 363.187 285.34 361.736 cv
285.34 360.285 286.517 359.108 287.968 359.108 cv
289.419 359.108 290.596 360.285 290.596 361.736 cv
cp
0 0 0 0 cmyk
f
287.968 359.853 mo
286.93 359.853 286.085 360.698 286.085 361.736 cv
286.085 362.774 286.93 363.619 287.968 363.619 cv
289.006 363.619 289.85 362.774 289.85 361.736 cv
289.85 360.698 289.006 359.853 287.968 359.853 cv
cp
287.968 365.109 mo
286.108 365.109 284.595 363.596 284.595 361.736 cv
284.595 359.876 286.108 358.363 287.968 358.363 cv
289.828 358.363 291.341 359.876 291.341 361.736 cv
291.341 363.596 289.828 365.109 287.968 365.109 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
258.167 363.223 mo
258.167 366.941 255.152 369.956 251.433 369.956 cv
247.715 369.956 244.7 366.941 244.7 363.223 cv
244.7 359.504 247.715 356.489 251.433 356.489 cv
255.152 356.489 258.167 359.504 258.167 363.223 cv
cp
.348486 0 .00491341 0 cmyk
f
251.433 357.234 mo
248.131 357.234 245.445 359.921 245.445 363.223 cv
245.445 366.525 248.131 369.211 251.433 369.211 cv
254.735 369.211 257.422 366.525 257.422 363.223 cv
257.422 359.921 254.735 357.234 251.433 357.234 cv
cp
251.433 370.701 mo
247.31 370.701 243.955 367.346 243.955 363.223 cv
243.955 359.099 247.31 355.744 251.433 355.744 cv
255.557 355.744 258.912 359.099 258.912 363.223 cv
258.912 367.346 255.557 370.701 251.433 370.701 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
252.03 363.962 mo
250.732 363.985 li
249.766 364.224 249.05 365.096 249.05 366.136 cv
249.05 366.971 li
253.817 366.971 li
253.817 366.136 li
253.817 365.059 253.048 364.161 252.03 363.962 cv
cp
0 0 0 0 cmyk
f
249.795 366.226 mo
253.072 366.226 li
253.072 366.136 li
253.072 365.458 252.607 364.869 251.956 364.708 cv
250.838 364.729 li
250.22 364.915 249.795 365.483 249.795 366.136 cv
249.795 366.226 li
cp
253.817 367.716 mo
249.05 367.716 li
248.639 367.716 248.305 367.383 248.305 366.971 cv
248.305 366.136 li
248.305 364.771 249.229 363.59 250.552 363.262 cv
250.607 363.248 250.662 363.241 250.718 363.24 cv
252.016 363.217 li
252.069 363.216 252.121 363.22 252.173 363.23 cv
253.557 363.502 254.562 364.724 254.562 366.136 cv
254.562 366.971 li
254.562 367.383 254.228 367.716 253.817 367.716 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
254.061 361.736 mo
254.061 363.187 252.885 364.364 251.433 364.364 cv
249.982 364.364 248.806 363.187 248.806 361.736 cv
248.806 360.285 249.982 359.108 251.433 359.108 cv
252.885 359.108 254.061 360.285 254.061 361.736 cv
cp
0 0 0 0 cmyk
f
251.433 359.853 mo
250.395 359.853 249.551 360.698 249.551 361.736 cv
249.551 362.774 250.395 363.619 251.433 363.619 cv
252.472 363.619 253.316 362.774 253.316 361.736 cv
253.316 360.698 252.472 359.853 251.433 359.853 cv
cp
251.433 365.109 mo
249.574 365.109 248.061 363.596 248.061 361.736 cv
248.061 359.876 249.574 358.363 251.433 358.363 cv
253.293 358.363 254.806 359.876 254.806 361.736 cv
254.806 363.596 253.293 365.109 251.433 365.109 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
276.233 392.443 mo
276.233 396.162 273.219 399.177 269.5 399.177 cv
265.781 399.177 262.766 396.162 262.766 392.443 cv
262.766 388.724 265.781 385.709 269.5 385.709 cv
273.219 385.709 276.233 388.724 276.233 392.443 cv
cp
.348486 0 .00491341 0 cmyk
f
269.5 386.455 mo
266.198 386.455 263.511 389.141 263.511 392.443 cv
263.511 395.745 266.198 398.431 269.5 398.431 cv
272.802 398.431 275.488 395.745 275.488 392.443 cv
275.488 389.141 272.802 386.455 269.5 386.455 cv
cp
269.5 399.922 mo
265.376 399.922 262.021 396.567 262.021 392.443 cv
262.021 388.319 265.376 384.964 269.5 384.964 cv
273.624 384.964 276.979 388.319 276.979 392.443 cv
276.979 396.567 273.624 399.922 269.5 399.922 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
270.096 393.182 mo
268.798 393.206 li
267.832 393.445 267.116 394.317 267.116 395.356 cv
267.116 396.192 li
271.883 396.192 li
271.883 395.356 li
271.883 394.279 271.115 393.382 270.096 393.182 cv
cp
0 0 0 0 cmyk
f
267.862 395.446 mo
271.138 395.446 li
271.138 395.356 li
271.138 394.679 270.673 394.089 270.022 393.929 cv
268.904 393.949 li
268.287 394.136 267.862 394.704 267.862 395.356 cv
267.862 395.446 li
cp
271.883 396.937 mo
267.116 396.937 li
266.705 396.937 266.371 396.603 266.371 396.192 cv
266.371 395.356 li
266.371 393.992 267.296 392.81 268.619 392.482 cv
268.673 392.469 268.729 392.462 268.785 392.461 cv
270.082 392.437 li
270.135 392.437 270.188 392.441 270.239 392.451 cv
271.624 392.722 272.628 393.944 272.628 395.356 cv
272.628 396.192 li
272.628 396.603 272.295 396.937 271.883 396.937 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
272.128 390.957 mo
272.128 392.408 270.951 393.584 269.5 393.584 cv
268.049 393.584 266.872 392.408 266.872 390.957 cv
266.872 389.505 268.049 388.329 269.5 388.329 cv
270.951 388.329 272.128 389.505 272.128 390.957 cv
cp
0 0 0 0 cmyk
f
269.5 389.074 mo
268.462 389.074 267.617 389.918 267.617 390.957 cv
267.617 391.995 268.462 392.839 269.5 392.839 cv
270.538 392.839 271.382 391.995 271.382 390.957 cv
271.382 389.918 270.538 389.074 269.5 389.074 cv
cp
269.5 394.329 mo
267.64 394.329 266.127 392.816 266.127 390.957 cv
266.127 389.097 267.64 387.584 269.5 387.584 cv
271.36 387.584 272.873 389.097 272.873 390.957 cv
272.873 392.816 271.36 394.329 269.5 394.329 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
251.433 369.956 mo
251.433 374.13 li
251.433 369.956 li
cp
0 0 0 0 cmyk
f
251.433 374.875 mo
251.022 374.875 250.688 374.541 250.688 374.13 cv
250.688 369.956 li
250.688 369.545 251.022 369.211 251.433 369.211 cv
251.845 369.211 252.179 369.545 252.179 369.956 cv
252.179 374.13 li
252.179 374.541 251.845 374.875 251.433 374.875 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
253.23 375.859 mo
253.23 376.851 252.426 377.656 251.433 377.656 cv
250.441 377.656 249.637 376.851 249.637 375.859 cv
249.637 374.867 250.441 374.062 251.433 374.062 cv
252.426 374.062 253.23 374.867 253.23 375.859 cv
cp
f
256.226 358.094 mo
259.757 355.868 li
256.226 358.094 li
cp
0 0 0 0 cmyk
f
256.227 358.839 mo
255.98 358.839 255.738 358.716 255.596 358.491 cv
255.377 358.143 255.481 357.683 255.829 357.463 cv
259.36 355.238 li
259.708 355.019 260.168 355.123 260.387 355.471 cv
260.607 355.819 260.503 356.279 260.154 356.499 cv
256.624 358.724 li
256.5 358.802 256.363 358.839 256.227 358.839 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
260.262 353.427 mo
261.101 352.897 262.211 353.149 262.74 353.988 cv
263.269 354.828 263.017 355.937 262.178 356.466 cv
261.339 356.995 260.229 356.744 259.7 355.904 cv
259.171 355.065 259.423 353.956 260.262 353.427 cv
cp
f
287.968 369.956 mo
287.968 374.13 li
287.968 369.956 li
cp
0 0 0 0 cmyk
f
287.968 374.875 mo
287.556 374.875 287.223 374.541 287.223 374.13 cv
287.223 369.956 li
287.223 369.545 287.556 369.211 287.968 369.211 cv
288.379 369.211 288.713 369.545 288.713 369.956 cv
288.713 374.13 li
288.713 374.541 288.379 374.875 287.968 374.875 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
286.171 375.859 mo
286.171 376.851 286.976 377.656 287.968 377.656 cv
288.96 377.656 289.764 376.851 289.764 375.859 cv
289.764 374.867 288.96 374.062 287.968 374.062 cv
286.976 374.062 286.171 374.867 286.171 375.859 cv
cp
f
283.175 358.094 mo
279.644 355.868 li
283.175 358.094 li
cp
0 0 0 0 cmyk
f
283.174 358.839 mo
283.038 358.839 282.901 358.802 282.778 358.724 cv
279.247 356.499 li
278.899 356.279 278.794 355.819 279.014 355.471 cv
279.233 355.123 279.693 355.019 280.042 355.238 cv
283.572 357.463 li
283.92 357.683 284.025 358.143 283.805 358.491 cv
283.664 358.716 283.422 358.839 283.174 358.839 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
279.139 353.427 mo
278.3 352.897 277.19 353.149 276.661 353.988 cv
276.132 354.828 276.384 355.937 277.223 356.466 cv
278.063 356.995 279.172 356.744 279.701 355.904 cv
280.23 355.065 279.979 353.956 279.139 353.427 cv
cp
f
192.734 382.673 mo
177.211 382.673 li
173.813 382.673 171.058 379.919 171.058 376.52 cv
171.058 360.997 li
171.058 357.599 173.813 354.844 177.211 354.844 cv
192.734 354.844 li
196.132 354.844 198.887 357.599 198.887 360.997 cv
198.887 376.52 li
198.887 379.919 196.132 382.673 192.734 382.673 cv
cp
.348486 0 .00491341 0 cmyk
f
177.211 355.589 mo
174.229 355.589 171.803 358.015 171.803 360.997 cv
171.803 376.52 li
171.803 379.502 174.229 381.928 177.211 381.928 cv
192.734 381.928 li
195.716 381.928 198.142 379.502 198.142 376.52 cv
198.142 360.997 li
198.142 358.015 195.716 355.589 192.734 355.589 cv
177.211 355.589 li
cp
192.734 383.419 mo
177.211 383.419 li
173.407 383.419 170.312 380.324 170.312 376.52 cv
170.312 360.997 li
170.312 357.193 173.407 354.099 177.211 354.099 cv
192.734 354.099 li
196.538 354.099 199.632 357.193 199.632 360.997 cv
199.632 376.52 li
199.632 380.324 196.538 383.419 192.734 383.419 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
186.263 391.348 mo
186.263 385.572 li
186.263 384.764 186.507 383.976 186.963 383.309 cv
188 381.796 li
188.233 381.457 188.357 381.055 188.357 380.644 cv
188.357 373.44 li
188.357 372.241 189.329 371.27 190.527 371.27 cv
190.527 371.27 li
191.725 371.27 192.697 372.241 192.697 373.44 cv
192.697 373.44 li
192.697 373.644 192.863 377.438 193.067 377.438 cv
194.728 377.438 li
195.85 377.438 196.759 378.347 196.759 379.469 cv
196.759 379.85 li
197.83 379.85 li
199.003 379.85 199.954 380.801 199.954 381.973 cv
199.954 381.973 li
199.954 381.973 li
201.056 381.973 201.949 382.867 201.949 383.969 cv
201.949 391.414 li
201.949 392.368 201.758 393.312 201.386 394.19 cv
200.453 396.397 li
200.15 397.112 199.449 397.576 198.673 397.576 cv
189.613 397.576 li
188.849 397.576 188.157 397.126 187.847 396.428 cv
186.876 394.24 li
186.471 393.329 186.263 392.344 186.263 391.348 cv
cp
0 0 0 0 cmyk
f
190.527 372.015 mo
189.741 372.015 189.102 372.654 189.102 373.44 cv
189.102 380.644 li
189.102 381.208 188.934 381.752 188.615 382.217 cv
187.578 383.731 li
187.205 384.275 187.008 384.912 187.008 385.572 cv
187.008 391.348 li
187.008 392.246 187.192 393.117 187.557 393.938 cv
188.528 396.126 li
188.719 396.554 189.144 396.831 189.613 396.831 cv
198.673 396.831 li
199.151 396.831 199.58 396.546 199.766 396.106 cv
200.7 393.9 li
201.035 393.109 201.204 392.273 201.204 391.414 cv
201.204 383.969 li
201.204 383.28 200.643 382.719 199.954 382.719 cv
199.542 382.719 199.209 382.385 199.209 381.973 cv
199.209 381.213 198.59 380.595 197.83 380.595 cv
196.759 380.595 li
196.348 380.595 196.014 380.261 196.014 379.85 cv
196.014 379.469 li
196.014 378.76 195.437 378.183 194.728 378.183 cv
193.067 378.183 li
192.878 378.183 192.421 378.111 192.266 377.442 cv
192.237 377.316 192.21 377.15 192.183 376.933 cv
192.142 376.599 192.101 376.139 192.062 375.567 cv
191.995 374.594 191.952 373.575 191.952 373.44 cv
191.952 372.654 191.313 372.015 190.527 372.015 cv
cp
198.673 398.321 mo
189.613 398.321 li
188.556 398.321 187.595 397.697 187.166 396.73 cv
186.195 394.542 li
185.745 393.53 185.517 392.456 185.517 391.348 cv
185.517 385.572 li
185.517 384.61 185.805 383.682 186.349 382.888 cv
187.386 381.375 li
187.534 381.159 187.612 380.906 187.612 380.644 cv
187.612 373.44 li
187.612 371.832 188.92 370.525 190.527 370.525 cv
192.134 370.525 193.442 371.832 193.442 373.44 cv
193.445 373.76 193.546 375.753 193.654 376.693 cv
194.728 376.693 li
196.135 376.693 197.302 377.745 197.481 379.105 cv
197.83 379.105 li
199.184 379.105 200.322 380.047 200.622 381.311 cv
201.811 381.61 202.695 382.688 202.695 383.969 cv
202.695 391.414 li
202.695 392.473 202.485 393.505 202.073 394.481 cv
201.139 396.687 li
200.719 397.68 199.751 398.321 198.673 398.321 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
179.531 371.839 mo
179.531 371.839 180.273 360.143 192.581 357.305 cv
194.366 365.433 179.531 371.839 179.531 371.839 cv
cp
0 0 0 0 cmyk
f
191.967 358.228 mo
189.603 358.876 187.54 359.923 185.826 361.347 cv
184.309 362.607 183.055 364.167 182.1 365.983 cv
181.157 367.777 180.695 369.46 180.473 370.566 cv
183.76 368.92 192.427 364.011 191.967 358.228 cv
cp
179.531 372.584 mo
179.38 372.584 179.23 372.538 179.102 372.449 cv
178.89 372.299 178.771 372.051 178.787 371.792 cv
178.795 371.666 179.003 368.67 180.781 365.29 cv
181.828 363.299 183.205 361.586 184.874 360.2 cv
186.955 358.471 189.492 357.253 192.414 356.579 cv
192.608 356.534 192.812 356.569 192.98 356.676 cv
193.148 356.782 193.267 356.951 193.309 357.146 cv
193.761 359.202 193.293 361.311 191.919 363.413 cv
190.863 365.028 189.266 366.644 187.173 368.216 cv
183.657 370.856 179.981 372.457 179.827 372.523 cv
179.732 372.564 179.631 372.584 179.531 372.584 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
177.516 378.074 mo
177.451 378.074 177.385 378.065 177.32 378.048 cv
176.923 377.939 176.688 377.53 176.797 377.133 cv
178.407 371.22 181.111 367.25 183.096 364.96 cv
185.268 362.454 187.058 361.363 187.134 361.317 cv
187.486 361.105 187.944 361.219 188.156 361.571 cv
188.369 361.923 188.255 362.381 187.904 362.593 cv
187.877 362.61 186.194 363.648 184.175 365.991 cv
182.308 368.158 179.762 371.917 178.235 377.524 cv
178.144 377.856 177.844 378.074 177.516 378.074 cv
cp
f
177.516 379.653 mo
182.517 379.653 li
177.516 379.653 li
cp
0 0 0 0 cmyk
f
182.517 380.399 mo
177.516 380.399 li
177.104 380.399 176.77 380.065 176.77 379.653 cv
176.77 379.242 177.104 378.908 177.516 378.908 cv
182.517 378.908 li
182.928 378.908 183.262 379.242 183.262 379.653 cv
183.262 380.065 182.928 380.399 182.517 380.399 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
205.566 291.805 mo
182.99 316.546 li
200.56 323.379 li
205.566 291.805 li
cp
0 0 0 0 cmyk
f
184.273 316.246 mo
199.969 322.35 li
204.44 294.144 li
184.273 316.246 li
cp
200.56 324.124 mo
200.469 324.124 200.377 324.108 200.29 324.074 cv
182.72 317.241 li
182.491 317.151 182.321 316.955 182.265 316.716 cv
182.209 316.477 182.274 316.225 182.44 316.044 cv
205.015 291.303 li
205.237 291.059 205.592 290.991 205.889 291.133 cv
206.185 291.276 206.353 291.597 206.302 291.922 cv
201.296 323.496 li
201.261 323.719 201.126 323.913 200.931 324.025 cv
200.817 324.091 200.689 324.124 200.56 324.124 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
205.566 291.805 mo
161.156 307.209 li
174.89 313.095 li
205.566 291.805 li
cp
0 0 0 0 cmyk
f
163.219 307.283 mo
174.804 312.248 li
200.681 294.288 li
163.219 307.283 li
cp
174.89 313.84 mo
174.79 313.84 174.69 313.821 174.596 313.78 cv
160.863 307.894 li
160.58 307.773 160.4 307.49 160.411 307.183 cv
160.422 306.875 160.621 306.606 160.912 306.505 cv
205.321 291.101 li
205.673 290.979 206.061 291.135 206.23 291.467 cv
206.399 291.799 206.296 292.205 205.99 292.417 cv
175.315 313.707 li
175.188 313.795 175.039 313.84 174.89 313.84 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
174.89 313.095 mo
178.632 326.893 li
182.99 316.546 li
174.89 313.095 li
cp
0 0 0 0 cmyk
f
178.633 327.639 mo
178.616 327.639 178.599 327.638 178.583 327.637 cv
178.265 327.616 177.997 327.395 177.913 327.089 cv
174.17 313.29 li
174.063 312.893 174.297 312.484 174.695 312.376 cv
175.092 312.268 175.501 312.503 175.609 312.9 cv
178.785 324.61 li
182.303 316.257 li
182.463 315.878 182.9 315.7 183.279 315.859 cv
183.659 316.019 183.837 316.456 183.677 316.835 cv
179.319 327.183 li
179.202 327.46 178.931 327.639 178.633 327.639 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
178.632 326.893 mo
186.415 318.349 li
178.632 326.893 li
cp
0 0 0 0 cmyk
f
178.632 327.639 mo
178.453 327.639 178.273 327.574 178.131 327.444 cv
177.826 327.167 177.804 326.696 178.082 326.392 cv
185.864 317.848 li
186.141 317.543 186.612 317.521 186.917 317.799 cv
187.221 318.076 187.243 318.547 186.966 318.851 cv
179.183 327.395 li
179.036 327.557 178.835 327.639 178.632 327.639 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
187.861 297.65 mo
187.861 301.837 184.467 305.231 180.28 305.231 cv
176.094 305.231 172.7 301.837 172.7 297.65 cv
172.7 293.464 176.094 290.069 180.28 290.069 cv
184.467 290.069 187.861 293.464 187.861 297.65 cv
cp
.348486 0 .00491341 0 cmyk
f
180.28 290.815 mo
176.511 290.815 173.445 293.881 173.445 297.65 cv
173.445 301.42 176.511 304.486 180.28 304.486 cv
184.05 304.486 187.116 301.42 187.116 297.65 cv
187.116 293.881 184.05 290.815 180.28 290.815 cv
cp
180.28 305.976 mo
175.689 305.976 171.954 302.241 171.954 297.65 cv
171.954 293.059 175.689 289.324 180.28 289.324 cv
184.871 289.324 188.606 293.059 188.606 297.65 cv
188.606 302.241 184.871 305.976 180.28 305.976 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
181.302 301.77 mo
179.054 301.77 li
179.054 297.431 li
179.054 296.904 179.065 296.422 179.087 295.985 cv
178.949 296.153 178.777 296.329 178.572 296.512 cv
177.641 297.28 li
176.492 295.867 li
179.306 293.574 li
181.302 293.574 li
181.302 301.77 li
cp
.75021 .679683 .670222 .90164 cmyk
f
109.965 327.639 mo
106.807 327.639 103.69 326.832 100.948 325.305 cv
100.588 325.105 100.459 324.651 100.659 324.292 cv
100.859 323.932 101.313 323.803 101.673 324.003 cv
104.193 325.406 107.061 326.148 109.965 326.148 cv
112.627 326.148 115.177 325.553 117.544 324.378 cv
117.912 324.195 118.36 324.345 118.542 324.714 cv
118.726 325.083 118.575 325.53 118.206 325.713 cv
115.632 326.991 112.859 327.639 109.965 327.639 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
114.052 324.27 mo
117.488 325.255 li
116.501 328.69 li
118.377 327.65 li
119.363 324.216 li
115.928 323.23 li
114.052 324.27 li
cp
f
127.781 309.822 mo
127.37 309.822 127.036 309.488 127.036 309.077 cv
127.036 306.146 126.281 303.255 124.853 300.717 cv
123.468 298.255 121.473 296.155 119.084 294.642 cv
118.737 294.422 118.633 293.962 118.853 293.614 cv
119.074 293.267 119.534 293.163 119.882 293.383 cv
122.478 295.027 124.646 297.31 126.152 299.986 cv
127.705 302.747 128.526 305.89 128.526 309.077 cv
128.526 309.488 128.193 309.822 127.781 309.822 cv
cp
f
120.804 297.684 mo
119.863 294.236 li
123.312 293.297 li
121.45 292.232 li
118.002 293.172 li
118.941 296.619 li
120.804 297.684 li
cp
f
92.2288 308.12 mo
92.2053 308.12 92.1816 308.119 92.1576 308.117 cv
91.7479 308.078 91.4472 307.714 91.4861 307.305 cv
91.784 304.161 92.8918 301.126 94.6898 298.527 cv
96.4503 295.983 98.8366 293.901 101.591 292.506 cv
101.958 292.32 102.407 292.467 102.592 292.835 cv
102.778 293.202 102.631 293.65 102.264 293.836 cv
99.7305 295.119 97.5352 297.034 95.9155 299.375 cv
94.2622 301.764 93.2436 304.555 92.9698 307.445 cv
92.9332 307.831 92.6087 308.12 92.2288 308.12 cv
cp
f
94.9078 304.539 mo
92.2563 306.935 li
89.8609 304.283 li
89.7523 306.425 li
92.1477 309.077 li
94.7991 306.681 li
94.9078 304.539 li
cp
f
115.203 290.146 mo
115.203 293.038 112.858 295.382 109.966 295.382 cv
107.074 295.382 104.73 293.038 104.73 290.146 cv
104.73 287.254 107.074 284.909 109.966 284.909 cv
112.858 284.909 115.203 287.254 115.203 290.146 cv
cp
.348486 0 .00491341 0 cmyk
f
109.966 285.654 mo
107.49 285.654 105.475 287.669 105.475 290.146 cv
105.475 292.622 107.49 294.637 109.966 294.637 cv
112.443 294.637 114.458 292.622 114.458 290.146 cv
114.458 287.669 112.443 285.654 109.966 285.654 cv
cp
109.966 296.128 mo
106.668 296.128 103.984 293.444 103.984 290.146 cv
103.984 286.847 106.668 284.164 109.966 284.164 cv
113.265 284.164 115.948 286.847 115.948 290.146 cv
115.948 293.444 113.265 296.128 109.966 296.128 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
115.326 302.382 mo
104.607 302.382 li
104.607 300.804 li
104.607 297.844 107.007 295.444 109.966 295.444 cv
109.966 295.444 li
112.926 295.444 115.326 297.844 115.326 300.804 cv
115.326 302.382 li
cp
.348486 0 .00491341 0 cmyk
f
105.352 301.637 mo
114.58 301.637 li
114.58 300.804 li
114.58 298.259 112.511 296.19 109.966 296.19 cv
107.422 296.19 105.352 298.259 105.352 300.804 cv
105.352 301.637 li
cp
115.326 303.127 mo
104.607 303.127 li
104.196 303.127 103.862 302.793 103.862 302.382 cv
103.862 300.804 li
103.862 297.438 106.6 294.699 109.966 294.699 cv
113.332 294.699 116.071 297.438 116.071 300.804 cv
116.071 302.382 li
116.071 302.793 115.737 303.127 115.326 303.127 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
133.018 317.944 mo
133.018 320.836 130.673 323.181 127.781 323.181 cv
124.889 323.181 122.545 320.836 122.545 317.944 cv
122.545 315.052 124.889 312.707 127.781 312.707 cv
130.673 312.707 133.018 315.052 133.018 317.944 cv
cp
.348486 0 .00491341 0 cmyk
f
127.781 313.452 mo
125.305 313.452 123.29 315.467 123.29 317.944 cv
123.29 320.421 125.305 322.435 127.781 322.435 cv
130.258 322.435 132.273 320.421 132.273 317.944 cv
132.273 315.467 130.258 313.452 127.781 313.452 cv
cp
127.781 323.926 mo
124.483 323.926 121.799 321.242 121.799 317.944 cv
121.799 314.646 124.483 311.962 127.781 311.962 cv
131.08 311.962 133.763 314.646 133.763 317.944 cv
133.763 321.242 131.08 323.926 127.781 323.926 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
133.14 330.18 mo
122.422 330.18 li
122.422 328.602 li
122.422 325.642 124.821 323.243 127.781 323.243 cv
127.781 323.243 li
130.741 323.243 133.14 325.642 133.14 328.602 cv
133.14 330.18 li
cp
.348486 0 .00491341 0 cmyk
f
123.167 329.435 mo
132.395 329.435 li
132.395 328.602 li
132.395 326.058 130.325 323.988 127.781 323.988 cv
125.237 323.988 123.167 326.058 123.167 328.602 cv
123.167 329.435 li
cp
133.14 330.925 mo
122.422 330.925 li
122.011 330.925 121.677 330.591 121.677 330.18 cv
121.677 328.602 li
121.677 325.236 124.415 322.497 127.781 322.497 cv
131.147 322.497 133.886 325.236 133.886 328.602 cv
133.886 330.18 li
133.886 330.591 133.552 330.925 133.14 330.925 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
98.069 317.944 mo
98.069 320.836 95.7245 323.181 92.8324 323.181 cv
89.9403 323.181 87.5957 320.836 87.5957 317.944 cv
87.5957 315.052 89.9403 312.707 92.8324 312.707 cv
95.7245 312.707 98.069 315.052 98.069 317.944 cv
cp
.348486 0 .00491341 0 cmyk
f
92.8324 313.452 mo
90.3558 313.452 88.3409 315.467 88.3409 317.944 cv
88.3409 320.421 90.3558 322.435 92.8324 322.435 cv
95.309 322.435 97.3238 320.421 97.3238 317.944 cv
97.3238 315.467 95.309 313.452 92.8324 313.452 cv
cp
92.8324 323.926 mo
89.534 323.926 86.8505 321.242 86.8505 317.944 cv
86.8505 314.646 89.534 311.962 92.8324 311.962 cv
96.1308 311.962 98.8142 314.646 98.8142 317.944 cv
98.8142 321.242 96.1308 323.926 92.8324 323.926 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
98.1916 330.18 mo
87.4732 330.18 li
87.4732 328.602 li
87.4732 325.642 89.8726 323.243 92.8324 323.243 cv
92.8324 323.243 li
95.7922 323.243 98.1916 325.642 98.1916 328.602 cv
98.1916 330.18 li
cp
.348486 0 .00491341 0 cmyk
f
88.2184 329.435 mo
97.4464 329.435 li
97.4464 328.602 li
97.4464 326.058 95.3766 323.988 92.8324 323.988 cv
90.2882 323.988 88.2184 326.058 88.2184 328.602 cv
88.2184 329.435 li
cp
98.1916 330.925 mo
87.4732 330.925 li
87.0617 330.925 86.728 330.591 86.728 330.18 cv
86.728 328.602 li
86.728 325.236 89.4664 322.497 92.8324 322.497 cv
96.1983 322.497 98.9368 325.236 98.9368 328.602 cv
98.9368 330.18 li
98.9368 330.591 98.6031 330.925 98.1916 330.925 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
134.335 397.032 mo
134.138 397.032 133.947 396.953 133.808 396.814 cv
133.669 396.675 133.59 396.483 133.59 396.287 cv
133.59 396.091 133.669 395.899 133.808 395.76 cv
133.947 395.622 134.138 395.542 134.335 395.542 cv
134.531 395.542 134.723 395.622 134.861 395.76 cv
135.001 395.899 135.08 396.091 135.08 396.287 cv
135.08 396.483 135.001 396.675 134.861 396.814 cv
134.723 396.953 134.531 397.032 134.335 397.032 cv
cp
f
87.1631 396.287 mo
87.1631 395.876 87.4962 395.542 87.9083 395.542 cv
87.9083 395.542 li
88.3196 395.542 88.6535 395.876 88.6535 396.287 cv
88.6535 396.287 li
88.6535 396.699 88.3196 397.032 87.9083 397.032 cv
87.9083 397.032 li
87.4962 397.032 87.1631 396.699 87.1631 396.287 cv
cp
89.8935 396.287 mo
89.8935 395.876 90.2273 395.542 90.6395 395.542 cv
90.6395 395.542 li
91.0508 395.542 91.3838 395.876 91.3838 396.287 cv
91.3838 396.287 li
91.3838 396.699 91.0508 397.032 90.6395 397.032 cv
90.6395 397.032 li
90.2273 397.032 89.8935 396.699 89.8935 396.287 cv
cp
92.6246 396.287 mo
92.6246 395.876 92.9584 395.542 93.3698 395.542 cv
93.3698 395.542 li
93.7819 395.542 94.115 395.876 94.115 396.287 cv
94.115 396.287 li
94.115 396.699 93.7819 397.032 93.3698 397.032 cv
93.3698 397.032 li
92.9584 397.032 92.6246 396.699 92.6246 396.287 cv
cp
95.3557 396.287 mo
95.3557 395.876 95.6896 395.542 96.1009 395.542 cv
96.1009 395.542 li
96.5123 395.542 96.8461 395.876 96.8461 396.287 cv
96.8461 396.287 li
96.8461 396.699 96.5123 397.032 96.1009 397.032 cv
96.1009 397.032 li
95.6896 397.032 95.3557 396.699 95.3557 396.287 cv
cp
98.0869 396.287 mo
98.0869 395.876 98.4207 395.542 98.832 395.542 cv
98.832 395.542 li
99.2434 395.542 99.5772 395.876 99.5772 396.287 cv
99.5772 396.287 li
99.5772 396.699 99.2434 397.032 98.832 397.032 cv
98.832 397.032 li
98.4207 397.032 98.0869 396.699 98.0869 396.287 cv
cp
100.818 396.287 mo
100.818 395.876 101.152 395.542 101.563 395.542 cv
101.563 395.542 li
101.975 395.542 102.308 395.876 102.308 396.287 cv
102.308 396.287 li
102.308 396.699 101.975 397.032 101.563 397.032 cv
101.563 397.032 li
101.152 397.032 100.818 396.699 100.818 396.287 cv
cp
103.549 396.287 mo
103.549 395.876 103.882 395.542 104.294 395.542 cv
104.294 395.542 li
104.706 395.542 105.039 395.876 105.039 396.287 cv
105.039 396.287 li
105.039 396.699 104.706 397.032 104.294 397.032 cv
104.294 397.032 li
103.882 397.032 103.549 396.699 103.549 396.287 cv
cp
106.28 396.287 mo
106.28 395.876 106.613 395.542 107.025 395.542 cv
107.025 395.542 li
107.437 395.542 107.77 395.876 107.77 396.287 cv
107.77 396.287 li
107.77 396.699 107.437 397.032 107.025 397.032 cv
107.025 397.032 li
106.613 397.032 106.28 396.699 106.28 396.287 cv
cp
109.011 396.287 mo
109.011 395.876 109.344 395.542 109.756 395.542 cv
109.756 395.542 li
110.168 395.542 110.501 395.876 110.501 396.287 cv
110.501 396.287 li
110.501 396.699 110.168 397.032 109.756 397.032 cv
109.756 397.032 li
109.344 397.032 109.011 396.699 109.011 396.287 cv
cp
111.742 396.287 mo
111.742 395.876 112.076 395.542 112.487 395.542 cv
112.487 395.542 li
112.898 395.542 113.232 395.876 113.232 396.287 cv
113.232 396.287 li
113.232 396.699 112.898 397.032 112.487 397.032 cv
112.487 397.032 li
112.076 397.032 111.742 396.699 111.742 396.287 cv
cp
114.473 396.287 mo
114.473 395.876 114.807 395.542 115.218 395.542 cv
115.218 395.542 li
115.629 395.542 115.963 395.876 115.963 396.287 cv
115.963 396.287 li
115.963 396.699 115.629 397.032 115.218 397.032 cv
115.218 397.032 li
114.807 397.032 114.473 396.699 114.473 396.287 cv
cp
117.204 396.287 mo
117.204 395.876 117.537 395.542 117.949 395.542 cv
117.949 395.542 li
118.361 395.542 118.694 395.876 118.694 396.287 cv
118.694 396.287 li
118.694 396.699 118.361 397.032 117.949 397.032 cv
117.949 397.032 li
117.537 397.032 117.204 396.699 117.204 396.287 cv
cp
119.934 396.287 mo
119.934 395.876 120.268 395.542 120.68 395.542 cv
120.68 395.542 li
121.092 395.542 121.426 395.876 121.426 396.287 cv
121.426 396.287 li
121.426 396.699 121.092 397.032 120.68 397.032 cv
120.68 397.032 li
120.268 397.032 119.934 396.699 119.934 396.287 cv
cp
122.665 396.287 mo
122.665 395.876 122.999 395.542 123.411 395.542 cv
123.411 395.542 li
123.823 395.542 124.156 395.876 124.156 396.287 cv
124.156 396.287 li
124.156 396.699 123.823 397.032 123.411 397.032 cv
123.411 397.032 li
122.999 397.032 122.665 396.699 122.665 396.287 cv
cp
125.397 396.287 mo
125.397 395.876 125.73 395.542 126.142 395.542 cv
126.142 395.542 li
126.553 395.542 126.887 395.876 126.887 396.287 cv
126.887 396.287 li
126.887 396.699 126.553 397.032 126.142 397.032 cv
126.142 397.032 li
125.73 397.032 125.397 396.699 125.397 396.287 cv
cp
128.128 396.287 mo
128.128 395.876 128.462 395.542 128.873 395.542 cv
128.873 395.542 li
129.284 395.542 129.618 395.876 129.618 396.287 cv
129.618 396.287 li
129.618 396.699 129.284 397.032 128.873 397.032 cv
128.873 397.032 li
128.462 397.032 128.128 396.699 128.128 396.287 cv
cp
130.859 396.287 mo
130.859 395.876 131.192 395.542 131.604 395.542 cv
131.604 395.542 li
132.015 395.542 132.349 395.876 132.349 396.287 cv
132.349 396.287 li
132.349 396.699 132.015 397.032 131.604 397.032 cv
131.604 397.032 li
131.192 397.032 130.859 396.699 130.859 396.287 cv
cp
f
85.1771 397.032 mo
84.9812 397.032 84.7889 396.953 84.6503 396.814 cv
84.5117 396.675 84.432 396.484 84.432 396.287 cv
84.432 396.091 84.5117 395.899 84.6503 395.76 cv
84.7889 395.622 84.9812 395.542 85.1771 395.542 cv
85.3731 395.542 85.5654 395.622 85.704 395.76 cv
85.8427 395.899 85.9223 396.091 85.9223 396.287 cv
85.9223 396.484 85.8427 396.675 85.704 396.814 cv
85.5654 396.953 85.3731 397.032 85.1771 397.032 cv
cp
f
84.432 358.154 mo
84.432 357.742 84.7658 357.409 85.1771 357.409 cv
85.1771 357.409 li
85.5885 357.409 85.9223 357.742 85.9223 358.154 cv
85.9223 358.154 li
85.9223 358.566 85.5885 358.9 85.1771 358.9 cv
85.1771 358.9 li
84.7658 358.9 84.432 358.566 84.432 358.154 cv
cp
84.432 360.878 mo
84.432 360.467 84.7658 360.133 85.1771 360.133 cv
85.1771 360.133 li
85.5885 360.133 85.9223 360.467 85.9223 360.878 cv
85.9223 360.878 li
85.9223 361.289 85.5885 361.623 85.1771 361.623 cv
85.1771 361.623 li
84.7658 361.623 84.432 361.289 84.432 360.878 cv
cp
84.432 363.602 mo
84.432 363.19 84.7658 362.856 85.1771 362.856 cv
85.1771 362.856 li
85.5885 362.856 85.9223 363.19 85.9223 363.602 cv
85.9223 363.602 li
85.9223 364.014 85.5885 364.347 85.1771 364.347 cv
85.1771 364.347 li
84.7658 364.347 84.432 364.014 84.432 363.602 cv
cp
84.432 366.325 mo
84.432 365.914 84.7658 365.58 85.1771 365.58 cv
85.1771 365.58 li
85.5885 365.58 85.9223 365.914 85.9223 366.325 cv
85.9223 366.325 li
85.9223 366.737 85.5885 367.071 85.1771 367.071 cv
85.1771 367.071 li
84.7658 367.071 84.432 366.737 84.432 366.325 cv
cp
84.432 369.05 mo
84.432 368.638 84.7658 368.305 85.1771 368.305 cv
85.1771 368.305 li
85.5885 368.305 85.9223 368.638 85.9223 369.05 cv
85.9223 369.05 li
85.9223 369.461 85.5885 369.795 85.1771 369.795 cv
85.1771 369.795 li
84.7658 369.795 84.432 369.461 84.432 369.05 cv
cp
84.432 371.773 mo
84.432 371.361 84.7658 371.028 85.1771 371.028 cv
85.1771 371.028 li
85.5885 371.028 85.9223 371.361 85.9223 371.773 cv
85.9223 371.773 li
85.9223 372.185 85.5885 372.519 85.1771 372.519 cv
85.1771 372.519 li
84.7658 372.519 84.432 372.185 84.432 371.773 cv
cp
84.432 374.497 mo
84.432 374.085 84.7658 373.752 85.1771 373.752 cv
85.1771 373.752 li
85.5885 373.752 85.9223 374.085 85.9223 374.497 cv
85.9223 374.497 li
85.9223 374.908 85.5885 375.242 85.1771 375.242 cv
85.1771 375.242 li
84.7658 375.242 84.432 374.908 84.432 374.497 cv
cp
84.432 377.221 mo
84.432 376.809 84.7658 376.476 85.1771 376.476 cv
85.1771 376.476 li
85.5885 376.476 85.9223 376.809 85.9223 377.221 cv
85.9223 377.221 li
85.9223 377.632 85.5885 377.966 85.1771 377.966 cv
85.1771 377.966 li
84.7658 377.966 84.432 377.632 84.432 377.221 cv
cp
84.432 379.944 mo
84.432 379.533 84.7658 379.199 85.1771 379.199 cv
85.1771 379.199 li
85.5885 379.199 85.9223 379.533 85.9223 379.944 cv
85.9223 379.944 li
85.9223 380.356 85.5885 380.69 85.1771 380.69 cv
85.1771 380.69 li
84.7658 380.69 84.432 380.356 84.432 379.944 cv
cp
84.432 382.669 mo
84.432 382.257 84.7658 381.923 85.1771 381.923 cv
85.1771 381.923 li
85.5885 381.923 85.9223 382.257 85.9223 382.669 cv
85.9223 382.669 li
85.9223 383.08 85.5885 383.413 85.1771 383.413 cv
85.1771 383.413 li
84.7658 383.413 84.432 383.08 84.432 382.669 cv
cp
84.432 385.393 mo
84.432 384.98 84.7658 384.647 85.1771 384.647 cv
85.1771 384.647 li
85.5885 384.647 85.9223 384.98 85.9223 385.393 cv
85.9223 385.393 li
85.9223 385.804 85.5885 386.138 85.1771 386.138 cv
85.1771 386.138 li
84.7658 386.138 84.432 385.804 84.432 385.393 cv
cp
84.432 388.116 mo
84.432 387.705 84.7658 387.371 85.1771 387.371 cv
85.1771 387.371 li
85.5885 387.371 85.9223 387.705 85.9223 388.116 cv
85.9223 388.116 li
85.9223 388.528 85.5885 388.861 85.1771 388.861 cv
85.1771 388.861 li
84.7658 388.861 84.432 388.528 84.432 388.116 cv
cp
84.432 390.84 mo
84.432 390.428 84.7658 390.095 85.1771 390.095 cv
85.1771 390.095 li
85.5885 390.095 85.9223 390.428 85.9223 390.84 cv
85.9223 390.84 li
85.9223 391.251 85.5885 391.585 85.1771 391.585 cv
85.1771 391.585 li
84.7658 391.585 84.432 391.251 84.432 390.84 cv
cp
84.432 393.564 mo
84.432 393.152 84.7658 392.818 85.1771 392.818 cv
85.1771 392.818 li
85.5885 392.818 85.9223 393.152 85.9223 393.564 cv
85.9223 393.564 li
85.9223 393.975 85.5885 394.309 85.1771 394.309 cv
85.1771 394.309 li
84.7658 394.309 84.432 393.975 84.432 393.564 cv
cp
f
85.1771 356.176 mo
84.9812 356.176 84.7889 356.096 84.6503 355.958 cv
84.5117 355.819 84.432 355.627 84.432 355.431 cv
84.432 355.234 84.5117 355.042 84.6503 354.904 cv
84.7889 354.764 84.9812 354.685 85.1771 354.685 cv
85.3731 354.685 85.5654 354.764 85.704 354.904 cv
85.8427 355.042 85.9223 355.235 85.9223 355.431 cv
85.9223 355.627 85.8427 355.819 85.704 355.958 cv
85.5654 356.096 85.3731 356.176 85.1771 356.176 cv
cp
f
87.1631 355.431 mo
87.1631 355.019 87.4962 354.685 87.9083 354.685 cv
87.9083 354.685 li
88.3196 354.685 88.6535 355.019 88.6535 355.431 cv
88.6535 355.431 li
88.6535 355.842 88.3196 356.176 87.9083 356.176 cv
87.9083 356.176 li
87.4962 356.176 87.1631 355.842 87.1631 355.431 cv
cp
89.8935 355.431 mo
89.8935 355.019 90.2273 354.685 90.6386 354.685 cv
90.6386 354.685 li
91.0508 354.685 91.3846 355.019 91.3846 355.431 cv
91.3846 355.431 li
91.3846 355.842 91.0508 356.176 90.6386 356.176 cv
90.6386 356.176 li
90.2273 356.176 89.8935 355.842 89.8935 355.431 cv
cp
92.6246 355.431 mo
92.6246 355.019 92.9584 354.685 93.3698 354.685 cv
93.3698 354.685 li
93.7819 354.685 94.115 355.019 94.115 355.431 cv
94.115 355.431 li
94.115 355.842 93.7819 356.176 93.3698 356.176 cv
93.3698 356.176 li
92.9584 356.176 92.6246 355.842 92.6246 355.431 cv
cp
95.3557 355.431 mo
95.3557 355.019 95.6896 354.685 96.1009 354.685 cv
96.1009 354.685 li
96.5123 354.685 96.8461 355.019 96.8461 355.431 cv
96.8461 355.431 li
96.8461 355.842 96.5123 356.176 96.1009 356.176 cv
96.1009 356.176 li
95.6896 356.176 95.3557 355.842 95.3557 355.431 cv
cp
98.0869 355.431 mo
98.0869 355.019 98.4207 354.685 98.832 354.685 cv
98.832 354.685 li
99.2434 354.685 99.5772 355.019 99.5772 355.431 cv
99.5772 355.431 li
99.5772 355.842 99.2434 356.176 98.832 356.176 cv
98.832 356.176 li
98.4207 356.176 98.0869 355.842 98.0869 355.431 cv
cp
100.818 355.431 mo
100.818 355.019 101.151 354.685 101.563 354.685 cv
101.563 354.685 li
101.975 354.685 102.308 355.019 102.308 355.431 cv
102.308 355.431 li
102.308 355.842 101.975 356.176 101.563 356.176 cv
101.563 356.176 li
101.151 356.176 100.818 355.842 100.818 355.431 cv
cp
103.549 355.431 mo
103.549 355.019 103.882 354.685 104.294 354.685 cv
104.294 354.685 li
104.706 354.685 105.039 355.019 105.039 355.431 cv
105.039 355.431 li
105.039 355.842 104.706 356.176 104.294 356.176 cv
104.294 356.176 li
103.882 356.176 103.549 355.842 103.549 355.431 cv
cp
106.28 355.431 mo
106.28 355.019 106.613 354.685 107.025 354.685 cv
107.025 354.685 li
107.437 354.685 107.77 355.019 107.77 355.431 cv
107.77 355.431 li
107.77 355.842 107.437 356.176 107.025 356.176 cv
107.025 356.176 li
106.613 356.176 106.28 355.842 106.28 355.431 cv
cp
109.011 355.431 mo
109.011 355.019 109.344 354.685 109.756 354.685 cv
109.756 354.685 li
110.167 354.685 110.501 355.019 110.501 355.431 cv
110.501 355.431 li
110.501 355.842 110.167 356.176 109.756 356.176 cv
109.756 356.176 li
109.344 356.176 109.011 355.842 109.011 355.431 cv
cp
111.742 355.431 mo
111.742 355.019 112.076 354.685 112.487 354.685 cv
112.487 354.685 li
112.898 354.685 113.232 355.019 113.232 355.431 cv
113.232 355.431 li
113.232 355.842 112.898 356.176 112.487 356.176 cv
112.487 356.176 li
112.076 356.176 111.742 355.842 111.742 355.431 cv
cp
114.473 355.431 mo
114.473 355.019 114.807 354.685 115.218 354.685 cv
115.218 354.685 li
115.629 354.685 115.963 355.019 115.963 355.431 cv
115.963 355.431 li
115.963 355.842 115.629 356.176 115.218 356.176 cv
115.218 356.176 li
114.807 356.176 114.473 355.842 114.473 355.431 cv
cp
117.204 355.431 mo
117.204 355.019 117.537 354.685 117.949 354.685 cv
117.949 354.685 li
118.361 354.685 118.694 355.019 118.694 355.431 cv
118.694 355.431 li
118.694 355.842 118.361 356.176 117.949 356.176 cv
117.949 356.176 li
117.537 356.176 117.204 355.842 117.204 355.431 cv
cp
119.935 355.431 mo
119.935 355.019 120.268 354.685 120.68 354.685 cv
120.68 354.685 li
121.092 354.685 121.425 355.019 121.425 355.431 cv
121.425 355.431 li
121.425 355.842 121.092 356.176 120.68 356.176 cv
120.68 356.176 li
120.268 356.176 119.935 355.842 119.935 355.431 cv
cp
122.665 355.431 mo
122.665 355.019 122.999 354.685 123.411 354.685 cv
123.411 354.685 li
123.822 354.685 124.156 355.019 124.156 355.431 cv
124.156 355.431 li
124.156 355.842 123.822 356.176 123.411 356.176 cv
123.411 356.176 li
122.999 356.176 122.665 355.842 122.665 355.431 cv
cp
125.397 355.431 mo
125.397 355.019 125.73 354.685 126.142 354.685 cv
126.142 354.685 li
126.553 354.685 126.887 355.019 126.887 355.431 cv
126.887 355.431 li
126.887 355.842 126.553 356.176 126.142 356.176 cv
126.142 356.176 li
125.73 356.176 125.397 355.842 125.397 355.431 cv
cp
128.128 355.431 mo
128.128 355.019 128.462 354.685 128.873 354.685 cv
128.873 354.685 li
129.284 354.685 129.618 355.019 129.618 355.431 cv
129.618 355.431 li
129.618 355.842 129.284 356.176 128.873 356.176 cv
128.873 356.176 li
128.462 356.176 128.128 355.842 128.128 355.431 cv
cp
130.859 355.431 mo
130.859 355.019 131.192 354.685 131.604 354.685 cv
131.604 354.685 li
132.015 354.685 132.349 355.019 132.349 355.431 cv
132.349 355.431 li
132.349 355.842 132.015 356.176 131.604 356.176 cv
131.604 356.176 li
131.192 356.176 130.859 355.842 130.859 355.431 cv
cp
f
134.335 356.176 mo
134.138 356.176 133.947 356.096 133.808 355.958 cv
133.669 355.819 133.59 355.627 133.59 355.431 cv
133.59 355.235 133.669 355.042 133.808 354.904 cv
133.947 354.764 134.138 354.685 134.335 354.685 cv
134.531 354.685 134.723 354.764 134.861 354.904 cv
135.001 355.042 135.08 355.235 135.08 355.431 cv
135.08 355.627 135.001 355.819 134.861 355.958 cv
134.723 356.096 134.531 356.176 134.335 356.176 cv
cp
f
133.589 358.154 mo
133.589 357.742 133.923 357.409 134.335 357.409 cv
134.335 357.409 li
134.747 357.409 135.08 357.742 135.08 358.154 cv
135.08 358.154 li
135.08 358.566 134.747 358.9 134.335 358.9 cv
134.335 358.9 li
133.923 358.9 133.589 358.566 133.589 358.154 cv
cp
133.589 360.878 mo
133.589 360.467 133.923 360.133 134.335 360.133 cv
134.335 360.133 li
134.747 360.133 135.08 360.467 135.08 360.878 cv
135.08 360.878 li
135.08 361.289 134.747 361.623 134.335 361.623 cv
134.335 361.623 li
133.923 361.623 133.589 361.289 133.589 360.878 cv
cp
133.589 363.602 mo
133.589 363.19 133.923 362.856 134.335 362.856 cv
134.335 362.856 li
134.747 362.856 135.08 363.19 135.08 363.602 cv
135.08 363.602 li
135.08 364.013 134.747 364.347 134.335 364.347 cv
134.335 364.347 li
133.923 364.347 133.589 364.013 133.589 363.602 cv
cp
133.589 366.325 mo
133.589 365.914 133.923 365.581 134.335 365.581 cv
134.335 365.581 li
134.747 365.581 135.08 365.914 135.08 366.325 cv
135.08 366.325 li
135.08 366.737 134.747 367.071 134.335 367.071 cv
134.335 367.071 li
133.923 367.071 133.589 366.737 133.589 366.325 cv
cp
133.589 369.05 mo
133.589 368.638 133.923 368.305 134.335 368.305 cv
134.335 368.305 li
134.747 368.305 135.08 368.638 135.08 369.05 cv
135.08 369.05 li
135.08 369.461 134.747 369.794 134.335 369.794 cv
134.335 369.794 li
133.923 369.794 133.589 369.461 133.589 369.05 cv
cp
133.589 371.773 mo
133.589 371.362 133.923 371.028 134.335 371.028 cv
134.335 371.028 li
134.747 371.028 135.08 371.362 135.08 371.773 cv
135.08 371.773 li
135.08 372.185 134.747 372.519 134.335 372.519 cv
134.335 372.519 li
133.923 372.519 133.589 372.185 133.589 371.773 cv
cp
133.589 374.497 mo
133.589 374.086 133.923 373.752 134.335 373.752 cv
134.335 373.752 li
134.747 373.752 135.08 374.086 135.08 374.497 cv
135.08 374.497 li
135.08 374.908 134.747 375.242 134.335 375.242 cv
134.335 375.242 li
133.923 375.242 133.589 374.908 133.589 374.497 cv
cp
133.589 377.221 mo
133.589 376.809 133.923 376.476 134.335 376.476 cv
134.335 376.476 li
134.747 376.476 135.08 376.809 135.08 377.221 cv
135.08 377.221 li
135.08 377.633 134.747 377.966 134.335 377.966 cv
134.335 377.966 li
133.923 377.966 133.589 377.633 133.589 377.221 cv
cp
133.589 379.944 mo
133.589 379.533 133.923 379.199 134.335 379.199 cv
134.335 379.199 li
134.747 379.199 135.08 379.533 135.08 379.944 cv
135.08 379.944 li
135.08 380.356 134.747 380.69 134.335 380.69 cv
134.335 380.69 li
133.923 380.69 133.589 380.356 133.589 379.944 cv
cp
133.589 382.669 mo
133.589 382.257 133.923 381.924 134.335 381.924 cv
134.335 381.924 li
134.747 381.924 135.08 382.257 135.08 382.669 cv
135.08 382.669 li
135.08 383.08 134.747 383.414 134.335 383.414 cv
134.335 383.414 li
133.923 383.414 133.589 383.08 133.589 382.669 cv
cp
133.589 385.392 mo
133.589 384.98 133.923 384.647 134.335 384.647 cv
134.335 384.647 li
134.747 384.647 135.08 384.98 135.08 385.392 cv
135.08 385.392 li
135.08 385.804 134.747 386.138 134.335 386.138 cv
134.335 386.138 li
133.923 386.138 133.589 385.804 133.589 385.392 cv
cp
133.589 388.116 mo
133.589 387.705 133.923 387.371 134.335 387.371 cv
134.335 387.371 li
134.747 387.371 135.08 387.705 135.08 388.116 cv
135.08 388.116 li
135.08 388.528 134.747 388.861 134.335 388.861 cv
134.335 388.861 li
133.923 388.861 133.589 388.528 133.589 388.116 cv
cp
133.589 390.84 mo
133.589 390.428 133.923 390.095 134.335 390.095 cv
134.335 390.095 li
134.747 390.095 135.08 390.428 135.08 390.84 cv
135.08 390.84 li
135.08 391.251 134.747 391.585 134.335 391.585 cv
134.335 391.585 li
133.923 391.585 133.589 391.251 133.589 390.84 cv
cp
133.589 393.564 mo
133.589 393.152 133.923 392.818 134.335 392.818 cv
134.335 392.818 li
134.747 392.818 135.08 393.152 135.08 393.564 cv
135.08 393.564 li
135.08 393.975 134.747 394.309 134.335 394.309 cv
134.335 394.309 li
133.923 394.309 133.589 393.975 133.589 393.564 cv
cp
f
107.078 372.84 mo
89.4543 372.84 li
89.4543 360.686 li
107.078 360.686 li
107.078 372.84 li
cp
0 0 0 0 cmyk
f
90.1995 372.095 mo
106.333 372.095 li
106.333 361.431 li
90.1995 361.431 li
90.1995 372.095 li
cp
107.078 373.585 mo
89.4543 373.585 li
89.0427 373.585 88.7091 373.252 88.7091 372.84 cv
88.7091 360.686 li
88.7091 360.274 89.0427 359.941 89.4543 359.941 cv
107.078 359.941 li
107.49 359.941 107.823 360.274 107.823 360.686 cv
107.823 372.84 li
107.823 373.252 107.49 373.585 107.078 373.585 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
89.4543 360.686 mo
98.2661 367.88 li
107.078 360.686 li
89.4543 360.686 li
cp
0 0 0 0 cmyk
f
91.5452 361.431 mo
98.2662 366.918 li
104.987 361.431 li
91.5452 361.431 li
cp
98.2662 368.625 mo
98.0991 368.625 97.932 368.57 97.7949 368.458 cv
88.983 361.263 li
88.7389 361.064 88.6466 360.732 88.7523 360.436 cv
88.8581 360.139 89.1392 359.941 89.4543 359.941 cv
107.078 359.941 li
107.393 359.941 107.674 360.139 107.78 360.436 cv
107.886 360.732 107.793 361.064 107.549 361.263 cv
98.7374 368.458 li
98.6003 368.57 98.4333 368.625 98.2662 368.625 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
89.4543 372.84 mo
95.9784 366.535 li
89.4543 372.84 li
cp
0 0 0 0 cmyk
f
89.4544 373.585 mo
89.2594 373.585 89.0647 373.509 88.9185 373.358 cv
88.6325 373.062 88.6405 372.59 88.9364 372.304 cv
95.4606 365.999 li
95.7565 365.713 96.2282 365.721 96.5142 366.017 cv
96.8002 366.313 96.7922 366.785 96.4963 367.071 cv
89.9721 373.376 li
89.8275 373.516 89.6408 373.585 89.4544 373.585 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
107.078 372.84 mo
100.554 366.535 li
107.078 372.84 li
cp
0 0 0 0 cmyk
f
107.078 373.585 mo
106.891 373.585 106.705 373.516 106.56 373.376 cv
100.036 367.071 li
99.74 366.785 99.732 366.313 100.018 366.017 cv
100.304 365.721 100.776 365.713 101.072 365.999 cv
107.596 372.304 li
107.892 372.59 107.9 373.062 107.614 373.358 cv
107.468 373.509 107.273 373.585 107.078 373.585 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
128.501 367.286 mo
118.076 363.288 li
118.907 360.07 li
129.332 364.068 li
128.501 367.286 li
cp
.348486 0 .00491341 0 cmyk
f
118.964 362.83 mo
127.988 366.291 li
128.444 364.525 li
119.42 361.065 li
118.964 362.83 li
cp
128.501 368.031 mo
128.411 368.031 128.321 368.015 128.234 367.982 cv
117.81 363.984 li
117.456 363.848 117.26 363.469 117.355 363.102 cv
118.186 359.884 li
118.239 359.678 118.377 359.505 118.566 359.407 cv
118.755 359.31 118.976 359.298 119.174 359.374 cv
129.599 363.372 li
129.953 363.508 130.148 363.887 130.054 364.254 cv
129.223 367.472 li
129.17 367.678 129.031 367.851 128.843 367.948 cv
128.736 368.003 128.619 368.031 128.501 368.031 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
129.332 364.068 mo
126.534 374.906 li
129.332 364.068 li
cp
.348486 0 .00491341 0 cmyk
f
126.534 375.651 mo
126.472 375.651 126.41 375.644 126.347 375.627 cv
125.949 375.525 125.709 375.118 125.812 374.72 cv
128.611 363.881 li
128.714 363.483 129.12 363.243 129.518 363.346 cv
129.917 363.449 130.157 363.855 130.054 364.254 cv
127.255 375.092 li
127.168 375.428 126.866 375.651 126.534 375.651 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
118.907 360.07 mo
116.109 370.908 li
118.907 360.07 li
cp
.348486 0 .00491341 0 cmyk
f
116.109 371.653 mo
116.048 371.653 115.985 371.646 115.922 371.63 cv
115.524 371.527 115.284 371.12 115.387 370.722 cv
118.186 359.884 li
118.289 359.485 118.695 359.245 119.094 359.348 cv
119.492 359.451 119.732 359.858 119.629 360.256 cv
116.83 371.094 li
116.743 371.43 116.441 371.653 116.109 371.653 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
112.99 370.103 mo
112.768 370.964 113.285 371.842 114.147 372.065 cv
115.008 372.287 115.886 371.769 116.109 370.908 cv
116.331 370.047 115.813 369.168 114.952 368.946 cv
114.091 368.724 113.212 369.242 112.99 370.103 cv
cp
.348486 0 .00491341 0 cmyk
f
113.711 370.289 mo
113.592 370.751 113.871 371.224 114.333 371.343 cv
114.557 371.401 114.79 371.368 114.989 371.251 cv
115.188 371.134 115.329 370.946 115.387 370.722 cv
115.445 370.498 115.412 370.265 115.295 370.066 cv
115.177 369.867 114.99 369.725 114.766 369.668 cv
114.304 369.548 113.831 369.827 113.711 370.289 cv
113.711 370.289 li
cp
114.553 372.862 mo
114.356 372.862 114.157 372.837 113.96 372.786 cv
112.703 372.462 111.944 371.174 112.268 369.916 cv
112.268 369.916 li
112.593 368.659 113.881 367.9 115.138 368.225 cv
116.396 368.549 117.155 369.837 116.83 371.094 cv
116.673 371.704 116.288 372.215 115.746 372.535 cv
115.378 372.751 114.969 372.862 114.553 372.862 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
123.415 374.101 mo
123.192 374.962 123.71 375.84 124.572 376.063 cv
125.433 376.285 126.311 375.767 126.534 374.906 cv
126.756 374.045 126.238 373.166 125.377 372.944 cv
124.516 372.722 123.637 373.239 123.415 374.101 cv
cp
.348486 0 .00491341 0 cmyk
f
124.136 374.287 mo
124.079 374.511 124.111 374.744 124.229 374.943 cv
124.346 375.142 124.534 375.283 124.758 375.341 cv
124.981 375.399 125.215 375.366 125.414 375.249 cv
125.613 375.131 125.754 374.943 125.812 374.72 cv
125.87 374.496 125.837 374.263 125.72 374.064 cv
125.602 373.865 125.414 373.723 125.191 373.665 cv
124.967 373.608 124.734 373.64 124.535 373.758 cv
124.336 373.875 124.194 374.063 124.136 374.287 cv
124.136 374.287 li
cp
124.978 376.86 mo
124.781 376.86 124.582 376.835 124.385 376.784 cv
123.128 376.459 122.369 375.172 122.693 373.914 cv
122.693 373.914 li
123.018 372.657 124.306 371.898 125.563 372.222 cv
126.821 372.547 127.58 373.835 127.255 375.092 cv
127.098 375.701 126.713 376.213 126.171 376.533 cv
125.803 376.749 125.394 376.86 124.978 376.86 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
126.507 383.158 mo
114.298 383.158 li
111.725 383.158 109.64 385.244 109.64 387.816 cv
109.64 390.389 111.725 392.475 114.298 392.475 cv
116.386 392.475 118.153 391.1 118.745 389.207 cv
122.06 389.207 li
122.651 391.1 124.418 392.475 126.507 392.475 cv
129.079 392.475 131.165 390.389 131.165 387.816 cv
131.165 385.244 129.079 383.158 126.507 383.158 cv
cp
0 0 0 0 cmyk
f
118.745 388.462 mo
122.06 388.462 li
122.386 388.462 122.674 388.674 122.771 388.985 cv
123.284 390.626 124.785 391.729 126.507 391.729 cv
128.664 391.729 130.42 389.974 130.42 387.816 cv
130.42 385.659 128.664 383.903 126.507 383.903 cv
114.298 383.903 li
112.14 383.903 110.385 385.659 110.385 387.816 cv
110.385 389.974 112.14 391.729 114.298 391.729 cv
116.019 391.729 117.521 390.626 118.034 388.985 cv
118.131 388.674 118.419 388.462 118.745 388.462 cv
cp
126.507 393.22 mo
124.317 393.22 122.386 391.928 121.541 389.952 cv
119.263 389.952 li
118.418 391.928 116.487 393.22 114.298 393.22 cv
111.318 393.22 108.894 390.796 108.894 387.816 cv
108.894 384.837 111.318 382.413 114.298 382.413 cv
126.507 382.413 li
129.486 382.413 131.91 384.837 131.91 387.816 cv
131.91 390.796 129.486 393.22 126.507 393.22 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
114.549 386.056 mo
114.549 389.277 li
114.549 386.056 li
cp
0 0 0 0 cmyk
f
114.549 390.023 mo
114.138 390.023 113.804 389.689 113.804 389.277 cv
113.804 386.056 li
113.804 385.644 114.138 385.31 114.549 385.31 cv
114.961 385.31 115.295 385.644 115.295 386.056 cv
115.295 389.277 li
115.295 389.689 114.961 390.023 114.549 390.023 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
116.16 387.667 mo
112.938 387.667 li
116.16 387.667 li
cp
0 0 0 0 cmyk
f
116.16 388.412 mo
112.938 388.412 li
112.527 388.412 112.193 388.078 112.193 387.667 cv
112.193 387.255 112.527 386.921 112.938 386.921 cv
116.16 386.921 li
116.572 386.921 116.905 387.255 116.905 387.667 cv
116.905 388.078 116.572 388.412 116.16 388.412 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
127.214 386.079 mo
127.214 386.426 126.932 386.708 126.585 386.708 cv
126.238 386.708 125.956 386.426 125.956 386.079 cv
125.956 385.731 126.238 385.45 126.585 385.45 cv
126.932 385.45 127.214 385.731 127.214 386.079 cv
cp
f
127.214 389.049 mo
127.214 389.396 126.932 389.678 126.585 389.678 cv
126.238 389.678 125.956 389.396 125.956 389.049 cv
125.956 388.702 126.238 388.42 126.585 388.42 cv
126.932 388.42 127.214 388.702 127.214 389.049 cv
cp
f
128.07 388.193 mo
127.723 388.193 127.441 387.911 127.441 387.564 cv
127.441 387.216 127.723 386.935 128.07 386.935 cv
128.418 386.935 128.699 387.216 128.699 387.564 cv
128.699 387.911 128.418 388.193 128.07 388.193 cv
cp
f
125.1 388.193 mo
124.752 388.193 124.471 387.911 124.471 387.564 cv
124.471 387.216 124.752 386.935 125.1 386.935 cv
125.447 386.935 125.729 387.216 125.729 387.564 cv
125.729 387.911 125.447 388.193 125.1 388.193 cv
cp
f
98.7703 378.503 mo
100.191 382.875 li
100.262 383.093 100.465 383.241 100.695 383.241 cv
105.292 383.241 li
105.805 383.241 106.019 383.898 105.603 384.2 cv
101.884 386.902 li
101.699 387.037 101.621 387.276 101.692 387.495 cv
103.112 391.867 li
103.271 392.355 102.712 392.761 102.297 392.459 cv
98.5777 389.757 li
98.3919 389.622 98.1403 389.622 97.9546 389.757 cv
94.2357 392.459 li
93.8202 392.761 93.2612 392.355 93.4199 391.867 cv
94.8404 387.495 li
94.9114 387.276 94.8336 387.037 94.6478 386.902 cv
90.9289 384.2 li
90.5135 383.898 90.727 383.241 91.2405 383.241 cv
95.8373 383.241 li
96.067 383.241 96.2705 383.093 96.3415 382.875 cv
97.762 378.503 li
97.9207 378.015 98.6116 378.015 98.7703 378.503 cv
cp
.348486 0 .00491341 0 cmyk
f
98.2661 388.91 mo
98.5289 388.91 98.7915 388.992 99.0157 389.155 cv
102.199 391.467 li
100.983 387.725 li
100.812 387.198 100.998 386.625 101.447 386.299 cv
104.63 383.986 li
100.695 383.986 li
100.141 383.986 99.6533 383.632 99.482 383.105 cv
98.2662 379.363 li
97.0502 383.105 li
96.879 383.632 96.3915 383.986 95.8373 383.986 cv
91.9024 383.986 li
95.0859 386.299 li
95.5341 386.625 95.7204 387.198 95.5491 387.725 cv
94.3332 391.467 li
97.5165 389.155 li
97.7407 388.992 98.0035 388.91 98.2661 388.91 cv
cp
93.924 393.307 mo
93.6613 393.307 93.3986 393.225 93.1745 393.062 cv
92.7261 392.736 92.54 392.163 92.7112 391.636 cv
94.0834 387.413 li
90.4909 384.803 li
90.0426 384.477 89.8564 383.904 90.0277 383.377 cv
90.1989 382.85 90.6863 382.496 91.2406 382.496 cv
95.6811 382.496 li
97.0533 378.273 li
97.2245 377.746 97.7119 377.392 98.266 377.392 cv
98.8203 377.392 99.3078 377.746 99.4791 378.273 cv
99.4791 378.273 li
100.851 382.496 li
105.292 382.496 li
105.846 382.496 106.333 382.85 106.505 383.377 cv
106.676 383.904 106.49 384.477 106.041 384.803 cv
102.449 387.413 li
103.821 391.636 li
103.992 392.163 103.806 392.736 103.358 393.062 cv
102.909 393.388 102.307 393.388 101.859 393.062 cv
98.2662 390.452 li
94.6737 393.062 li
94.4495 393.225 94.1868 393.307 93.924 393.307 cv
cp
.697627 .675227 .638575 .739559 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 19.1.0%%For: (Stacy) ()%%Title: (!_shablon.eps)%%CreationDate: 10.12.15 18:32%%Canvassize: 16383%AI9_DataStream%Gb"-6BgWQYdP1Uu!WGGk:_X2a4Zf=""V:i'5]Oi+$kN_:bbCHe_t2X?>'ae,6C./Q'GBgrk;h_F9!;7F[<C0GcK6)%HDOe0b;]E'%c<*PJd?78E&l*%9g,$(Ac`?q/];JBS2J`U;g0*%3/SK!6iP.9oah").6GI!)gq=-]S\8(!*44IS7]k'Q04tX,9(gD'kmW"iA_m["%>2s6B?RqBpAnH*gp@1V[(2Pg2Q_dHsaVkF@O/_H72Y;Rgpc!f\j/kt)*!DfBX:#5e`j:AipFl48!1J%I6ONV'NpAcu8UhRT9)-:_%KO\TU54/YgeTRijl;S_qc];J$gm5jA*X'_#_dT.uN.CrP_2k!nE*DPX3kUnTg^=&I4NbGFo9nD]!nu/GaV`MDQD+;qrt8W@#lh4Z%nGgPRY5X-)bD_joBUZWJ,#0<WGK7d,2Z,%)HSJq+3F!i(p+X!mek2K`kUM..84*/;qEIq`+:Y__Zn;3t1$jj9i1ImZ\4KBci(#["%\X[pdPU\tW8XjL<%]]O2)Ho$OdpVBg[hc@-e>jTTQ%L3O;8:SY"?"h8e9@Zg+u3pQU]9E[LS`R)ciHmYe@LJ2jc!iNT3cXn[nFI;%A3RgClo'Lm@H/rAE)AZF7[P'UPu^@F;ZIGA8/VY]0f=Q^&[=Ro%YmJrhZIKGD,no^p#SUQOR,NSCqA<"<am\(A]Ed1TuCY-mD",F%?X>$p\C1cLC=PWl(NqWQ2mPLM0^X2";J9;ZcJ.il4E,<]%R@.9`kOrldkB(]gZ0s5^Q2_ZTQRZ&A'V`]?bGF4=r2YACc/fKXnlaA%AhI/!S-56C>YM34>DGGg1\k(\I@`H81hr(,aTh#X*X.%0FgqsuYt)6%D*Al-\Y;:dk(+U%AWB*V<i_h"9$QsB\_f5lIZNX?J,>3S%JO*L+4:;$Cr4f"R+-_V<rRRG8.@NMQIq+2a0ur%AghF,\YZ3Hj-f<i(0FFeVb[IPOL6Df@NnU;eI?5jOBO:WLU,GAU@br3^5l3#'%+j6rgWj&o4Et)u-n?^UnT5Re,g7r<8Y1Bd-QXHXjk@^Q4JOlgEV-*\o+RVYudpH5l6i[+hHqnHC^!_r1_#KA(A/d5HYS>:YFa;E6%<SNiplY2GD=D5*I$P%Wn42L%BdD5='I;#@,T^27m6*8Pa%O8GUZ.iH]?>B.pI@GJ^"H"?D&/thEGJcm<bahf#T^X`Bh.e<nAP_?l%M$@MQi4RPJB\-\9K4mOI)"a)rOVSagX"%QI:BtesJ\Jpt1J?,fRH9j5G<=Q_^kfcjMq'R$"f9eR@6^i(k5Mome`!Dpi;6RJUtZ3+%#8Up;EiiBAVa^Eo>-##^3rU`f93ZqIkVrF3c7du;_T\N(N7g^hV#qR=I[4gAUK$Q"US$(/kBoOqHKgS2_;qWL_H?6b4K+jBG=HKp%Cj59Y8?mr"7PFe6nQbmnd4>6>""V]7*Tq1^o?sl\\V"X.oG4[U[I9eTC0bn37rIFQKFiDdU\C!d]T?S5j!*/;h:;mWDtS-)&g?%C%'IL\ZDdXY3GL-]Ni:2lb6eLh\G>W8uFK/aFN8.!oR\;[4JiOL(YC02ejC[]5bM@3:oHVUeoX<@)_R"t[E]5ABG-K@$^3AO4V%DiR%c-sao!D=4rQ9J4!"c&iU6+l>'Ge[jB*&P7/Ej3YlmqCf^:SF<D2o&Js(Da1p*.q8ur3t'8Lg,n;&?aRh8V@3aj:.[ano`[IrJWiG%Iq&Li9T5Kg$2h]bb1'jg3_WJ-BhTNoC[*V02M^P(<<E'(p8Uu,:L0isbOem01g4]hONTIABJfCLY)aW&O(ml69g,@noU)^ai%_(]%_q9<0MfNidVGq=Q?`tn#r!7$BkG:f2k9!DV9oaR?;X4gU@hWC;Z^!g?nDr:?UTO$/Vc!qP<9`+M)P9?7I:K:'Zd`j$X/1,k0W0o*%iB!DGPn\8@EYF$V`R7\`PKHV`PK)j$46R)]PmJ'qWC1NJBll__GF'^55mOlRAfP+\/(8A7TBCj?"C8>4WhkNAWFjc-8pE^E[l]BQ%s*)f-26VIN1;;R]SX.F76+N5;SJ&&C+Q5/'5JVO">,eq/:U<n/l7#j$C6.]<=6aW;)YJ9OoK1fbHVBTf^M"S+BO[%'O"$#EWuk7n%'0P>4X8h)@ec5(BXan)S[GKS3'hJ-^!OpuP*PcNghC$Ag\M`)&m7,)rJ_ubIrpRffDH/NC>RpF?Oa]%+%ajd+D8spd\hI&6h7S<8%f;]j;@l4"e1^+IhSD+EsA(##LF1S2K[<$d7FAhI6,*YE?m@7K+N1Woe'\q1KKf/,+CiVY]h[%kpIAh37BUo<_]*U5[;Cf[iL&Jcq%JE_KFIr!Adl$\^L\PH[qhScpYqU,p_9ET^RXlDaC;9QG#i.%L8:=FRb'6XmnA4Jj8D3ZU$D@.YBmB5@.R=)b07DN\DO4LGCV,XF'%mC0jk1#J5[fk<7hZ09kSeM9=Ss/ci'\)9PKMYm&+.ZgN:BI\c9]?*7I(F;jH#N<^1r(M'lUbkl0`]RunERuFRc[4Z8'_]k_TAJ>t%RQ(IV``=:C^>V(,0;6iCL2jWhN"j"NoG.,nd::OG&5>?b]^^A:=.N,VmpPL)7>a6eX^%E-@?a6RNUN-igus,XiOi-n#IT2W7O?)R%UfX_k\Fse,O%s]np9q-t\1oR4XL=V+;E;OR2!gHq';R*19/+lZUsW:k(@e:u10=GhM*FMuPQ"0_.Yd>n?b25Whi,<^SD^tkBsd`H%#=8.F42VR-3(g37dE^VDF8kAdN%a@l347d]';g"`pm5bRN6<Y29m>LVZs'N,\fF\\!G^1)p!GiLQ-8",mZ=N6[L^(=%D7h%#Goi"%EPW;Ais4%&mj;ptrKc(Ydn,H""_VPfKPEE"P2`k!\4gm!W7A:/^D2hP1AZ)l.TQD$</S!o[ClM&mV$L<UaT-YNQ*Y1h.`[(W>[_"%oMY'hl.9V0K,N2g[F3`4h!k.^fo/ttg7\f8I76dNGqtQ-DoeG%eZ5$NPh]WWKg29mU)(Ga]`q?J"kOkplsY8^Tui>q9Wpb;=Ko(n%]`p4<WP6Ji&1Qfu[Lt#XAZ1Hr#E_J3N,+epq>mfT;]DL6]J7/,;8*2M+]@Z8CaJBm9;=<^D0ce'H4aV4&L):#01(KLHP*!"$SFcA%fYdK!`p#pJ)j41^>At/u`?*$co;<BJrkh0\Z-G[0c971E#ADo3mj&\<8ooW#MYB>rpHSKII0.dppD.^8P>?YH[+s5POfB6<s2fN:%jCk%tOiVMq?ZJdhiVoH&VD/f^_Zc:rIo8OkhXsi59a0$G5i&5d>&OFLC-YMTduDMJ!4d%uSu1MH^Nc39:K-d?'i.cu1j7kM:NINU%akZFI8?(iTf;BuAm0Re4:S*Zq]:PUUs/RNc2DY!i]3i4urA<-@[&2H)6ZhX=YPM$kgT-Tg*Dc0OZKW`!qW"Ce>W)f#:nO&R\:NJC%Rolb$jF3u&.^!=feTrN$Xk!`,]266QfF1BC@[^a4>179EdB0ET+]<:3(mhG94Z+?OR59>q!5s#$=@TA_,9q%"?R#[Q?%KcLs/s-J%RD3^Ys$eR>o^sfU`GR\-o6&Tg^S.35(Lq5Zhhl>r9g/;l3nEE^9@7H;g3lVSpUHfRJID@Yl&d\r=J^MLHUDHCO*j_$\imllLqac@%?./5&D8u'*cc)P]-i299)d'[(:2`EaWt^dhEHj-SihcTl.CQK]$)L\1F+,!K;TR5l;@R=lfWd$gO@$Ge9'PX(_O>S;2E>4?h\45_%=')@:0[3]p1R:0Ab6b=12pGIua3-;Lfk2DUiqh,_jYUI-bud^sQICd==`]t:Pf?<VbANcFS7X4J=it^o]M5_sj)hBOL=-U\eNHYa%^38*(("?uXT-JPZX.Gl+i:k2Gf(0ioWS[>YQn518:J\UiT[9Wi%8otFJZj1*p._M$9YO7n]90?u/!HOY+'i9Vh//^7e!3ga-!O0_%8^hY,1n9euL6JLnUq^g/9_S3"Dbi>AQ$kd"0dUuU<mFl7:gX7P-WgD[:d&Tqr2;Mg6"d#/<)sp>;LMpcFrG2nqmAj^#Ps#jr$,L#%5\k]E6HpI_Q.#]4Qefr[YG:>P-Z"$;;3#+Ngr4,p&3"_tU<*>b[ZXN%`7?&7DI7@Wh$hG6?aloagi(s_(4Y'T*lIq)mT]^h$(bXq%aOer`2ip!n]s%&?]rO;nZ&<>_@N)kG`\+-nMeVNe)S<KgYmV;Gi7N_jA5EPA)S6h*94f*S(_sZm$'F]^Za9[e6SA\ea-aZpbH2+M%r6Aoo2Hk+4*p*FtQ^9WVB.!.?IYub,j8(#c`Ilc^I?Is<G4nPYJ[)0\P,Bab0WqVLDb1E8g\)UOoqfIg;uEUIqd$RiX"Kn"nhQmk%S!KAN8S+4AU6t5NZ1KlN\noT5g#OE3dgP5N8XWNc\=q"l^SFP@lhKDN<,)9#IPbNlSgLlKbO'Q*Hn-6BO"PB.I2I?[e/8/C[*%TN%o21umB;?57+!gjXV>kTM@f#`(*H[BC>!XIjGoh=koS;nbhU""6--H/CYeC&?(QLZWI`D^9(HVJrf_u#8@-RuVSKB+.@s0+2riB/K%g]g[$Y!4gZVV&e3OQqj#eF)%7Ypetd]1?Aigk:BFC@*H$bF:1:j%-tm)!a!k0UB`PXb[*>dn%7k=eX^57KQI=I2WD/1D)_BDTjpM%0\Q)f7KOoo"OfoWfL5kg&*fD-gi8a.5niAaS[M/P:9!re;,)%UQ$\M-76'uun"`)"7j!)1WSTVu<'02-!B&[T_IeSR>+-h0M8nRH%Qa)eo.11:K]9g-KJpsL=K\lG!l0p'=<aGHB^?k(+0IN]?YgEflGCt3%Kn%h*I$/%6[!#'6I8"FS>iSsKD)EqEYSOXXJTn!?dO?D:%bKZ;IRI&'F7X"Fu/38b)7WRMn(4U\R^8+X"J$/([NC6Lh=$l^5&X1+Ml_I_eoM/<:/<-hfXu>^T4Mj?u9M0S`C%SXE'7C8V&Z+0u%f\[oGZ%k'I7?h9Cj*QP0<i*ihSjQ:=/8Q4jmuNg\-pq]8iodh4B`u-LG&B3i55J='_uucnX>(3Igo8?d>Glr81JN:pWR!DErl3H#%)@t/(l8/CtPp_!Wd0@M<B::NHl1WmnRX.]gl8=R($8=bPe*,%MSYe,'oM_Z%l825+VJC<6ls&C)V:ic=4&(WBEo!TlCEHp(l)<".%S@(s<K`'>8RP:r0G.^pQpF(,gH1R>dh]M5]9OHS9'/df'`Vm1;hH1*9`iur;'-LVZ'a&>#*a8`IO[#PMHr;J[030h:C,ATFC?O2h%RKum)o./?M`jsdq^OJoLJ^CYdiT[d*p0Tc65k^Y>'65%W7@S%](&fmSNTYR(=$uno"CqI3iL!gaP8tH2Q1g,*#N\i%Fe*2nm;2Ie%4O#\-<$).mp=.jrqP1]u]dE`M>bP#mY5kJ>TmAe*qkhej!cRGu@d7n-NN5hP_d:i857en'BlmRWV/hYqJgFVs;S^np4eJ$!7oOP.%4tZd^le1'T>r)uJQ7oP.S\S%Ehbp61G<Ysap,[T$!f*bjnLL@L1>hpmbsjieA+3gl0ns:f\B+;cr7)ieMe-Y.r&9OFC9[Vm2&rQY%3IqshX]"Q$pPIlaeaU$ome_M/'(37LmM+Q.+4N]r41;^!LCL#F5,_qF^3&s9'Pkief8mU-9gOFHkP!m^54a4rDW@!ce^!u%OJ]hi%6n!c=!VG8G#ig+W#2P*_%tumkAUbWcj/U:#W8X^.)Zq:CX"I%>KW,k/91O''b/R\O9hlCFqA$1'TYk+JaV04'^UJ_",5po.:bo>n%_??9N\$8]MD>M9!XnWh)Zpa##M;l\k$oRkjpfIo4OYP@8qY_-p7W+Cg8g+ATG1XIU:$C:PE[bROPg++pcEXkYk`O3:Y_+cm-i\?Q%\%3<sEEY>0S.<X"BM2oQ.gIV#E9Vo/>PK-/G(lD4mKl(330=?!\"]O/H8BMV2;N,[U%L'Leb#Te?U*PZi+(l`-*bJ`R#;ZN]:GCt%f?71_:4q+e[<2jd#_,2P:/2k:;`[LTo<Ae\airu<4Dj\,b/dh^n]d?Vl.4&T'-n<1!@MI7N01ZQ]X0]\V/,0=EI5Z&rhchHO@t-X%8Io%%HM]Nf1%b"pBj<a?QZ%Z8oNPASf_QAm-%td"cRbs@K>0YS\j;U^ec*GESfEgN2s&iILT)Z`?JaS,r3sC"17R#2`pnAg&q,$.%5rM&i?T%+q0EbBO=_)J8331X'+(eh:nJ@79frK8SIs:-E"#G#/9&h2<jBLI6H"NsR0:`9Kb\jH_M];Y"L4:b=C:3=E91RP'YgKC$%_>e]%kC%ecHBcPB@USkcV>T:(%9OK!IF-C`nQclDAV=L=J+5ad0<"frAc)BuY15PJMSSVIV3gkpcT;",Nn`>ZTR-tJe7[^$=258i%(([F3butZ:0f$?snRWX:caseip1K>cj1C<SLF_]#[cBYHcZX1#__lksp>HNj]$a'(OMZ/H,&PNL]Z\R<QZM$^Jq(F`5J@0^-Qj\@%PPP",aA`0;DL[BfXir?D2.>E@NE^g!8A)Qs.,$3%Jkd\d*UTE5*aIH]K!sT!Sk4DK;?A;Q^*+Ih/TC.<54i`:=qklXADu8"rGSPL%5-n=^fuln/#\X#T&oGO*3aJoTOrF6;?@\56599[54DE;aR/]rDn4DPg_:;_INH4b+D"qJ=;js+;?4-]Am"58c2&,sM<aJjW*2jIB%BrD^ErXaQequNO=p3;t%SNWQk:i@HU.(.bZUXUj%7JJ8a1Km@3nZN8<:*!TY'Sr_Gaqqmml70/uYiWaHmd$ZPa04oi]SZthJN43l%c7@Vekl'bJrt,#+,:8-_0=/]up0YeC8K,Sj8_$BnkfZ1g+*DCG_]4Zj.sKa=`oYH;ZG4G8bO#qr7B#h9Lo"\'^O@dF7UEm@cDB<N%;qaG63QBeJL6"X4<\7+Y/2gcAXF&jN/F<\=g>KZAq2-IM,5R>]NUFs`Zb@.1W*Q7rXsL1orj(W[mL)!4&+9)J%@o=:TQ[bre';j3%H8[Ms716Z[k@QYe)-P^uSPca5F]Fdk^Ziuo>11^-L2Dq(cDXsr[";XpU&IXOEDVn6RJB?@i']Y>7\=%1N-.apZ_.CY!JV-=>K&G+%^=qb)c.Wt\l^JiQen&RVo5nYn>-.rq)^k?Z\"7h?h&%H6K?KIOZ;i=>[2QRF1^L\@A^'gDZdh$N"mpL+8#kr&Rc!J_N)>0F$[q1j%611T/Cq]KNe'&XTV7q.H[;%(S,)ViGYY;X;62rTl5Q]We$&3kS/?qFQop?i/7^H%,XSskYbYN#%j2Z!2[d&jChkF5Yr>8X.,Ltn`%`?^V4`(dF)YomV7`aqm3e"8S4KZg#eWg#PshTDX#L]8IJENc)L=D889ei9?bo<f^>TL\fY)u8Mh:oSUk1]'JM;<t7C@5LJl98H9+%49NUe2DZ:04OWnqQ.Z9*+R!@q@(rk?a`:U7Ag_8aBD,!c:=)n?V+m^o!_/p)DR\*]G"2*9QGR7KeSUZ<BAM!=OP+D+]?MC2NOd!O%Bsdk[XkM!`)]1F1-drFJ?j7p7>W\NDn'Rk`/cH$uSOP,N;Q?"\0#4\_RY[cjO!)pH&[\!oXDD8.E3O>H.H"YF)jss3F4)JE.QnC^%7Wl(89D)%;"5:Jb#.(uKO*a/#9@e7$Ctic+/'%N(,?b&E'/;n65!L;>')OOj&"2hC7o6fY]=t14[o9?YK1mZfV_`_p@EWhle[PlS%0,E5>?YbgMo+Vndf_:8QO\d2+61&rs!t57c%9cuT2Z;?*fgIF$)s's,)-UsZ2`S`81<uoFO79J"X5Ce-aDGd9CUK6UhnfRpVKQ-7%V\JVGNt7\=%bG6)<-g-%g@/OGWU2V>)pq[_eII)bX>PMapOd(eerC6"A)!l_&\b'n/48;4ap?pT`H&gM4Ypgjm\<UYs!Y8c^e2.0%E5@\;RJ[UU,-tUTG"O,^bnf[i;ojMDGH6MJ/kbSiSf-74,pb.;pf"Lukrg3*]kpKBcifVG2&jps\!>'X4,leB"A+d_Z-pHM^WfXa%$hRuTJ0?`9W80uQK!Q06HWs\%)r+K6f[c(MT4sU[E+[hSbAOErbI`mhBbQP4jGD/V)?iL!Oh%DLaqo#5@FRap5R0-JJm9pN!Z3_d%CiRVZ`_-jFRgh@64oa(J(!=ndLHF7YI&VLECTgep>F2,l8n%'JT!)L:3f08W:8r:L6W*_>m6D,MCMTKYUZ8qg'_^a)1oBWk-8r^:%Tg<!*5O?1$gF5!WOMrd#D^SDKc,MYt?bB;D4\ijRL,EM)K4_(kEp\,S:/ReC.Fi`UgYd2pl9<_5eq_3hbZI!Ziqk1U"1#@6/VgA=%_tL`C0A!cMgba%lHh@11rg"T8)qp_s[!p]pr$hiW=uum*J?oRf#O*(4-F%Q@Z/<bp[2+iYQAOHPA.[Rb:PN:-SG9kP:FI+V]CT2*%ZCe8qH,&$.p7o`cDG"B8lN/o&1r7>uf)8^`fPNs%'UWm$HuNEg;&pqNHI2sl6.cY%OOJDD,<?:,e;.FSd]XP=8]P-j&!!#KENYP@%e][8KJ5MjG23m]9]`oI=&\Zt+j!.8Gfunkt&`-Rn`ldV?HZIi=iVd=GA#flP5O)7I4cM=#YEr79Ar9Vfl=Ac$X8hgWIsRlbC;&'j%fj@M>m<2+`*[GF6<ct1DB+QBZ1[fM\qYOWZk-$9B4dq%#XO*M;c7==>H-^E?PH+T<ZUF_G@B5#U@&+'/d,6K7>*Yb$(%%Ec=,fu7%kE)7C_8Hd'aY6;OE6a0]J2t9q.TNLYX:j/*m&^ficahL_qK">MFWu24MM%Lf8S$EH%XraSmZh7ah[KeR3%t49G.P(V[93l(D"TTp%Y2VI+.najjEsWYe=55bFIA*cHX\0J6)_H/fJEhhdPMMsJd%__0`fW4ja$S-qX`ma!$!D\[!D;ESYG9Qb+Zg,ejj..jbFmM_=m*t:%^$(@U*BaM#%!n:.VXK![#At>g'4']`K_D)i0au<r\2I0\LZdL:PBs33)idh(,VZoAAA#!5L:]SWOZhNHE@BoK,kgOt&iFm]#]jb+%W31qGb/-%$g3S7Df5!N",jg^-@KkhGT0J\GXjXE1a(DX/miaL?pNLS54b"E94e7$(PLqZS,5[q\G_O^FFCO.D.'Z[pg(uK]-DcnE%[!#'DMqF^ZZ8.;'p$6_PWa9.q,L*91L3;FC<?&//ONp'00NY%FDn9r@nDElVE9+du[ib&m2Q;-maJ\9+%,.@RaN9LTN/6Zk>C7Cl%k'4TUc6'&m^ad8sKE&]IMb(V;6DKS;Y`IX:p.:_`(nstD9$-comadZdYe;KU*,=HJTq-plk(g'7US5E/!F=.8/d<kH7/Ym_8;%[[%S2BA)Y2!c^PWIQq?U61GAs=(3s5<\JDdoV_g0lsZWcrKudN6.E?J_]t$*Kk#K@X`(JuMQV%`a/ir6ZokXM6.^hf$k$-]kcV/DPsl%ih-C^\"8X!DE[&RXl4ZK9EA=3X+&b>D&0u#Cc6n[Z\R82STanA<Z&il]4'Pk8_Cq%@-A")KhUYlaAhpPA>UB%nU@&7oh:i<`DSjO%?GIfPVHeZ\b+hY0NPG#L>aQ`CWFs=An'DJ[lBW:\=/27!K)(sg1Dm>l6&XYUcUu`6VHTm8)9r%\aM>/[s#OsZdqR`"jWILh5`\Sf%;_(_S?PrPCKN"BJ:O3u;#F@,N$DOPH<fb;\H$M<`Eu.m43/q!<D.gHQ$[g*d*NX`W)-CcVS*?_?BW6NR9hXZjBG`W[+,F\1,)'n7%;0WeF]WDB&6_18$4/9Jjm^MM&UK.cF8Ys+`R=g&nq\Gp`;`UTN((.[P[6*&^I(sMe\]7qIM[[=mc,9o^f@=ru1@q5[P1_-jkV9]G%Ho5.pm\$eljk3()70R%.cW\Y<++0Sc4aQ[<V=\ZaL&#,#0u);n]KBObX5A3-EG&_J@A-lI[dQ:rT!(6MQIju052EK8/T6,b\?jcO%QJIOC\`:pAbIV='mGbV7fn+3nD<4Fan_37pZb=q=.@4XYf2f?K[),9c3r-,FYIE+aXl,jKIIaaMb[qrg?(#H>nfHq7M]9"GmYB%^%n_<6>ojMh`GM1VdKD47`T7?.]lY[E=qa^I#[>.7.Zc,l'`C\t'm^rItqtB^':V"A0p?gd0oleNNf2aO_5-HQIZ^::&L"Yn6gh,Yi%AsSOdnJ,"onauF8S$/sEhCYA^cT?i%pOc#0j6M>,=_rRp>CH57LrY&m[gQQg^,4cO#N(GDQ*!.D7IT"0gqi!`3j7LJWR@?*otSbr%Qe0FSlaamCFhG#KRl);3k?ffgSR3m0I'ZZU\rWJtI<"_'V-GWYi*Y%1p!`;LSlln'-+?mfs)kmKj[CJ&Rsk!LYr2Q\S(g,On/^-\%BPlkM\N)J3XM"MEQE->o?Htdg=]obu5<Z!WmS`r3bdGSt@fBh>6mJ"U0A:=FD=5<W4Yi#>Ej`,N!r@eF-Zb1R6,)LL?1JK^DpPR$%[T;i;XY9Hm)sFU#dCK#$/Mt2cYJ.,d>a?c351?`3la*ghVp==L8<T%ZOn6/EG^>gnGiUD*epL]T2T4d*42n&El@Y'Xo,h-qMh=6A%Ti%c1bcGf)GKZ_qkFZXnWkVSqemEIh_SZ.N*_a;7>JRi=N;9AIf,%ufg"@#rcI%j+Q--R;?\jlmJml=J]WGds7emkJ!^=X4&9CY@%Yu+m@beB8o*YYP>69_`G&'hY)m]cJ'^3I6]o)!a4o^I=d3I15Mhj]&g-F[4#mhJV/Wo)FBIpP=.RE\t)&!%Tr+.UK/oj]`V2K-:P%m;<WQ*?>rrhjgO.e'$FNNPapi!=4)LeTLU:NHdYUi;;WZh!XmrQQ*n6Q'[H!&CJ`!5lFG6qg/7pgX:<&cr7t8XfWRdmcG!dFLkP_%eq7*7%j<+Q[I/]8*PfeM/TbT:f0<5HcfE^.B16=je!`iZYkiKbUBoZFG[WennA"VD.Z%<!YTY0WF.Sr3]7_K_MiO\OgRGb6(P4VY%FhYEWF^sk3AN"2&*e'33mXJC$Kd>()FSG`AA*uYS;;p<`^K@,cc>LRj$4#L;"!u1-H3H<N%1^qM"5)>@7tn;@osVJ1I^>Yf5KKU+%)XKVj]hOH6GB81PiPb1T')s/#=dYW%*UZnh6,GbWMtuc7(]@B-/[]bkn(go%2!`SOS(>kbcKX\44PHj<C_Z7IErP=cf>X02G[I\U%o'+/?d<>-,ipL"`3*GeLm/g!c>l*0%SH%0>>iohp[uK2%q7HMX`67siJEH\pj-ADEYipP[m@Tt7KPmD(jIQ,6F-`,QMPguW40[GY%3D73]\*ooD+rhqSq>&Cm=?Cm#%L)d^ie_f,P^>2jDC=1%aR('uXEi]<MlS,N@RU:'`4n6;(p!Ij\RotoF]6LuZMh]?j-#E9cm>-b%(</piII>5OUKH";r!JrVf5],EH,7=^hn?5b.pMC>OP&ZAG$]9++*.Zo?PM"nIdZOUlLR=XRXBMk;IKAf?@:rXk75(Y<r=I*"uum<%bI(Arq#ODe5G(U;=.ejqlL+Z9fpk%tng8!5\9!-?H+G+V$eoIlf2L_KVKcPQ-d0iS_Hc&&"FD']R$iq<&etA67o<B]Nq?-1?sC@b%?_;<+E.S/.niU#lF`G=,(Q81]pd9*CS#fLtr+C"]2HjE.)nh-LiE:-6j:H+Sih&\'<i?>-Ari5lD)XrmR@0mgnqM-]mb[Q+6\MSg%@.>d)6naG7-21/,s,=rZ:pWR'WQtqN:>:"/UQV(pned;XZ^',S$4[?6d4D=]U]]m0$.Xg<s+1eFA5KUO+%0-l2Jn*9PXNP*g/\&H%)D%>&Zd0Q@qX3J0BThkJl*"bgSi$7=Ada^uK,A)@>@?LYBNHphoL0Po!1\EO=\j:GFE0]i4GifkNHb7C[HF>T#^jK+le*WDA2uZg%ZfGj.dEKh`4d/e(ps]<la4*^XokDXXe/U3*lZ6$+U)!)b_Ln8@ISa[LLAcO"&*F`q3FS%><]nr/!7KGmU\T7Qa<ZVf&5,Z"j1aQ1%8%\C0UE?s2MoYknO>QnWk76C`XDb1'$kC,%5F&gsn8ia!Q"Shj?[(?[DqoW."YGK+nj73.GTSK'il0X!]f0SXlBgP=p%$)r#HZ')%F2IA3%<cB+ZX`ujg_oV#Oq%pQ[!9%SkS]k=HWuOp`B#X1D&N*!hEIJ$$g6@E&&jkg^ZY8!jc>&LI_E8'G4;>N!Z#Thm8>3BR4$m#%q3=f=?=!K?dHLOOl0b=-i.Sg]Y*Tq7Qh&FR>h&[@OZtiV#*7B.a0l^d8h[c)N#6,[II_P=f1e1J^bnR<eurpI:>%bA1;GsZ\h,h+%G4n/^E*Zj#J[KBFpb0oa$J,D4V>obLUi9%meJE5h,&WBGk(N4#jWaCp]NVc:>g_KSm"Ma+hS%!o)&qTb*pRoo(?A#Arm^O8`Ktl5%+\_Ch,l`2Xj5^('g!:ZoLJ_$\IIO'0,/j1NSX8$hei1&PUCB<n7%?SnY5[4)>MD?cmCmiPljfqWR580j+K'h]q:'C*7gEEX?ZXLV%P4_$q)r(Bo(E2WU2_SbF3*rdi0rRs(^D8l"c+>@;5JL[@8e/Hr^e%[Wa:`)@G>MM5LYc\$7="pdY$?<pa&ektiSsp"F^^8KqW3Kj%H\M&eGEu[Ra2]@r5A+E:=ZH<SMk,-47.sBXk^Y4ZA+1do+eRPHIu'KJ=KYo[$ma;[KTGK\2ceNpAYW,XNA$nGhqM8:GMuND=oZo[%c<@`mo[.a'gFr-$pXVT6]YAij(>=1$RsY,!i%=fZi=AH99SMNH"2hh9T'R?Lc"q7']c4>)Albh8BC7uIo?;$hOrJ2=f(g8#H0=B/%9sA(h>PX05?,8Mn$X;?;]?U9F][b7G@c:&Y:4`Zl^Z><XQ]'6%LXu392+PC5qSHG%mYg6INuorU+Kga?^KIMb5s+IPC`G[NF,i=>%f2b\]eCT^ecTbMqT0K9+o(0U.T52mN8c[oI@dunQnQ4kXWuQ1nr@,47c>R0rFJi2$\Heo20b-#)r0hWPEVSeK(4rG#>f"EoU"ZY1%(fa]9\8T#^s'Fn,0nkst%K#u3B^YB^RUEkBXAP0miS=O(J)erR]h\"WHVn3,5'ct(;QO."$R,,dh$$%AR8GLt^W4K1Z#Sr@Q3..-%4Zdt!0*bi+":@rNpQkBXm(S!9&*d\KbfoX:YMOMrf8m\jIY>\4h-'WHs"YC)XRh8:5jCE)B)r\F(@%Erool3_eYEXA')NpLmRgi)%T7Nj"*pkcpP.I,e\uXt>Yl85.j;;]s'biX*O4MMG`i#=akJ%5kGN?"\TVa[:XfXd6o:WU9=oF_shnI:r?9d:.bO$CsK4hGL]D:.)%?\h<I2cWtR4BX.OIGB:1`l:2"!U77Ccu8I2iIh"4)oq[o]J#iX^@F/Mr^-.ognQkbDPFI5QGhJC"n71pGNJJr_0MYE/Pr2=mIg:q%cDdu'OB0Wdr0Oh#pH+pZk%u72fc?us]s/*<C`d7*'0eXm@r-SK>ZF-ZqNW8345We/Q`CX(msn!=OP;1tJ,Zt8ee7B:q3fp$c]+!X%L,F;SfR6b+g$NLZ&q"tH6#j9n=(a&6onCBj!KthG\H@3=oB'WInO%-e/X.qj\EI6<FNMfg)`#a0GFO:fKt#BSGXH$q>'E/^g&-7?%LqNFeZOYM^7Ma?te=;r'"@sUQADqpMFIX]thk.(fCYO#K"=k[F\TarrHLS=>W8>4+"(PQI\badW7R%q\\ffJh2TeaDkB';VG*gff%Y-$cS]&g%p[Q:nK>4fETPLjjCkK9jbWW.*TrBnqWd">-o>O15kkl!1'F,feIa+1E?ZUEpgrUWt#GZ`J%/WEDp5&neq%,tXTedli)%^JAJ%EUi[D)`0=.$FSUNpGNAhcY"2N[BohppRd8DSA00.le`u^ptONW_l_A,C9aP9"si`P]5,S[_:b:/C`QGZo'.dacoi^Z!>k-o%VqiekH-&oa2etLAo2"2ekFc1rIopt<&]t5B\_b=[rG1>OD\(FUSfW'_Z(F'1]#F#bAT;S_e[Gq23/@MoFRF%r$S(f^*S9a?oNq-U%T`#MeIooo9&&*E#;&rb"3hGe`MpK/FgVnl1NV1glpLi@`0>@IX^YF6P?fdX+G<pX_HpC>=7Eg=QZY%$Q4'X8,*k&l;1JTU2'=cTl%r,m((j3GiUf"E`-ib>0QmDH.lB[*kRR+lnq;)iu9`lCUF05)?8(l2`:CZGE+DcK0Y([&c^Vm?Dk(r!mBf^dc-m:b.;NOc16&NZ8N%:e&)J#-2+X<Tq`K%Ub[c0d"_)o'FrM&QhJkhf?=QDh=JWlsai)C%IpF(.0k`ri.M`=>\_>+.T6IXS&*sq!p9L$?:2(C.&I.Z69bU%lD2$2g\(6F?&+gaZ]Fr*lXA(%f\$6C]\gmiEi4!WB*$5koEGaZ#M,)Y[_+D7JgNX.E$s1-9s?e0AJ!ll_0;XVL\S*F1ZYm%f>(?m%NV2l>Q<daBhY\EQ?>,utk:e,t^0dp<i_Wboo1r\?GbJON[*Ii^c!@qWY(TDX3ga/k+*URgln:#`Y-t'ql61tSkDtRLXk*F(j1r\t%VQ&sHob1j.Tl.]I&KUio="=HAQ+2Uk)C)`Kf^9FiG/%*F9Bi/iX]j=01s:OEnm1E7GVXJH)scA[o3Pqeqt'c'Eg0X#0-<:V\,Dd0%gHp<>J/sa(lWGDibVI,6=?0QWhgIHp#lLtfXPM>G3/0*T_os(QIP]<o7WTZRXk#BOkr*eT?jD>1*?O2.KidU>=&LI<:YQuh=?(o>%`%=-?Hi<.kH75t_WqVf\PsH?Ig,Q5e3?TQ;g7%p,Cd$ru[QBlQ?JLopZ1taMhH[KjK&m6(YiksTqTMaM?]l.\1AP'584q'Cc9#a3%Be"Z:mYBDjk@!U5N0Vk0d-;@ZNQ9!aX[eTm-Dm3!FhS7`!:9**NK(>%@.Js<@:_:q3oooG*mbGM!VSO:@#qDWj:2sVJ1bJqlhW0N%SEo;)h;b$7R(\C^U!pncTT8;'hR]XbS@<E#^\-ApL$+0]O-R?@@GP3nI;OE^^3mJ;2bFk[Fp!)-U\%rBD<:@.0K\+Bo7gNF?3VkY%i<",hBf!5*Z]>_c\Fa[@rTN(nil`,bYl27_Z_'JlZhA_fgr&/iI:a6u(7l5dD!16O6MFF/H2@L03d<rO^Mg2kPSH,HngP2GThJ@)%XKA"M]a+.)f%dl+\iTm"q-7kL.ZIH4`gc_;/B5NNj[u@s\1C:6p[Y^\EObi4_n.tVV3?t8H/.K2Q]pjWf?`8o]P[2#I&"[W_P'DO%d"uUI[<\Xhl-eQ'&H9pZY'tEBNau@'`%U\EFJ*ft+u/Fg0ODM9!J0]P6*.cf`kO9i*T[dg\;)g,r/7t$gT^:mUI<09Z2F8#<)h=[%kD[qm9e@\aaN?_P4Y/e"/sTKShS7:t]S.pWmm.]^6>&/2L^%9O,`]2"f"m`rQZKblT4>J)loj>o-C4<#/guM5j%AR7nI<._V=ec5%)s_sJ])LgIq&9l)MspO"s6@8MrV0)YR-fl/"398Ce6-LeQ^pWiIco+RWa"A,4cc1ZD`%;Jkl%'3LVV405HHNPpWi?\Oh%Df^\VO#%/9b345BacU/3S=]^@<1&=0!N*?Sopc-ZEBeQ7ngD5?Hb"dhjYTLYR4&3L>AQ0OGXAf.)]tX]j\^8*(]\or!-UF"d,+ct2[`6:9LW%+qF$/P+dd4VnIP"\8K?M0er8)1`W)g-t"&b83Ze_;aDMY1b-V7bOTuDlaMRQrRmaTNN[Dq,p%e:`><_nNHfa-fZ.?"[W\;343R*L%SA8H_%:p^bX!qcQ_DhY_K:2H>-MXCWlCI$`T2T#IZMihZopp@M:>PgLS>!joHMQfH)!]@uk'd9SqT&L4fb+##Yd3F/Qd:-&*M/TZ%\AnRC1qFTl]_>I&MEc3j0>=1&fCQ<*)CGu3Q7S5`*$N&N(LGJS/Td/N5PJohHCn@H4jVcLd&?\9Hgc1aohqDk%<ak`?M0q`#/*ca%W-6;(g->5dDb.R6A9AflYCUoTF*RFbJ&<#/U%,).9gRT?hs\+dY*GEjpOBg?*qs)b;>jkWLBNcO:TBu/'&FU&gfs5oH*hj?H'(8+%qk/qte*P2T[j0E#&hb=#2XbkI1c]fi*J?AagEB;j`Vn25'=Bp0XLanVjMs=!0"#2)eZ:sor];uS<\>>VTN4k%KP"fFQs?+FC=nT/%c"9U+)hMI2UF,(l[bpgV'"68h@XFC\e4MAL*>bpID++u6ZaKR#rJ6c1n5cj^]#.a\iorTn$u`2Qh]-SJS=N:7jB&52!]eXH^f&gu%Y+OsZ1R*7527Sd/XW^%hkf)&m_0VPUTf0<QU-4.`i:4"tj`R[JMB(!)%`+"%T0-pXC8dDG*SR[GB)+7L$t/,l't'1VCoru9e-e_<%D,I/h1EA$81h7!H1+Gh<;Ce#f>^S36.bR9!+)`MWb4KOq$I\mcdJBJEmK'HRZ\u`?0[G'2*QiB%bn'3T>5qXqp%<:*OmRT+hda:R%X:9N8`,3Zip+XdG2BD1aoAKQJQ"m/XBKW5:6e5#T-`CMYZXH`I>IC`kbqO=;<\03i6SP;bY]m#!WJu-P8khU!UXDqqRj"5B7%84t%d2^Q0$*pluoJmOACMBD=)`9(YKf[W=6B*`W@b$U8EC\d3W4&f?YAKI-9PsQ_f4<ped.b&l[b<M5SXIrQ-X3PZ(N8*+ffEtT.G<5*%XPH#G:LCjT"jJrAoS7$XpM4b8DdJ/0\t,r.B;J@&++$8JEr<Lp6p&aDp#0E27%)1I%"1/EmFpa"9$dp"?jRbU*IKVFLUBR,kW;tR%<Ss5Ws"q((aq0!Y%R[9tY7]X+=obollXR*lCSs!qU)<!RG5N\/GY:kB6`7j]^86LP1SA0O=WSbeW'Pb9`Ml/"44n.r#46;lf^%^G%[1e2uni,EV_[s`QN`N",*j%?!eS2L!*l:P)7er88U!IbYBrPEW%"1T@X[]i(j\*j7RVVA1jtg6-"\8?JZRE.hOJ?q)[[Umeotru#%6(]TP)`hC#YQSe<o%,QO.rO#'S-O@s5cV$pZXe)bF6s.g'aHgBRLf&2cc2VYZ"onX#RF0"dJ)'n0)Un$WHObE]%^0=2GIIcFRY&#%'>>(g(`YQGg9rXIoGqtY+^7VE2m@<%kXKU.?:5(4^1Y+k<rp<b\)mAej=+OWrO=A$0l"*oZ@pUJNs$[5;2NK4^'NF\i)lP0n8I"s%eL(&%oo$X65[WR@_--k'pCA1Eb4'?R[LIG]XYG*%?8PFHM7Ie-<j(F=r^LhsPHhIh`E<V`Bj[s<dKMEnI:S^02f*#059ltjTl13L%CkQ\ubfipg/.K'oT:o`3SN^CIH*^KR3cj%cBZo^#NhQ-8W+oDk&n*p#gM.\nFX@HM%;VRa/-c-F0f&Ndj**_#]'pf(aYim(b$!3a%/C2-aAduZKKh6dJ^(`JS7+q/`+h[;3b:12gCjK.5PE*j<\n9NUQCk^XEU9cG9eQ]f`usVWD<Z>6Rb"ee/FIgFo=0]_CAug<5F;$$%XfUb*,-b5RK#LnrQptip!)!CU&7ClcXT?p,$SrBNGN89S&P0\_R:p"+:6fJ'R2@L_:sdUa@+t[fZdNs'FpP?Y@Du_(+LH[99FQj,%WPR(rimG[B?H#hDa<36,`0N'(JBP%WqC^\:gDZZ>6/++b\ln9$9Rc8M"V>kZ1;B6&6QaBu=.+%`F,r*FNei=Er'eTBs,dD:E+!<"%m,#1WNppum)U-G5a1!f0YtQ):?IlP)O:)+n>L^U;\eadM)7fj3*8tKF*@'n)G]JJ*FeoHbG=:$R!4>/7XL)e/Ua*4SD-GH85V@T3%4(_Mc"$afnB+8QHJj:gt4ba=U?\:U._p4^2Aa->@XRCB:YY=gZ(k>B12gK)S1oZtc]#&E"$,5G0.ld0uUD=%5fCuTuIWHKqm<aQs%e;ceE-JpO?+:r^;$k!9F*FL3#=Fm/ob7]andhB)4e&;1d`&9`I('%Sm*Gu&!``<QT+B&i#%EC5<^VXu"!-[sq(l:^gei,.L#P):r%LcD%b%rGOd%bT)t*%5Ru8-9EI0&Qf_m96ZXKLj"BMCJsFB0G"51q;uu%00klSkfo"^EA=='N<I@##Z+BYW.[[AH9jgD:lA]\?p5$%ZWr)i*Gr2Ib9;nOZ>e:riP;gKCkZ]d+CEL6\7$MNE-Q^pF6WN('<^^8d9VBD0!Z66"f)Oa#9h0'_H1P]\<]oE_f6Z*"3WQ050J]r%GW%hr(D*reH,+/Ic3K:nX0c,6Y"QE:H.2tW#RH1[h_pWjF\s:>7`Y%5>SBjT5]@<%d[CUI'[WQ\..q,\1RJhaJ/[=NC&^@$`tqGm%\8=cK!FViCJs:n)qjsdpJs-Kr^ugdK[)PTUk&W'mKd4$HD.G>Y%PeA]4KfNLbAtu3)YaO.MIi.`JNY\+!kq)3_6q21FRnHm^jVg;%'#ZP]T7Hl&?]?Yq5[Zf(C\i#0E".Pt1C`p1#8A?"+s,>9?:`9G#)ih.OBPek<J%`p@#/_oP:._^cW//Abqo$/LKFsee&9.<TkH=r%GsEU8qKZ6.qm8KtCnMq.:-m['VFB9N)DF-C86.7^Kck`@)tF8l,N)SVKV`IY(>'HL9]i??0!d#-WNSlZ$^ZJ1R\V','9$>?2]a"_%KYWH6M7XbR@km1;;U@=dXG#JurS`jk/1]]7qS6:Km?1FjC_KqZ5d!\1&_8U`#M[nP^Bfp]lY1lOFG?GjFQt!qV?4B?L(^\U@h?GB%*X``tH$kL&jYKGXBgsIEg+6oj$WtBCBfdpJ,Y0E=-CSq;-'W>2;un`4UMd>6VjS%RbEe17nds3e17E#H&t5+pZ]''A8Ka=P0/OQK%!%c'a6#2>rH)RIJ)t8O*7om2PCjh68L*BO$,_m\5Ss&.ID$GOCL7\U%10TGN_VoCJ4A'A#_Bas,%E<p68RM-HI,A!fk52_>!<NOn%AMcq0VNCkT+)Xl;T!EmX*hR2jU<S368%F?O-uG.bg@cO[#r:80-%Gt0XHo\Q\-0)"P"$"-\G<MIQ<Zj?:mhfa.GH$BH?_jIe2bk^%FY\hC4ID.=Hd&-HR36Hpd3'XQZI$HVnI/(A!3pp35euT\75>hm25%uF:pKo)4PN25R#"H_F%gZu>SaXg`G+XG,n`H[G#C:EJ7Z&]%JgtR=K#=s@&/PHS!75g!/G4FH3rtN7:RYR`63E$rEX*aqa[q*:aQFn!I+WC0Sc^EY63_6@e/-5J3)?]plH,:30`[?a0aV<_\j6VS%_%&aT)\(*qSe6K5Gk)FJa>+LKZ3XpeRDF?L&sPXq5r'MV6b!Wj&"p+#;BL/1:?i@AY[DW;_pho,M*fmL,68)jJk1f"KkWM=%J[**%-6lFh!$ncKiYki.7+31h$rfWh'k2sc:Q*L'm`e[H%;V2[1#PVa[)e&JY(59RJO"7FACi%jiYOCQG;pW^,KR=%_5]h*VBj0)Oj-]/%^i?f>omKoOM@5)'7L\:@<&)`>j=qTE/h5$]&h+>#"rK1E>HsR?eg2_+PNJ(MhI*l%S*_]d*au8u#:#?[/o8r[&k.sNf"?uq6]Jos%7GrJT<\(n\CjBt]KW^qn[92WdOhKl7$$T3-RH0<gSOVH:BG?r;+:oI"1=mg-#ss$si0@HT=-hbe:jc;N5&!=8O[R@r+<Ke2GU3^6%1<qg@]p1kQ@k\&P0L97BaeVD@`as&k9`dYA!);[`d:Mmg_."$jp>NiNAG1W9!^f5H)-eF2"Xm25UbFop4U+8USds/()SpqP#.:ba%X^RX_=XGf;GEkkp*7%^L=Q0n5=Iql2KA3cdQLT@=rdjC`q=fu<^>a:U,HK-Z6]$4,caHs*)O=oijeKL!h!^s\bs%SK^,Hp8#'g;9%"cJ';38:S?cjjRp'!=!;?/&n0@"Y\\ahZbBF&JYK^ulOkQ:$6DE5BTG+X<(.<p6hY6'u:Zies`M8hEV8.(Y5EC(f!IVt89^@JNNF%U7)'H:m-2`Q-KFk9E[[g&S13X4L]lmFg[kbb(-<Z8DFOUT4'16A$THOg#P$+JmHi+3moAt#s8MJDV8Zb-6^2.,qht5&udu&"t/:U%K@s)a*=ZB2(.)9H@)LU30E@T%YZ?JZ[6.?HE6JITO6nuED420W!?M>A.o_hO,WcG0cD(,2C6Ra%fTmfUl&biJkVp3%NrUDnm:.hO%4_:9Z2D?,%ife1"oMGVJ+f<o/EBQ3QUk(]n&6Y*uNZP)C$,E:g-GFO8-TE^t6#]TpkekIMERZZLORSJZR.!TfgBubU17cMn(M%$%%BMU[_d3f(7Cu8Wib9Wth"gao0?5Nni!$;^.,0)f\KXR5n"$(sY7taU4<)Em^R\W/V9h5s2XH(-*WpNsUQEp93UDGgdkTc5q8#H9!%>RJ/-dpijNTG5#f@6cRY$kkq@Ur.a4_o&Uo3<6+5V60rdO'@AQ,[I%u(39/b)F>61BV?YL@N.*8@$2SbApPtamU`>1CuB:Va]W*'%.;`+;;T-BjE:]_7m`](NfctPiL;<Koe^uI,TrmURpnE=9#/EDs<-1*h7=Hk\6]]/%Y">@$6A&..#f(SX:J[9*>"Z"Z'7U;hL_DiD%VUbsH1`h]e+?(Di*J<MV#FI3%p_K#/,k8pB-Fd^r'4%;:3E5Gam3IlmUM1,=_hp!SM;(ijPY]kJ7%4a>lNctDq6o,e*=pb54,6K?%'9sgL%l1'4[XDTRWV>rX!tV,]amqim@#+j2qI:@u4n(<L)V_/4':O4oqK4cej0C\$+q)#For+ro)]To&[`]g)'3RLG9aG1Ao;-5:%XWf;n1]ntl=)]%4$1JL@r#CJ!,Xr>"8.h8!'!Pb(m.1SnM@,3?e)U&[3c#-)A$TPKL'Fo7@M%RYQ4!1S$6_m#R%Y`AiWu<_4H`UM%Uml<a_dK#Nl9\a?:sgbLegN*i"3S]dL5TB$cHuc'g9Sa;[fS.sX^EDr9ou?&"/@/%+8X#h&hA]03YY72nkYC"T#m:WUsfoA1o?(;%J-6h!"-$hGSkprtFIn9E0OiL@qqn1TU9ANR1G;n>7]NN-M_*q6hk2bFO9A6Xiqj:?'#?FF2F;5;$\R5bl$YV9Nb!6_Dul;c%0ae7%9HDHa3C3r@gX[K=0r8:A!E)-!aUZjlO6R5<o2-uHHGF'T"'7o2$^q4b90m*r4kJ4Xm<IZr6&t,c_W>bf&+r&s-58!7N=%ntZ1]o,%8aAbhO@:_sBde^UUT=MK$m8(]U6.<d+Vr/MUld&HJ0kMU4`EUD1-TQI9ed?P;CJW1/g?-[Ql9P=O:MYe4Kk^$d>.tCR[Bgk71;PB%JL/Xf!@Uf:Ekip;*90F&LD_BBQ>DSYJZB20Oa&]2G@4lZe'oQ2c6F/EHn9J\,`f'O8Yj@""#1FbmZb*LE(Q?fFjRE7T?V<[S5!;1%.0uZk_RP5r[mD%W;SnPO'dchoiTPhCCf?1"ZuL%Vi6_A>%:l$(i<iK*eKDF+O'ig5YqeG%cU]8%N''n6fg/3*`4%6aP6p&;>.!O.%"M$k-X!\XQ(deX!:s=DW+<eQPPU_u9PEQ=b+]RMG6l#!.8#g(`Z1.KnT-I^/+a&T9c3T0Af&[!Hg8t2lJc!::$l.iE4EcL!9k<8<%KFs7N$6CL/A:^HDKLR9oCLlqbK\jkgS:QQ4P,2o&N/>enf*kHa1gDr_*K1dY`--Qh(Ad+e`"7p"+Uh:*bQg+j?tOOTK,Mh;?-WK'%Xpj"/-$pC^:(A2FgGFURPq/X\>`[-fJHF;/-e$#H)R'Vgq9g'69VAra>'qa6:]mfQ,cFDu;_rk6_\Dc0CsY?pP]!c9A,2M+M]h5J%$&\4f0FI,+1nV!$e,W"["G)HroRujH#kZ$uN:7h#PuJ5EV)_E04.+LU:q5nsJ*2@IA7^@!-^oMp"q$SR77fT"hu[0/ZW_#QJ6NZ&%?l%_:]\>Oak8q_9jX%E'k]p]o14",\bdY\TEOAh*R^jn:bRO`0V0uU6k#R#MCO2#jSIaXI:YGP-76=ub#$#?J#_]W3;3ZHBQ\12[%L%-l5_]`_N*,Uj.6mPC(!NLR,APsYtBB'<")`XfTYlr+H/bHN?U6K4YSR]5Z+,NC3(=Brh]<+A\170e?'<Uc,Ks.e<-LT/F"&24T%8Q[-I*'F2DSj#1e9Gu3L*14-]QWX?R"h+QY"5Got>-P-qR2!n9qH9E1MV#ju)mYmnCFA3.RF0Go0sP4-(gR0[dXmO3`/Gel^o/2$%7Y1Oq>&>mi5(H+?kgY0$7B3m8!*;'4dkQHm`"#)3;E^A'/Sl.[GKFOj1!$2m$e-e&CFMf?JUN*C&7e%&0-'NV1!YPJlF8Iqeb(n#%5S6=o(-?%.U[#]E8X+2@Bs!O2N_'9D\-Z>D#5a--?#4K,`0AD+jAY*3\YF0X-u9n4G^4-(#kS5(JYfGE%uj@s%aS-=Ou-RLD2,;e%%\a2lIL'q0Q-H]gRo]aUcr%mhk%fLPrEq.XLs%,271dto%RlVH1,V$(jb-K.1>dqHa_Fn&DmU1?&Nl=]YUqapJ/,ol@DbT5X;tG@%==PI[;=p4l'a,reBQ61.CPA\4idj@_R7&5jk6dbA[Wt`ud8^P^1E%ZF0Z-Bu+%g]J*MQ3q#R2IaR?RqcM<#!gSB^(VWp=^%O`$Bh%[XCDNUBJNfPe($B.6&"LI0F&QmodNV>KPM4!)LW_A9ri]\#0A3K=@grL=pZ/!"!5;UoZi37#\ud#S"R)970+k--QT:^iXCd@WMqX%Q];S%pgp>fjglK\7)5R;W0P\4Lb''$$.8AQ_fYjO_(5fn/N>d[[o(P7al1U#!gQWeQ"i\hPLYR=d$Z.L-K0_eO]7G\)';op(hT6;%r*rY5(*hPMlPp+@[o!f@Cg#359P3p,kS+=_.>U@(RikD=RUT.F!ctJucb(pYRq>+0pHfkD)bCfJPiP8=L)MIpBVI-]@I=S%O#Lo\%b>fUOcVi#c]INbp%UT7Q.'B6V5-Drg%ELe-Er]]l`GQk4Kd,u*.grP'0m,%k\<@c'n.c@+())TOL7qUVMpRW;;oF(N@E+%tL)l^A%%N8VD.<bB\]!$`qK@Ymn!9M8b&qnNdJVt48QqdeCe)smaLrld_hOSW'fh<`s+k9jSPklrt%:<DTU9#NX[U"s-4OZ_H-\c:i,(q-0%CqQ!f"1\o^n4YL"/YU#c=->B_0$9:@!fuj(NWABG\TJa.e0L]=Y`Q*RhHJ\As.EmXOp^4XGR9(A#Z*F7rCSmY/5KE_2YmGb/?0G8%(1713;K<?9,WoUbFA;<.:fI44nJ'^a;e]#7d]oH#[3WuHPBKZ$^C-LL'.b4rl!J0Z$s^W"`]^hF-]#L0Yig2%dC*P388F5%HS1Ma%&VL5dcanji5R;=&'dEkY`(E@0Nl"Hue!Clei4NRP1EP>ilZ4JPighPi6//@?nP8K@DM@A3G*!sA_'=b>!Y<7(*CUl?D($Aeg2dm*%OYh6<4dARS97r$f&+:Ze0l1'HTtQ,GB=>4^rEsX&lejcpGJ.fS_/hd[%F\d1`g3toh[$"=&]gaEJlVrH*i;S)1BE-2i8lWs"C<q>%VA].97gtRcA]PL4YHDb)`4qAq[,<2g863%[I53#AP,8KDKOuEpcK:LUK?D!=;&HN%m!9#uR*+bN/P]CE2W#o*-NrP6O-`sCNb*L'%Hj+?lP/c[pPm#Kq>iqeIj%:WE:c&6,]P"h1kd]EoP[P?Yi5i6c%^D^j-_smnP][*p6%s3g:Vd;SDn44"%GQ`tIfcTsdM"T?-f)hD%6B3./4l1O[*0>dhDEW^SC0<`NI-/[OE8)_1/^`IqTtl](n9+kf@6dKA`Wl$4_5,8l\L%MKJXq0a`[<@S?[VJYm%p$9Tjh#3F#SZ\%C-KJl3I:mK#e-U6Hr<BS/lTkMMZTCS_4)9h5oc+J6>XdYA,HE&<+)S)M$4D)-(b99_jlmol&Immc*1L!\sXCEda!Ap'_F2S?q^i-%.$om#81h_U/t)*W&k%PkS!(Dg'4n>bFKqTY?d_B&D1Yn)j.d(B:sd9bZHU2?3XCkVWt7Y<'7tm6X8qIj1<;eR04R%JiMfX#ilXC3%h6BY,M,CRi$(2'Hj4UMQJS"dV^.<D4+bY-.i_2m2`3hlC07>[i>9MR31/6^sgnfV-"suSH6J"ZIi^?[X,#(?1]&ZdD-*+oKSuO0p%3qPNl3a1oA2r!oR)B=NGdYj+P0Z"nR>%E'n1+9c/_l[>$">`.LKSPJglHkLqaT-;'GpH$o<rcir*lSCL=`k!)9njLPdNaROY$JV`%F0\KG3ILW+P:GdVJd@O0UVnE<>$8S]_.aDDE)+bM!GP[d-fVGQ1OOt+#m]@/+@L05]R.G+3l"!8nq@epmjK<sG#V_ink<DI=>'fU%?G7]RQU+4Nb?dH>'+/g<f@nl]&'n*o@pTRd!8V8'"kllIEa=mR<L:S=5/,>3PUo=`P'V*n`u`%1jk2o&#j!Ac5#$gAbK*=C(*ZnA%GKM4%K2_i85a6$UpsLTYPWj.j;^'([2[4[G8Nn']j:EFcD-rhfMo)#QEDg-l+\]ih/d%m`bY+6o(\no:1;&^`Gb(EN4e2h)R5ZmX%OBju$(F%8eB9c.,E[03piRK_5D!c;RKjj=Z?mLu$/)B"Cg\9X"g.YS^AqkcL;Lb?E/]FE.c^S%_,<CG47\&>IW9^_M-!m-0=')`/%@T[Fa9>&[<(iFg?8fZS/Quk']k4aXF(=SOo@tPoO?5WikF4R8qP'FGjQM3T"f!f*=3<;uhIgjda'#TrF*Y0;qmi#(JZX6'lAG7=m%F4E,_eMFjI+-.I/,.g'od4IsG8.s"n@()bl'EgdZB<!mqV?M'95_o]"R2De56&.27U<u?(p<k-_UA/?@2S=\UPn%,38gr((L).<c%k(CZ5#oG#k6C8H8T@B]EiHRC+hGsc;I?\tjrF!D'\#:[]r3@0c$g,i"?RF&k"OgJ1Y4I!`J!`]W/)t>unUEaXqLn,Vl1:m,KXhrO%NEp9%#YRBP)B_.3+\:Ks#R]6I)E9bb0rEqt'OrUV7$r>j%K6'1$BXV\Gk;7S+/0%<@p"A_m=_6))t(O@`8l1=`3cTKPG8CB9f'WH%&PV5pW,FoQJ)ip)'KYN.LW[5$1oY?<MI@.8ObQIA:u52]0[DGj]?HL`Q/DX^O>tIr,/b["*TgX;80!oD?n1W&o1;`3(b)5;lguVV%)!>2$UTQmrXmi$Hn&BWSl!VZUQ$VF)r'%c_CWD95l/It9f8UHIi5i_AS4$aIL;e^`*(u#qNY8P*.aKlWVn'<\)88%.M-!9r6M9i7%>N#WXhiAGS'!DI2eFdh@<T;IO@9[a2<SDP9gPcfL)C,_^a.P-V.Ok%gE_)F>`M(-IYk>r8[-<aD)(/`:ArQ!=:RHBl'TuN.E`D$5%[q?PL'dm<6iCns?.&Vr9iE%jUjqS29dc6P$'h58e2pT'.%\&l4jqS29Wk0N+nVS>]cZA*a/+S9\=d(Q0MUU7EE:h(!da&LTp.C0C%M'6kb!?[qhhG[APK<dCIQRI!7plqYI2F2Ku;S=u^e1K(*&nc4L<mlU+gP]">&sK;T-0!FV#)V"Z"GNgZ*(]Wn:mJX]Ftm,H7(HN,%!a,P4l;l=8C>4YF\%$=i@M>YW,sA&j?C\SqDUBMd-!5j7[n&Oe)b"UK<#WIkB5Wi/38b]%DSb'-e(QRPbUimlE6U@b92/[!@[4OD%K5]+:lSs$Fe+oke@7I5#KXdU^a/N9rfUTj?;RaTD^)L[!4mj[gfS-k?id'F)o\;#)/UjapEjs-8P#?!DG>!]]R'*$m7;fOR:W0eJ%jC[-RDtou\UiCI?]9RaI_UVlL)fnfpa]h>>@*dAd\&bJ-Trpd^neNCcGMP6()acFs&ApJQWs1?>jK4kFkfI%4P:tqN/M8";7*E_f%MBg:"+puE?MAtO?"_#BL>K!@6(K9AL/Ku1aY8?A>M,9dX7CcXb'WEHu8Sa\k`n=RL=MDB@NS.M=cr4=(H]'T8E;_bCMsP8I1/?]k%J4N*XOJ\^.&7oa!A<.f4W6?h[J5:#FF,O8/_Ft!,D@&o,DC1N4=!UdVm_f>g9&1\r9R92G_FU]S9r9UeMn6jh(iY_NPsbZ!Mc7*\%(bPF5M,LgGmc/VrT":1d3l*N1go[AKJ9j(G\_@sqahA%VEjq2Qd\o6XPe4m\)>q,ub2&e"o81aBG=sLR\6;p6_cN)77BG3BE$]CU%#=VqpV;*ZE&PG8T;7YEu(?]RtAtDiN&1MfRl"3P$+us2D@9>pC7k/kDbV!V+@J1I<-2>`Hb0)+?0U9=?ML&BJ6>HbKmMjQ$-I^T]%^7N#,GqZ#*cp6i"Uq=h%a&Vt:K4p!K#Rf+j1_NGMQ+eP96G+;9DeW4KN3g"'E7[pIj!ZR]ahT<O97!4f8]7_N^:kV!D\7,pURjKE%ln-m.DY/\"A24G)3ioWr,WRQqVIa[;/snuhfita8*MncEHcr]e3r1Sr4`'@,5$*+49T!fI+F9fW_:6(AM6Uku2aDdNT6t-&2H,#3%oD6$Q97^;O]6ssS`\q_O/G;bJ>Xr^$=8u5F!1t9_7>rIjq=rX*FRe4gWE+`ANhhSoQ!O&j$Gul_,eD>E_npUf1m/9>WM&+akmS:e%<UYre;6Hhb("0]==ub=b;/_>*G;s".mYF\)%i3&@LaBW#&3`3#>Z-k9IX&d:pR-<jiDE:5nDVbpdY/3mi/".GnIe6L@Hue`BL+UA%iH9'd;A<%WIX!,$T2S7"/)NTqKFoG]l"ngqQ0@1h`(7YDb1k:\,D<S@MV+\ed/_Sj@p&NqL^0+.[,]%KRa"g.:AEc[0$3Y6X[mb_%7*DI?>54sC-;OL0LenXg_<4iBR_kC]=-8nuH1^!2s7f:+[Qh!^8kk%df>I?_<[N.'KKL_HFX5J[-"Lkb13_^#-0aD\:rWgT>gabK%OU,CSb9\3$E/GH=0%"e"lX0=*$.i_9e"6'j'!5C5g7+nVR8>Q'OFeJ5N`u6li#7(BE_6,C>jQI1G>"*^ZXME&h^t6uOieH0K:mE]%0dJ*3##juVGU/tG>b]nfa_nS6\3t,<AVb@`$?4hLconZb[#;#ZGi-ol-"JsP;F)=T_4pHTD#A<F\iutn\Q"`<\HK2=/=4`LEekQW%(=]%NQV0&$VeQ?50:-o/onni;0%#',c#<7)b9^DX2!C6aHFZEOkK4%'_%LZK2JXusm[LfXK9lQd<#`PV6=D5^ZLO]V9.9/J]89iH%+b><A8ncVq,n6RTM\$Z<>b[@.okp@-0%#'<.QsV70%$\$P,jpB,Z7/6`.[A$?heY5'9^bd-("^d]/#o_7ZrH4SV/Y_n7\2t@.-Fq%>XI+Q$!$_T?7mDh_$f<B(\D`>K>]j4@,]9T*m*Pg6M,AVkOV\*&2mF*;9W;1m1M#+<;4uuXJ/;.kii`&;MRjM7BLrbW2hPS'18I\%#$K0AU3aBR<\mqfdG#t#n.iq3m8=A?ko.D5m1KrjY[<(#*@Go].Mh+"MYDe-Z:X\3$!.S5]VX)QQZ?.<C]&EKH;nn#MID;l)+Kr@%6&Z)W\P.Ys@ggO!hp+X9QOlKM9#B1Q&O<7-#Z>T-GSl2N-p:n2anRo2oQZ4YjJl9doQZ4Y/VNgs.A>;Bj!@*R'[kQ9q;dmAW_eGr%H60#f^Ks5X;c5As]nE18pbJan]qdq,C7SellQmI+D.rTgM5HKF\cpE`QY95oQ"ZrE9=/ZUY]Zu<ddH!q_BqDrFgO9MjUA@O0XL*0%)$(DoUNj3Sq-[0W@2>2E9#)Ds]Q]7PoFU#:-eUh#W'To^0En%WQo6=X:eY2CN'M@i`=sY7AfW5')N;earbT7.cS.2XH9_tR\YH_L%Fp7tj\2"//AIQE@d:iOqAn%,k@u/0SYeQ9t8ds!jWW_-;:PBpLCY1<H!J3q!@BdWLg`o3%g-J6Inq\4Z&5$7,Ftj]>9e_KqFhHXl%e\D`*PK'uW?\!hW+;&0PR*JDEN:KUI&WS6GKk_%4q'DRReFp,ZM!`5S-j1B79f!bkLT!UG%+C"I_c3om*^!,p`S;8@i\^(]13!Tk%aEWb,@SnGc($]h\*?d[O:5sT1f>,?Aeo[d+%#6gd6NY`]N):6f>_X@fW$6m3HB'.0O+o?Z+!Xmt7>^laeomkZG.bk_\)TV\o`@qF%K2Xq<9V$.pd3D2HD2_mA2s;qB=u:Orf3W>*FdS$I1u)V6h4tauO;TW[(rP@W,1qY/*V)Cu&=5EdV#i96+J-/P@ou,$8tiJXZ;$ZZ%E.loecCq1$67bodK7(%_BdBk9l<n#H<rE0W@)D[dQ:O>u@451jd,ekKBr1k6?0E^S9/qrKl5bSRU/V33rs/Yg8!RsKNKC8rPt],b%=I1nXH$ojnTc.^h&tAQHKn:HK"5SR<1/&obX5\7kLB*@4ipMh$p(bDKoodN#KgMnHNq62+24#GWVs7%q=Ga6*dnqfQ11t!g+@K]3%;+`@k18?9T"r)0m`un\IhpdRqM(D[%_9)2;2$,$dl,Nt\'ZI`-W;eK0D3B=@.V,PWc5KBAE^klW*3GM_=MS%q_ol`$S5"=tW64=#%/S>_)IrSLreT*RqMY/!5DcE8m'D!EqjT]f99oJ#+=u=EuCC>k$JUU^q8(^upfVJ;(dSEidfq]G\L/JgmbScB5Cfh%)C,pp#$Kk1g%SFIEE1mO[S=!Wc6ECj'pB\?QDB,oXuebp=7k);qGSh_9c0k\t2iZ"m%1VU66X`tgI=*9s+N+7\u>fbHc&M8D'4)P5belGk<W1(&L%YqBb]fW(CH8_#9>rDdqr9T#BElKoWnF&"u"N@GC7W]?Q5m5:-YK@QK+kg7%DeXR4`dH15/RPR9`/\1El<HG$k;p!h)RPVfSWr!W6%F%.F*<9M:n<6Z9mAJmZ^2-%m=;=(lo67u8Z7]Jt5(KGN'_Jn!hWof8io@Z3%eXVI.Uu]*t<218/mW0tkW1#NZCt%O%!`[J`+f=M/%'9*fR2*b,)9nTF.c8_BQ;AH4-1G7-$)'>2e`pMG79]VsB-Z1Ym*@L^jSW:9aY-%npoL'j]RW9nplQ9]4MU(``O"39O.<^Ab%TGl0%4LJ/?33)2$B3*_E6V&Q_&sR)L<HL_,nZACm'jAK>d2#`(`foe/H)dg;1W#sYK;kNM8_*C-\s#BqXoVK*5RjRt3n$(&,;W1_B9FKo%Wm[XL3ocZ&TgBl$cl)T;E-,;!F>c_5X"1ZZTJN=ki/C7K/J],"YrKNc'qIok8p\)c<HKR%lDU_@<7+j4\>l:p<Or#401oop1^]Nm%:C0^97kcu)oI`6W#u/HtXHKM-1bu.HX")Lr&t51KPfdY?K.W2X.-)5sKLV?rWT5'7njA4%:L1i;cl,:c_BDSh_A\B=_)/a*6o@u!%7YpB1_C_cG1nI4T:^*\p3&EstX'Q?9F_Ei$I'Gjb%uhNM/QFHhb!RC[5gHY(V"2lg3u,;eb!VrR=7HBo%;f"j?1i_ub!'Sb5:R.;%,2[Q<]p7[D]hrc_3rH/$e#VKT-uf\s%&u9Da^D:<_Sr2^!);NE0IdQ,&<=T+im9Nh-1&tgp!kgGNm"E]d$eQE`M#l9S*F.a.Lo2-%F&gMQMF3TKpH=PG;K6C09LG(d<7RZK^\j7IX$\*<"@'q'eY,\imD`bHWX_boSTOq`L.:H+(ff+@-MgXM]XTpXEA&1e@<H8C/mhUM%U%6PK7$I<V9GN@q[6\pD</#!H4ME<CW@C<rc@?bsbmr=Q_#6?*/Z9%=$";/HH;$)#[5-/YM'Ut';`1:HUA1<Z-3*3*OGT?uH[oOa%BS>#/^8OLX[;dK_f2[rH'PaM=MC,8Gd0Pq6e]jd3d3d]&GM1]I,1.`#[e&.5NJp(TbS@0&d0R!>F^^&_6mI@(W!^p_7CjZog?^jG%T7s8EISaU9KK`9KU.HGplH9=1(#%6=0Fh*=VGg$>Z_J/\,VQ!O@T&2!KX`;B_A^f.Lo-7X(tFGn+C$.[k,2]%f8)m5(X<;%7+5JP%C,FOu2VBtHB-O?F1`>'7DQ"K$6iip3VQ**B14__KaPn,c`#,pZmiJ^QX@^!\$UR[HkSOj[UDTd66o0=4>aXeD,=%>:)Ae2V/dX%\%;LrMWX^V!p"/,eD-J;3FA],=X9tI97W-;d<ndp1Ms+8'eV%u)aBYt.Z+f>Z8Zg"CQb#*_'4H$qIHiSK<M'BpFKM%nYJS70:^/,n-%TE<O%KXeHk%U*(-Ph"_;CRBDu99lXd$UgIpUDW?>Vuk@;;o,r.<J>+MEk7F=8en)b<70NZ\3dPoF`fk@'W=DV6GT('c\+nYCQOp`%0hdjgVNIguE*+<Qk*&EAWY3]I79>a*,&\6rkYN;LYXC=YH-.(-'r$Q6:%d4s.R__d1"<*XW'W=-bV28\.R]I:i.X+S$o0SceB`LY%O@hoVOSD*+0Id]0_UVK)CO5Z/o7=dpQ5-X!K.Qh`)V'Y`KnK9G&1[^]M4:G71^PIWK,(d<_8Vfc.MC!Xg>qKtO_D\D.t#n^W^nse%JuLAMGshg07I.Ec1pmm[LaJ<fR!L8^/!d2W5UE.ecU#kP)6H:`Se"VqR^#g9)BjjHg.iBW@t:HJ6BJ2XN;u01@=;gB3*`7-WXhgZ%d8i1HWBN.ak_=E29_G*!Ocg=rEIDMRJ`]d1i[pT00<KTFR`_`(<GBmk4u@7"^GJm^U"S9]eS@'/U(bcmouL%]LF-Ap%V&T`RQP-?%Vm&KEq*gUk&60kl@CB,W.\RL&F;187>8f=p"OLs>%7VY<&Rn@4Q(KUA=qYJ"UCtsbT/l1/&!_sjm0V[tW]ql*$`ZZQTutsp8Xncg%$<=#9dhdi1Y_f@l9nLhl"^7!A6r&n]@?'JA!66C[YK5cjiN#-Bs"AfObk/e7qdAmONGsdS\enpGYn[;u0Y.I/Z/3pI9>u#(Ynj'd%nO"=MU5S`I_<B&YpnZ;*JPS-qYYM3V+1YjRA)\@kTS%tHl:e3X9-nS_lpqa7n<SQL7KX!Z]m,`F)[o"(?;m=-ZT8pb8h:J\eOrZS%Bg?cqb[)FO)>'_Z'mqTn@5&.;+fM'o3<[3DpjA=/X$o8]T<Da,0:kK8WML;@1n__WFoiGB,G$&&g/X##7KZX05YW)((75,p7aSIf%/66P\bJ-b:#;6GrcmB"I_:u*#_]TbpXFic1U>K"=d=L9!FVlT367gu36lghY2(bmaTsLQs,nM!s&[?Rm*PJY;hMl781MEG;<F_Cc%Fq'8$28X,g!S,Ll?r]K"qCtl%4@RZ+_Og;SUX:qq6ua6'n'*jQOT=+V],GDQOWlt3ejq3n)Ri'@pF<FHInS1s0jRQ%)AL-bLOnOn%^`#,X;H+_</^7CcSJ`(oAQ"46j8pfLGaSOMr:QUt*@NUaK]h71S'0%R52$/_=g9LeL+ZpHS:@V6j4g<+*FBs[OMoRI#SQ>^nH@!q%GO`Y-iImp-6Q*&I=6k-SW;/<,TP"C])',S4L'2\hgRW?r&AJF&VX1bJ]g'l[@LM0&d)!<i"JPksI\_]>\0K(kC[GMFJBea=\41f.%&coHJ=U(_:Yd98>71!*T91B?'U7??\6K"m^>^C)!\7Z-3U,-EoKhT-m:EY3a_%=OB59^Y\`Hi[A&(fNdNi%DB1^,l^*ek6%boi))%mXY\>'$Ick8aE5<(K0YD2eX?hL^YDh2DJ#Qa&S.Y=<Bb+4!:*d0/t%Z3%7t9fG<<)9*,::3t^PCN-pOj52iD>l%UmA0[F2bf]jED%#dj+R"G.W),toDG,%o"bpV=0n&9c%R!$;`RSO\AfGViA/T$%YSGZMOnL-S<6:2"YBTcO?)I]+t))NtI5m?DsP5Xu]C0W@i,kD>D-%'"P__"lcXVgQdV=1#AYPY2C*@`\am8VM-@9/@K8VN"?#PSM?_GX`s4Ar4=N?j-q1BKQsJc^,0YPkWKOb6Jsa&*SXL@QV)l+6D]ll%J3@C[':Q.A#,s!J>)(.UIgmg:[KV7fKfOuU)WVp2eN&2ZGS/BJa*4d8",2^P2?;FSSsU\1;7(?e,>SD-=!)9@T`YnFAO>D(n=g_)%jNqPYqg5b[l)XE0qUA'K#7[L&b$AMM@lW7DYSrj-\&IB1,pT&MM+P*_LWUS]d%h3_'f!!o3t!-5l?cMR7[&h`.[06ZC`AFi(oFLE%lE_*L>Ye^4Jr%'pX)op(A(<d.rjTZ=D.+/)HLWH2gGe>:Wt%NHN!>#*Wm2`.bsuPIOPq*8`(K+cUcJgH>Y_/^!#cgsZLDX#o^NR$%lm,%k6#bf3*FAoRrpd7>6O^&Y5-sIT9`tSnQ_gacd0pp]/Hces#RgB2dp`#pfOYetL<#d1oZ?H5'adj1d?^h@\C"tk$Dq<3%GqEV%8EmkGQ_.L#lR8ECbt"1uK2/IN5Kh:4o=8nPHb&%tPd%:`-29]eEmsc:3GjE!?]4sgr;YGs[iJ%]j@o%LiZ7#V(goru+8Sau2^?+.%f[VTd0pacFNDX11\d*Z1@c)Y1I:aaamN,Ar=ck/43qF[C^A)t/P")4o%P!QZ2ba\n'2:#;g.!OB5W[WBP6'k->V1aKrQsWm((b3`%=Yf>i;!;B#4@-&:W-5iP1*M2l*Y3E%#+@\@I2dhM6*8oERJt?"[8:k7$5=tD,=_GHKbO%bP/m,JaPB2<4>0JX=HK]4ecmXr+o\]?%"q:!#O6(?S%Q]ltX.9EZbU9@<@Akq/mD4IZX/2LJcAo0&haEoTV&Bp9C5>$op-SmqM_)FXE-K`^Y\r',f+pchf^-7Hka;)N?F^:S%o5cGo4)V-EDjmoW>*]q/XNt8_6W[AJ1p.#9L3S9TVk=%o.SLXJFg*0eC$,rW*+/9&Mhf(d("=/l5`;`0VHk$l?k&\=)=Go8]p1,s%o3nRQ-dD&tKeAEur;HMhJ,Y6'otJ7C6:*mK<TV2kLWdOIF!ZfP^usHn\tJDKSuNIU&*S`!q/JL$+Oh[eq7J46Lc5)"A2.2QLfQgB%MKn_6[ij/\KYZPJfCjE89N'RB.!]Xh1^7rK3B,g%J8]S*<6VjbPSGN9eOHDAPUN7a$Q3Di%&o6VMQeVKg5EAq:kOj+UP6*Fjh%H_%DH:TiRZ/5%p<?Pp8+9o^P7?4Ed)(UuFf.O7"Yl60f*CeT^?cbKdpQTlWZ]fkBdQ$LSPeU)h<6%HmdIfc%+i'!@)fr9l'A;_pAMfE%hfio3l&?M<abGVTB&abFm1n[cE9Dt--%rndGgLlpI#$@Pmaual0m):)gj#m"\Y2]\HfLNsmI0b9AnAHHr6UF9Bjin@m@]N"#B)&'%]\"0A6^nns>8qK\2E0,W%Gc9%7\\;'q$qFWDF\O_g,#t;bnO2iRs!MGFIiH/5A&q!/ODQYT%D%0HfJsRG@t?*j/nd4L9d@Q)_^o@%(YX7a#?TcP9O/#[%;p!*CXofhIQ,8"hK\Na@O=CInMW<"8h6@.?uN!0@4QZ1n_f,SDSBWA9=s^P@b08QFKb&2eqVmQRZ4eg[_LR,%R[)]hnmaVMTuGl5NEO6HNJAcbl.gLk1;qhtga]qA[@n(Fb`15SAiqd)_5\J-d&+5\m7%o#qmJ!/,Ie]W(;+j@p;V_TTF8f[CP]`r%m)Ci;>nDnXB%]&D%:qT,2]fX?bP</FQ_nTa>(C=+A$]C?VVV!Y0tt-e^>;L4;^X8O%.[\iOr3d3H/n[g]YH&HeC>Z\=[=C)lU;3%%kRReW@>WFI_#X)ogpB*Gn]m!X0W##L((F"pfL\jcFKp7cT]CWr9=ZL1(e?J(g.cBsG"([pE-D)(J3(-p_BQcYoiC!Ugp$%!iPgD&%!MKmakOMnlJl`=(pEjh0VXu*L(]H>7R]FH9@p3+K%G@1al4=C1BO'OD"N)oY7@pZu:b1F$1!bOcXS?,)o+qtoGZ#\.3>%TK<#RaK%ipe7JXQ!_]Q_`_^&^+=D9nj;_?VBF,<;D-2Pj!aCX<_@"WsRiDWq5ImFp3dn[AgLUJD?Yd)&Inme5FNc09SpY=%fMC_<e^(2FS3A%Yk`q>GOr/i<'k`al<Zu!a)kp(R,`@c"eW!=K"EQ2rd+IO`HKRS,R83_Em6;NVe3-E0uKTRlcNf;.VXd=cnkq0'Da&Q9-'+oKkRuk%70?o"'#VZ/Pk[PhUc&IW9C<,IKd]^4!/"1sJcnLRhZ2pTGo2>kRZYt\%(;?&CJkY9fZF/57O+jY;T3WF'Y+U.;=`d$$%?j1#I7,d%,!I)q3`8kp^?K]/7kBOAe`IrpNh!G1GZm8#$o<mJkAL0Wcq\.qP[b[8V^8jZe@6-5@?O.e#09TH&>:S2\e%ZsB81noCQ9[RU.Dtf%`^V*5@V/g]7$09$Q\D">4`n;`&>k^!MYA:sbODL'M\/HMC"4ii!QBAdloS+Z1N=n'J**L2P0u%:J/B+[ad]e+R)*;[q!=HV$2W[a%9")drKO1%_9O>uqB1sW5Mlge_ZdG1]8jHohC!XCD:Ns,)KUi[C>[:RkR8I[(pZ)0J3Sb;MkqtRZ/enM'(&:0^jr[UO-F%YJOJTr$%Ok_N[i_HTb%]]#BZLgt,'Wj&Q:%ko^e8KS5At[uD#$9tgASVGC,Mi1]m.BqT[RgT4?NU[FW`ptEKidlk:?5Lh$IV)+\LCTk!NqnU%*rSr,ejQ/ui;Tk`SCPa4[NS:s%;P'LASVGC,CTT\r(@HZQl`S%[9Rcl&Qcfrk?u*+"[)ps\U/:3Jj^*lVuedb.%MVWi`@PZ!fX%t%N,7A8B*fR]1i>!^f92P\5on+d#`!U>5gG4g"n$f%Opr!_j0Y;,Q\"e2P\K4+;Oe%[FhA7$4l4M1%=W8+qM57cE'%Sa<5)PX0o(Df%M.o0i-s71QS8&^*(7lGEhFqpaYXk7m,m2#M&hE-k"+#^Ig+C,)SPbMm:F:1gI@d+O@.23dM7Dsc/hElV""Fq"`dkDEf)sO-m1pH<%m]!Z/,Tn>78@;R-M=JLA<"iIii73FN5#D`A]o,)XGO]U7-=i/n1Jj].=31T+<AHire*p%B1uSn[klVuXa"fBuE.HUbo"S=`8d2h7%'fqY;-2*qK=nnA5C#XS1*6Vl9qH,([E4^rqJp[>W==6\XU)rW2K#]o,]@&6e8)Q$!eaGL!hLhZL=)>mX%!Z1s=ca1-Jfp;KBWqdH%RbI7nSG.jZ.#<;rbL6bE`4`O#+o2S@9puh4\f<k3n4Ko)7E8@h7cN86*74&.!G@0h>r&3[8pnm1$Be$2-u-JJYdWqRn-Yb_=3qQp%m_akGGsEuQ89t@nA%+[Y%l4Fn*&F]HF?02q+P&;aaaC=H8bCMK'*d/r3C)i7WGN.3Sgkh.k6MKpY`p8l,Miol0dB.P,3==I%u:P^%`rjPLS2ZN@3#!HpmlZh,e^e=TD&#JU#g!=>CJAZMo7BlVZoT?]jjh!9h&aJ6m=),YHLJ'@J`1Cj>eq"D#dOI5F>h=pcU/X`+[_=p%q>u^CcuR\!,ICP:+G`?,aH4Z!W5[nCF=d%&f!ZaNWW?c$G&;R7G@Oo+Ja!_nZO9P1m'8)fk6_D1?+-Vbh?DRh%:mSb5m2I$Lq[/!%J?jc"ATpZg=Vm2LXnR&3.JM6@AfsHq"g6_Lg@cBO`qlZ1FJ$0<;l+;ka:QFJrPnf!l#XAMlN%4Sd&R=Y3l<AWQs2V-A"P);OZrIp%TpMY^i2^ZQk-3NmG7RagVUO7aQU`:2^1UpMpU;K)5Q:X@^\R'M^&7!45Q&jZh\iafi7HldlgOi!J,/VarU)VZq(Fu3iO?#*qpRe.%q"?eS5eO3I56(RGro#NVB77Pjbs23dpOE#;O0AT(?[r"@T76^U?_m&GrSo"!ouG\As7W<M;s^.Vpt%b.G5U>!qZ"pPP@EtUn,N3-%5JH!&I/2fprp[NarUZ)brV^+'r0uSgq&$-rE?Y4D'&cc9-,km.rS9^9O$E[7orikU-/H1CM-jA&G4M:)pntSC?U(ZRiNl)f^Ru;n%K/fZ:6U,JM^\mNos79Uso$c(_&$c9,af+?Oqr8b?FS>Bg0E9AuqtiVXm`X1Ds,r64T<n<7<Bt2K<1K#-r859hm9fi]m<J(XgAh04%T721boAdT#pR+d#r;1"LiK$!U%kc=:Cj5f?T^YUPL):9WfW@U/jq-_l1%,X/>jLrk603#d$f^->nVe;_:Qm$%^uFlHWX-_'/MTol%GOYP(/_R]n1u#Z*=`>Gc#:Q>a<,!OrY-HgsC*2I:=_N(*K/mQ)70o3LTipl2J=@)h`2a/[V0RMjWqo't+7iEi+=&^QEDpkZhlY2*%g._N).IK:rNAM$i_Pps_Q!>VR"=:eV!Wu_YjDbT:0G%2%C,gn4,h+TE3Y5h*?%PU>j:U*=F:F0Z'FkEJ)\Q$$J3d]66R_ACT0X_@%a>1J#`7PO40FMGe<"89aWb/%.<"S?:%M]Q^)<hcAO0otb+VP1FG1VJQ3TY'65a=N;OO&Lpmq"9X"7;d#&2-6R57]E^jsMnBWCJA]%WG+eA]g5/gp?S6(cL9uIIEpEgXDWI,-6Sh1151//cKf8<Jq/GgC:VTJ<@>/ND1bF/ZsYq0d.b!VpN>^seOsCGI%Vg[Mpo/9R\?[2%kGb5Z3H6j?"#?u^:j[t"oJmq%=OX.g$QH5=i,:gfD4:KO=kaC*Y#M5/9:]jFm!7-Yco@TF_2MTO\o*EtH\J8o\DZ,f4@=Ocb*`1/%gb]??ZDk%Tc7oL<0nR#/rUtt1;=#msdkW,?]eL4LX>(U^b,FCXok$Gl+\t*m9i$Sm6;cS%/l)Z[$o(/Hk6>opbSkh6Rm;4/Va9g[%.hfMH:/;EujUf#-<!+n%=Hp9ID8JQE/!hUcc;%^u3!X)bQm?oA^U7cMfC=6Y-l:5>:bK`p"uo/Nm-!KV7gn]j)K>H!J;DDR"+Sc&%U7L4-1\3':5srUFA;?hTI:ElscmMc*JbBKkE6k`hkJ0b!F80o6'tQN%h5C*VI*P_N6MK'%RXA+gO#^:VK%HoA*HohbRc4jo?2SX>%deRT!s.]DQB9"0b=g9XF@e^oeHud7K>VuVXEl@PIY)/2EZUVU??di$(ns5n0XV%_[+/ed^MT#%H'OpH[PZM.^%(Nk%$"d9\RO3LG%['j4[T%6`#3oB==*Um$pZYAEP\i`Y(E&1T(lJP>Lqm=)4h`e.S"h0mu'8ZjR3G8c$H:DdgT1l-O6ZA=ilL0SNV;T$l]A[WS;3502%l/^j++J;i6eKJGe*_:$S8m2RV.d=^O#KU;`EenK=:spQ5[->\c?J)q2b3aE?XD7mkioOl?ZY.klP4#NBpDE@4n]l3AIF,RsAtd\'%=(QG@..]AhL/O63ok)P62\+4WMEX0`>_+1e67C=<MAMuPUFO$:#iA((D^$BM]L*.BpB`#FEr3TFiNGdI^f_?-PF6m1S5>>H]7"0L%_6><3UaeJWLqgb/!GTb',g0RJ8WWd^<V`TB*);OA3L.";5bA^?;'/CDr.YN&Y:o]B#'V8%M(_X?"RefXRT1*?[>&>K+9LTE.Gu%;%8pP,%GqrJ<V?;rJ6=iDR,0^CX$!$M(QpjMne:L7GRjN$%=+[DQ%1DD;9_j2oo4+/^8F7Ncl$UkQoS[gSlDbT0/h[i)NBk=u:;kD1%/KZsMWD>G^cgqBU\`f9/Ucg$bHlO[!!",)rM+r>(k9n=tpF#"g+c).%H3q"+GR6WGbh#AJh<T^AYO@3qq<VDZb;TubY],KXp8'"'%5-onBjH;Ci:P9&W:oZsB"d(IKn(`:;#Ym^,@@IuH9g#1;,N5&8_F8!-M3<puVPN`jQkAsZ1@4\4Y;1qXc1'O%h)qGHRr+*p%(+Am%)R:@B>jtZ-M:&;&G@?G.Lu0fMB8DQQ7.QZUC!:sa4lC)*\<dh)'\bqgic)RtQrlTl=0%8N./EtBd@bDFd7`socg:(@iBUSeB2*uq%,fq2Nq4^`>^0X]57TpQt"_#?.C$6ue1Ngq(g05W7]r11U"<,<m([W)a@\#nZU-t#8INh^8;ts!1KLEl-s2kj\BDj/n9oV`;-B@3Z%,g<kM^C-Fd"jCm/?mar$cemj-?aY9,E$sMrh^G'*hXBi3hBba:+V7S;,Oe1RP!cIs^L$FC<qnC`]+OIF_O+Pu@3AK<N-9tuMGYT^%(?C*-+nG)g-O[d/#14&XD:!5U"6sb=mu\6k)JL,OJU^R'L)+!NG&i\*HNf\#)8)I'T,(,FpIGi@:MGX&Q'4FmUL,L<IT7tgO^_=t%_9g?#f*#Y!]o"3oKqJI33"$7sqZEkX^&RYFJuQmJR[$lmgU3$l'c5PFYHGCV[-X.\>bnT:9ZLgM30;f*"3qCGb*Hjf8!A_^['/M1%<LNi!`p9D)1Xjoo;(6U86@LSfAedUP#Zim\?:RIJK+t,EJ69H=%qf1:C)IF1FprQE%Hg?ZA`)lNjC5\\Z0P>"W8_Wt$F`@%.VIiI%d4UBh(,idN[?qG;f</VtUX\)&VS<D-c`fOQ2-+3C(c"AMWmTQ/!kK=]oke3ND['ueie@HJCI^u7K_*rHR#%Tl`(2[3Tm%kb@6u1[%j''&\el6O':SkmL7(`.QC,9dc>TV8XgK8Z"ACL,@@6W+U+<qVD8-\)emE'L'RDg2c/F#KJj86sE/GC\Z/%]u;]Tb>:DY7E^(Xpum%?%FkQpRg*C\lnpVXEX'tou&ha?2GW74h]F(h^^H)8eJRf=Z)'W.g1nGrE.8STO%,h^ZQ<DX!G+2j(88X$/W29E4W:>;kY4<10?i"%lDW9E%[Kus.Bm;"XT*f;):FMDLtSHUZY<0sMsZg>UC2<`R8JL1A05pYc.6bEmD=Ti5BfP;/9b(g8a!>(YQ-s/q<6AY1O-KlFBSl`%/8V1AfEb3gL;:4?GpWm93JnAPNQN?u^0rg#)+VbP"BML2s0Be4nj@&Q+NB.k;PPo^\E7Q4(dPoOSYluj@,fc>,I=&sTiUs(#Y4lW%2<7;NoH"^J/hG-lNR"MhG=](1\`)e]X"QslmJ3>157sO`Rqq4un5TYmrTY>p*/]:O&E<mKS?W:XHWIOY6m?o>hh=*kYG4\mp/iKE%4/2I'SkkboRPQNO$VURIH4N.,8EiuOLjC(5Tm@L@&dTLlFL+IJ<5%@\Hojk0>3kI"'p+]e0KYafXZHg,@oKa6FlA!EJ!l2U8c@9Q%Y[O,[r"EPE3!#i,B`9F1".XA\=3X$R]Fi6OfQt/7k`S%#noTdUr+u^Hial\4jI4":8i'jJKusni.VbILDs[8APiQmh&=e4iaBjM,%77=nh4HO,f:i]T+Hj6!Jf/:_kE27`"0$QC(IHse?lQS;)aug[oe=BIu2_S%cCI[a=C9YkI*DrU4O$n7n6eP>.#`Y0GjJ^H+$-3E;%#Z6t3Ge2@dM':ieUa0X[&&kp]ZdYkp%2^G(i%-@(I1+,J=-.c6N;PJt(RZW0'P2DEMs+/L0WjT%2Rjfj+=;A:;LW]7N[j_TJ6<bm%PeU\UW:[`O#g9/52!U2b=BQ357j,\'<gXk13KHajEi2A8Sua;\pSuVacp9V/&(!WHM(Zn-CR+Cfi,r-V8Dg+,RmDA=b]?@@b,*K9%ocC_/otfZ7JgE3q`UpeT.$nAr^!#fbC[b*j@8?>PVAf(1r`BAKMrgkRIf-ReGAN^6H(DU.2"+r5Gr*R\Xp+u4Ls17Ob<Eddg$d)?%n&jL*T^5)KYAm6a[l6_T)*-qEGJaBI#)@r@+=fH>Ql&l#(g3-D&tE&mQDu^RG/k20&S4o$cF:%&c4#HV)#)'N4!*RHT[L&674sl`%.X&cci?dR[`*/RX6F1ifBHMK3.(39Y_/r)Wp,VDbH7`h5.c@$p3[@0G60>9&X21qCULOTtrU$nOY[-t/?h!M[QoBmkWG*QP>kro"%J*O[1./U%7%6d#X14'"2,oYQ=\p#HQ+^]t7p'QcJQ@Sbs1hrBoe^s#]'-dUX0<'39qFX?NdH*El9bl";3DK<2n<u7QU:S)8kWRuG%UrtC>:BB(`MA4C1J(_DTnmlUgAb7UEg9KLdlUN%Y#qc!]HA\m_0qF?%+n=tmTu]WBa;gSQV$p?S:85*6qR'/Z8`Q;.=N_TM:Hb'k%H)r!IJVkb,>cokIg0D45A\Tpclq`OB@t8(bNBmf^c?PeUA7RJ$Dct`C@*hZbmI"`35/MKrmpajl1$b<b=XCZR>T#_(b]<a"`N6jF%PkXMKraUgg_HK"Q9n<d2/QS,FG3+nj^#p/cN8Y%_8Oc^BHL!hjGS+l<YW[nuhW7$rC3N7d2!dD"jC7sHZ,,Omgm^7R&DIDXTiLu@%YRd(uNGUS#?l[RsI?+/q?LqDOa:ALJ)Vi^0`q(M^*F.)AF>]/tn];UL]At2Q(&]m$YKggO,W6:L<X;n$PthOp0$%*^OfDAqb`\#@%;tTrYo_g'3"t(#TG0n'S^[]4IX!8V`YNmSLhEnZ(T^s=%:)1CWaJqA+?OK5oLYSmP&^_U-U3u7sZnTDD$jJZh&tW1l5Vh=tX?J2r%ZMV3eo#>[+Z/6]jQ7/;:m0:s%N4L?JGcJT%7'$#=l?diZFDX"c\sF<u2#2&caLd,h3#fJIbZDg*"@6YI#EUD1nIG*OAAS.-!up]M%8g/7NiNOqnHaD%t#FHt:rLE_5:43LGGSlG:n)r3X_E!nB!Ur(HdX2`ckEKH<<8nR'YR(&(4jL%OcOS01,k0UP'U%gk@*^8jNcRgt%j.'"`T1ZH`"(<:3F%Z=US5VHmF&(tun*0N'S;Lf5[&l1JP[a?VC2dj\Xk,b8*akl3B5=C91)!.rq@KqL_&X@26i:mA&+q(Ad&ZuD%_i`$LLY/ZHTSA+g-fU'4_lG#4GnYNna\k555$00ePaU/S[.`l8#icf-%[iS$7(Y^,Y$uI:Y80Jd\8eu`Q.+G2\*)S"M7bt<SkeYF%Bocn9L4ib+4eZ4H8<%QOKHTUQXtoWKm##-G/9@alVXXml<C`918#2$)=O1H;EP^/:5f8a[4+GI;;I,1k*R\(+jHucCVCNpQff0SH%R?o:R_-:gD.T7"4@Lj@([-,D*Njb2+YD-H]h5ahYoH$qfE%H?hQqH#mR+YBu@d#[(54++pQ\pW.hSa.MR1tcFfH<5-[+/#imfA%a%;IFh-Pu#9S:Y@M"*+TY.Yt6e?a-LD6e$i1(I0-fbLEmrD$%YPg84/82BEt7n_-lc4KE3R(IJAcK21`lS)2VVDbt*dhBM"d'-\gfM%8lM*[]0We7I.U?R'(Tcl`oNn;MUme8S*96W']<FZUHi)G3ZNkILhFs:=^0;#"kbl,%=K8V\G'Vl$U^jG@cD_n>OSoV?]q33_kf0Q%9NFYBo3@D%,T,l_Y_EQtHnn0OVqV&1(e3,&nM+lC_E9U6FX^PCqcF\j*cn9IZB)6?kFY:$A)%tdMd/gMQ/c]70sJ+&@$!4r&MenP%=jg/!a5Bl`]>C/XQ1tMP^ghkK\U\0$45H]*\dk#0>M`>"0ZYXIO+V+1$8C5'7q6D2"+DRe7g,=4BqgF%BsRIWdMs$M70?0H3/kfb%U;LKOM2b]d%Vi"#,XWJdA8">W'&8VKTM(AaWY=!OFVo!?"<Yn5YR5%Z#77#_`=nq*F6b.,Y6MfubpK\Whud4<9!:,&^kBHn7jllq%h2.78dQE5`II]c!!YWHL)uZq0K01'O3g>M1*]*.kk^,PW02kjkILr8IZPX,#Tm.YEGB,;Z0k2TXjUd$#.K+IPGH!)\MatGC-KWDc%H>_*0c6Yo4V5cLiRBN&alZYd'gr2ut$#.5-ktsc<-#Yk^OgtrQ2U:d4YECGO*4]3UF*bPY=@LAcAm+4:ECqIi.U<SM$q"3Y/JNiA%=NKJ!84eJLI'n&a@m#APZ-adlC9RF=aB`jGB.omm-bbDE_HPI$PI89!=kpnQS(\]'5rO&_mBVeWYKGk)q]VcWWb/^P$D<n:_T$a8%GM,L=fBkIOT^k"L2l"3R1CqFC=:JoG/!JZKbV4uu9=c""\KW;CZY[/"$KL'fF\!)W&7U&E(1E8&L',W#=M1tTA^%AEOd)f.0uN&u%pM:\Q6.W>!Qni:)'WPTcB[:gN0P9rL>TnbTUYi1$_f@KA4@L#sbV8jSCoQQt*bZuY))Eh&itQ$g0b5hYrGj[UJQ/m'Sr=O^(1QgI%)"X+C03N*=@m26,N;7qF?acrb\:(i-0j'B>%S/$[1VsL.M%C/7=lCu0lXm+2TflR9>SlHnF&=B)Y413up&$:pa`^f!r[[ta%3M(W%!l*pND5Ss@=+\E4RTWE\Rl.OW'G&d=*mKNaCM'c`jinX3(s$RN9FBk@X%al$cA%RA3u`JrG<Y/Bm.l+m^)DL(>uERb7L(`M4:eu[%m#1Ga]JL>^"(%J0Oir!E\=b"(D[NsU$V@CW\-?#f_2^"s<u@D.EF*4Z*grH-Q>nB_/Y6,((=>nN?f?JSFAq<mJ+m+YP<.T1j5+-b%#Vdco`)E1(FJM!1c<8hsO+TFnWDg1KNd!$^i^Q!ael>sW%'-V8U*;9X#`nu#78JNXA$.s0!3l2r=a'O^>hc;D1"[!f3egbe@Ni\#%qeN$R6<njB*[Le3,Ob%`Yh[^TqaQW!*G*0Q8u#-R3J2+"8l4Ea0ZW2j$BZgOWcOTeJ2E?=iR'C;:<M\*\5m-"c%1"/qeS_=VDjjX%#(+SeB#a9Tm8l;B)hbmrnA-_bc8)u``(P/\luqVjeR*V+*+aaJKK??,qTs(=N^sk.W#E7S0bK5Ie7[8l-/m9@_pMc;H-TN%0<e;q%ieJ%FMEh<(=jXQ]Cl(\tYoAAXC-8_T6S/LH;\E*ud2id9GP#VY>2hZhNc0GXA"en/;A@YT9hT5PKj75".i$1NKcYLuGsQQ=A(BCc%UD+W+4Z5`2/kF]8o9IKt@j3d]PG`B.#E"jcHY'*H3drl)5KT[M1AT^rB2)>K8eM=^/4kT2AB4te>&;q6mBVeW<VH:lk4],)Ddd;]%s3:"p]]ClWN]Tc-F_-OfXJI0<b/pUc,,=_cD^=@\=JGj;ar5m\Mn2"gCp>aJ-$\U>k?YRL2O`b3\CaPOqaVVSADS!Z_%]SV)d)g3%)d7'"6TPcWZ&J@96L-3)_$%]LZU$<Lo]XV1WN"P#@bZKXQ[OOhZCd;8jej(\*Lp@6F%@;Q+KR^b2?^>n&)jS.THY4sGDmDZ6O/bd%,*B%,M2nJA@J#iMEIh5Z7.@,dg_Z9/A:NFC)asQWl<;j,ld]HE[!fQ0]^CeYs*=?I,+#4`f87T].O1CLToR]Q:Tqr3]g6Q$Pp(6(%)S2W6@\d>'>&dsVSl6ft#KU$ROC4/E]nI?hD6/]Q%OSo*LNNU86:3n)%dGK4lF#-J_&D=gpMO_)aJ.P2Nn$$B*RV$<Nr#>R-C2g@%0tlG$492t<%5tI2,],6u2W^5UZ?j!bh)g6X$+@*SDp0VAWAY>][>C#\Net"Vee#2q7]Nj8ABj8Vp1tX@8$m'(UGap+aQ3H94saCV%B:.u#INKJg]s6E&Af/G#;eC%,s6Bo,H:*C9pRC#9@;YjlFfK_2aUZ:[f%')beKC?U$SsSU0ne<:Q*3L2OmCp%T$MPDMs8mc)r(8W%lgMXmI2.R+]nDMqK.0AbE7%qCl\"Za/,RL+qQ:U[V7E,@.n6S,`5io+_n7*u2#9RFWWh$@g;GOuGqi#NE7)tifefSI`HFj.$D4.p%>7u)fidEY!57m5!J[(iE-6:5l&O%[&Pc;2;0AT3*JR7f[qWOnIRa)Ub)^ff&X^ZY2@,^5<!I1VK2Gtf#Vl?L8S4p7FX2m$%MB+LR%R$fb4h&s$/#K0r;MKC!8,l%.k/I8jic[@USf*C2]nD#5c=qC":?84ON'3c-*pZsUk")%qaj;'/UMj[f%=cB-0bj@gbgeQ)=mDS_*%C#oSm*AElSdT!"E\L53pQs2Z`P]PkYm.J2=+$I(B=W#V)o>H["<G]uc_nEW%!'=lW[R.6I9J/ZsHTS\<*)eB70s^qL3RaE+ZC4!3%p<cj8_mh)0a3SRu$N&U:'75/sh$;8BKur]73"\6QJunbd^[`Oi"55UgVg(Bo4?-82J?W,!Ue\kRlGW%r:2J8/XSkDk$O5(/R[Q3t%gVJAn3JFMR4L`MP?6=Rh_/fsIH[4l5btlR/lbrLuFgQSp55LV,M1o<EaB3Lm)r@QhSQJ=@M,io0=N/LKC$c+->rXN[F&t1'E_h:2%k'"MNI*Ml4_9PpF=RZN`]nBda=G2qoNB2+?70!o6RqHE"-sT.@`k:n"dTdW*l[11Z,(jQM[*hl(=%V,PCW]=.;Km0q&CV<We,!bN%HWG5Q\nO;,0jt(u&Lu"CBH]@f1LmdCX<_&FE:JKJh.Y1[m$3sq.?k](0gG,a1:0<&MS*Vq!,9fJnpGpd@1nr%72oC3)+_BH/"5;.%)r$6$Zat]e/[:37=\d4N=93])]`eqo)qfl#&7./nKMn%lYUEt;VAfk]d%4+8pIF>#7!"SmO[7Qk(Grb2/"5;.)r(6U"M``I'BU2m%e&eX2U7K`T37;Vj@98?joEOL>`ld4G@B:;6,0c(,"%u#:g[3Q;nFCZ+]eVJp@k-kdX'`2Ndo5YMbCeZ$Ir\!MflmPAIGha'5Q$R,%s7,ccJ%6l]cT]!jDRnHBJ,82thL9kNXG>ER+@Z3[<j^*/NJQ-^rUCX$pL:8uCO1@kR*:Z-DE27f/ZED7Rg%4&,,dVrEUY%U\^ff`%@*7$&#%LWhJKYXZ9GVor'USE2'G6uY.j>RmD[&.<4dp[T10^M^gr's=4YZRM-?V>84hNkVXIqUcOD\AK&5W$0Vd8_p0jNA]@Vam@%A"<;@*6`fL4VT8nci"O]!)V6>Zt`t#lGK]9GA<-7Y+M?[Nr.;!HT]0&e&N!fcijFShjtCJ=Q0T>nG7h!E_0r'=:ju7*$@@O(u+le%n*7Q7Uu83EKBrWYLun!/@TR$ubqUrMZ_Ue2OFW+35XjPM#NT?HOMjh[Oabj%3eu)UKG\DB:l[p6@aPmS9G+6702G.$fB?E@MM+T;%7:u<^3bX+m?XkuYmkfD_X(,`nKb_0='NS&O?>(h#$P00Z%C^&Gi:3gHdhUA6&V[uh:1"=IkbB.<THNq3P6;-uhoIP]WN_%i&ALfZ%YiU%WmUp?R4pe>D!O33(KN`g8G/XI>$Uc)-)Z'uL%?cCEMit%B%d^@@%t5@(=2agA+b`FL:2_g/29csr"Q?Ge=UKa\,/&nZ+\ZEC%0_lg/bBA:k7b&FE)HToCdO$UeI4jSFc6M\RB`J>f'p60/)co[Gg"Xj@8+>D#k^CnO!:P#p$tWfin:ihe5Y`Be4^A-0&l'1%SR.t>%5b=WDK%2:ZGNeGIT:)Ck3F173P-O)26OHIQ#VatO=%+I6g;R,8W=Iq_0%)JEhi0fEBY0</(E+3[=*17DBL]f6kt2N-:P:(6;Q`G#%])OYMO=7GGEZ-d-iU%6kXHcfH%Z/T9"%>]$SAjdLHo>S3rGu,.=+o_4d\cBI!J]Dh:9_4A&>9iaH&,qi\d+[<LE%m31+l"p=gDVY%@>uX[iEW!bZI=>ZXN4KQHa8aU.G`2s4G]==Q-;Bdr)@T8aLRBJe(E/;_A)k'K?0"_3['pCUAM3A:=t<2l=Ht+&8(J?9r)l"AfuYT%<!9O<<la*;;Tj9p/h;.5KOY`Xn_,N"Z(#lIp*fo3*UtTd="n^MP3S0p,pY>+3Qf-ioJJrRTWp)^Y^Qft"Z"M*7TBX/m(NZs]82EK%G[82I\2p%SI$TO9&VI1nG&niSR5XTd73A_h[p58nrZ"3nf%kcb'PjjHT,"%)T[9.(RR!'u1d>&Xbs?Wh6(G\UF?2?=B0F.SO#Gs4%D;6_9:K:EMa\SkJ]BN?L_(?*eIjQ/]0I0Loq1>s_Apl=#\6Y;7b53ujfT*pO[\;BQ*$Z-8@qEHE>.)1C/L8fB!gqcnZh]_$e#_e_%Qli=91pe+ZM+D``o<B6jCt(DOd<A.AA>#+t'1>m5R\+e0E6>tB1k\[n.$8Q7p+u2K3Pnj'#23p3E:n)"[K^\,aEr@?_jo-WLCa3b%2$;jn.o%5JT"BO^!>YrR-&N5F[[uHQF7_qa(UAi0Kmh4lTL)H'Vb&AmOJT_sBBOGTHO.)*I=L:*=I(Zt;YoDM.?UQeP_,,jVPAU@%gauoSEOrq1o?W+(j*[I_ado^%Ye[97UM94#CU3*&pm3nIeHg:hmtRbXLf3df'3u>'8[u;jW<&Y7Ntd+Y(A#Df7rP1!=urUUd0h5)%PD!R9?H>go"AHcR">N6C1G%*#pNM0Nmcf7b8eC$sd<].$8Q2k;U+OYXeb'U^j^&ZoTaR"ZE[LLS*4W;th/0Xn-HA=!7*.7gR=udn%a#PkJJkf-JSH(,aKAQ9k^N5i.+bSsE^&,Ul-Sh_<jI@LCIi+b,aYBmTeUTVo@chfP(Ol^Zid^:*iU?1oho6ZA\"34UStO"87%3-3%ohq7Y>H!3,F+FR8lSf5F5qjiX]+XLfJq/_OH3J4XBlQI2@VK]+Z8D_"k\AiCDLrc;Ub&uk;PD:M-5@4Q=^u6U0J>=?SusnY+RKO$%S"O?>#:P4/9l(Htdr,S3\.OdSOGXJ'bn8/1VSSZ:VMSS;L9S/D;1Z=e56O^F0>!em&gABc$g0g`^b7dJ9_%QVeb=^])]VflnIj]*%+T6aarJJlLhR?pPEm(Wlg2h"[k,;ub>+<A<6sfO.l(#'Wq#FuF]88t.HhuQj;n.0%b_\?X(A:2[PUZRaZ#BfnBi4IPiB8)9BE>;H%5lsB3>90f6Y3&A&0o;=GocFltpGD`Ys%M=.g<2EJjD=]%pAcHY!#?H#F^dT;,AdI$n/;AhF3ou<@k)'&T(Oed\2<:4"&pdVp`.f2%knYJ6/l*Ec3^j\-Jn*V-@;1=>"XqB7=.o#u"6GH"T`olAW4@,$<_@'b;!U",Or$l1emLEOl:K8FT!s;@DsbVH%n*dS0[TM@^]j9!%A>+kd:8Spt+`ci#[K_Z?Qq<4hX[QGs8@:%$j*?;&dMIp,;<N&(m1f[bi`'"/!ZBV,\5`mb/qf%r.MBkO/FD3?T:Gr>QS)+\cp1%m%6c*dQXPrsZ:HZlZeW#T84X&]#fk<]^8f[C^9Ba"\*R]B-"_?4s+Z(Yp-fts_X$5:\n2_2C2?cC_h)5/RoRBna2p@V\1@kF`7#_i=%p)pBSKFAn/p\@o7`53h=0rUH_l2\N9Qe^IA`O&9.D&-$D)Ji8[=#S1.gK[-(?(53gri`>>L\Z(LMCd@*SOBlQP%!_6=R&1'-C]rQ%7"p@W*\//4OchSBf4L^Je;Z%Pm)gZcG+4u"]5.#=h>^L*m4dEDl?e)6i2W5SZ,%RUbqi6/]iDbCJ4Ylk:Pj5J<",uF>^d?f6KB."%&__UVPaVAg6";HjrRD^."^_QG\Ye,uGYfs?CaaYeY8Le@hs^*Lr'GD&WQ>`=Xqc+5,GBG4X*NnQnmo-:61clb,#<2RU$*@r)W$W`%9EYP[3s(nd&e(UNUlLZP`NN/s!`FYB(6B*H;IM8OS@DN&4eiO&X"[:Sei#e^MnVu"3-i@Q[tu\qKo.4be"Wcor(n8II5URf0Si="%l:f(_mDX17O*idQS)ZhX%&dhgn4HME;_1Q"]A*pC%`n7hE020].c+7[LsF>FNj]WRgM)VN1HHn15e.SYY*=V#$mL_uPlg.;&rotH%6ic=RM_LXkc)b&I#?q=<bi4't=Stk9&94FcdaH?dZ(RS7nPSNN0RL)!);`A1c]SjjcBXC2oI])R4?R\Fj,AnKVZmRW_mWl][P[g(%M/=r?JC&`B.a'<A#TJ^-&%#KPjElk?0]Uu$)o?j><Gr5a`7.9ZoE`MCaG]!u-[FJlpf5BrUV.!:N,Ye@ER)`e<WVlrPNQmsT50#)%L!r4$D)3:e*-h":Ul,i1-s=CSS'Is*4`W2%?dqJQ/CmR0OMsPl?$#_[B+7kjUGA2^V;5fnpMRcl+"Al=Zd/mR1LMl\Jma)-e8.]6%TH_AnL8:75\ejJAHkoh)bn#)6X(EF7[MZ=]kDX$nl.rKO!IIINXWaq._28!s?I[p*8k8K?e$1#O?:;tAaW6Nu(hI^dJAB(9.=$1o%'/U3;fGNF@\5"b#?Fb$%XD;I-NaO:d]:Rd?G*=NB4)oHoq$N[Lcq9E6Dt#[:BX*I!kTo+'FMK.Yemt?W#Xd#2X%M^:!Tc][??0m;%Jc\YZ[u1IE"b1`%<t#N5o!H7a&1nNdr'RuFWj\rsAN%T4Gr8KA"h#Jbl&L9f`iZq?F1SuPf@]/sN3WbD#+]T>jqh;^eC%R9*qBM'%W+mC_#Um*R#=3kW"=T/&(caPHK'U?jOrh91lD?0a%is(r$^TMRNR\B"(_GA4pE?9Xjh\$JRS!.$qEX(mENm7&@rs7K`:2#*h?XP6%N2=/%0i6Nb+TTUg"((bjWc`:?_.4[-D@!>Q-8)t@@]@.Znp5hJ-c"5T'Ac=Q,L_na?#6DdGTG^M_iu_g3+hggg)dF5%&+b.D%iC%%^)CetbZ$f^s+#9.6^qtG+*C3Q*LAa)[0:$XNX9hQ[K_C<$`uT2E-K`^?&Y[T'8bjlh,82Y#6cK25stRp[dZ9U#D3-A>YS=6c*.6C%$sQO5B:>25Y`l'5jUqIJf-l%5IOGJjgG$2oP6$Fs#0N1M$^C>='97tSg;ORi9!I:WnfgO#gie4i99[&b/IX$M#b1)#KJ'^Z'9j4o%a;te((;I<I1YY2VHp&V_bLA]\s+#-*2jf;f70\(EX(-b5Rrq\=omNq5LYsfaeSVQX+/_3[/T<r8ER!IV*l:]e`IM$AM'8H,#fqdg%"<,<_3M7P2cueoudU52`[^$+Xp%E2@<TnIF:VeQtg*]N?(h"s9]kub^UaHp^*T!'`@GT>l*A@*coKfLA(e/E^KXWp/apo*4Z(<(W%"KoKGNqEN\#;".Y#[WbZ/.rQA$GO:k_MbhBl"n-850'2R(+_fc/#[AD&X#,@R''-H@QQ`h;'2;k3\L9@E(%tc7%iC2(eD7olJ(7`%o^r4Ii-#cl"S_PX>Ldm;VXgRH[#!'tXtrAJ&4mIb?8e22=_RPMK;Ot>e:?ta$!^3;YEk%Z3iG#(N7oG*r_YX!-C"tI#m9QthOp9J%"4"aM-5Hp3KIV(h7),pf$5aKL<R,Mf?^a[;!ps)4qXDFO#gVG]7s08>N;.9-nP'E:4C^U_:U#cp[ne+&bEi#U1695GAU)O#jHj%?%I/ZM(LR:RK[Zd+?Wh3O3Jo]/.QoTGc-c"Ku$'AYE_Qc77C0oat$Nhj!FCX"%6C3=Q.O_3rVtL!@Cl[`4_U"b+L@ZIZN,:MY-u_tq%I;5qf'c-$o_DoE&@M:kb[Z2g%kBZt:gr7%>J;mJ`ctP$th%sHn&b1lUrR&Qd`5^b?2AYiRT7gYS&l6/k]XZ'cd,R`Zmri8k//6l[%9q)JqNm9(u-!8"u*jm\lD=Z)k6;0lXVZ#=NbsC0KiuQPD93hR;qt>+N_:6LTDf&$YPGgp;i:R*?`_Z-TP^\:f_V`=gmpa3oZ*2A3%Iu4s12dfu!-X!\.?^#o7i@U1;_bOg?fN$FVZ1a.\VG0a1mT%o(S.HR'-ls`q3SK<9AA0o1"><?=:]<oKEl0"+$AZiQ#[ALFQ:4j$%-;LKoRYJcsD`pArc*X/(^Sfjf<?jdkT%+s\PfSe(&WY:.m^<I/%hSU*(A(^r`?0]4pkQkn\3GtW''O;%jP!pMMU/I:Ni:P7KjR(0%*Skh2,->e7IO/i+5sU!p&IA2!`&#q"OO32qMIfg"5E`sE<D81Q*((:]iscGgKN#XE#JPigLphe`EYch(,]uKlBS$8qiW(]UrKf.t%jHI>]aFts$WsPq)kMsr)J/p,,h.;$O6T"sUD9Vjg`Xee#/Dt+gFX<#/o*nlT2XRcCqT\Bn?%?<VV42%D/gr\MMZiF7]<C*Cpq,PS%^Z@TihEF\`k%f->Y#.e(`=O6l#D5IeoqQR`/d;6)&77_0g,A.,:a_+rDM&,GklM5SGU/-'*nM;E#fo->+]/L,.doS/Wo=<c6>^/F%nHOOWhO@<^A]Al"+OVuh;+&X_OR*c6d'Tg7B^040'U5:K-B[/=&JliR*EkaT<spHW/l)\AoXc1&U,/COo._,,F7rNUHuI9kW&gb<%2Laq$#b:H_PE/=L-fNJ?Q]1:%DEofQqQ:"u2`F"2]rT4Z1=acI-=&;J;"4mS>GbH8HZBVDaE#9T"`D%!M&d0n8&p*SmqD$Tn&NE5%N5p`u@mY$q1X\%;@*N!n9?!)(CTD!D*^0`k&rKAdbU&NR:!CCK/;cQZWYR6qHhnAtjNcOg+mTeb5m]e&,^i"]/]^+(36/D?*eJdk%R3`K04W&LUJYHBs/ZA8j4[;E[;@S'G<Jd5RVT5iaSXZ.;4@!"8R<&C%EBl8SG0\]"X':cB3'Q^c88(C1GU'Uoep2&F=+/anPP-FY%XjKl%DkXIU#VOk2<Ie>U'VLhH4;^lt-tZOe(gbi!EE16s45WmO"MK]rU9u,<2TbRe`j#@jAB&UI76V&6A4UNi1@lP?k_3[%+TM6X%6ZpAC[LGg'QR@]*n#coJ_.b.;1)Gs!X0Oq]:Qd,J3JaT+]E1#[8@O9bpPn>tChUGp5u21\3lcYf?jSQiCh8OiG;Jqq%+cX(A(B0E%+68F*FZcI7S^)T)T'O9&A$BtUcI21QgSq-Rhi?YfpSaC0FQXkRLK$G`(_BMUDL4XRA:_`,4Q"p*\GV%L6P/'WPWV0\]V>T;V&"G#%:8el\8JlDEl?[ub1N)/SROAN.,V:9roE:<t;dXJT9I1*$,2tN*;.t>O-q0U#GikG!P%#/Q,M9"b<Cb(P/969S2c[nqLf(t9Z$G0M%'r2tjLg"%!n84AAA),@/5o:i#hbdSeWg,-<#"#02[9O=9n3SWQqQD@$X'.\I`_mu2nMZ5T#m'CGh+[0E\di%9@ICVW`'.[`kg?gg%&XGYqm%nCe2l/aXNpQpK`X(\Cdm$9@6P>r0G6\DPH?nC9-m4Tg(Qqtp.p'#XR9/XE`b_\aaoGobArGT00iI-S]p`OT`J[i(E`&Tm%:nl/lUSXr$7>H:7,sLJc,a:Y><#mLm=]G(=9WZ1Ok_2_uUkCIAV7?cXG..b^[D<^S%jVkl1k_&D:kChXoE27QaUOu&,uI#So79t^%E,k\+d;Y^2'+h26ekO=X+>ktS/-sQ)?aP=K\VajFZsU?K5ii9.Km1"(FY6S[KRAoE@<rc-NF6!nC[r>fm?q+iS*dBp-RW>pWi7d`%eB)J/,)^'<_H65A5WHX3_F`G"++gBb#DOG/obX!)Q^^/hLd"2G9D2"Dgtb4,K?O>Lfuqj]bbu"&B"WAig&X2bk`\P4f(_f^JjQ9'%PPl+jPGh9`M%a>oUcnegI4ZiLgF]MC5G6e@O@VteVW$I@Ll_H,PQlUY&mI9PeUX7E5\+lYdZ6(\pre8"7/268M-u%Y[8^F6E3P',%ni&`]CCnR?$pbJn8"p.P;J9l6\4A9&=oGLZ2n#^15h[]FD@eOA",cO#&d$gQUK*";;:E/QSJf>Hm=),Y)T^6HXn.MeUr;7Z)Ms/V%R.P1GE+uh!)<`3`";BchU?JV9BbbW#1uqJ(aH7e&l1tn#9kt$C2?W>I%6/^DCKj09*U$\ma6YX]$fAH@Eaa(#$">0%N5O^UY)!5u%$7r8&!-!=o2;s&mkB]r1UMr1'Mu=-\TQmk[1QWcq#.86DZISoc@=CNo^Uq0\EE@0HrNi28Ht3%+1C,<;8<Na=,<7]B=-sR0G(>D@%em4I?Fmu!S_*JWWOl>kCQ*68&q'_O$fj;Wb_V8nQ)t6HR+e6j_!Vo^%E/&EE+K&ua#',[A2\tmbZ"<VNU(<s[Z8e#rbEoVZL,t$,%Gno;Md:Z@Ul&2M)0V;WAbdcW&.j9QL+e(OE61?oIhG\dFM3*;I![@fBZFoJ>8o"A+AU0UJ*Dk>I1o+-_e)fr4k0GJ%oV1pqqV?@p%h*Imp'SUmT0,)8=!hj7.D#oeKTH%O$='Rh4P2aX?)<;U`lVYqP>!FL%.:<e2FQ:>Fi*$:T"%C(Tf&>Tm9_),%C;GJJ!nN`A!"W,V%AgHCN%8iUlZP<sEpOe,"R@$g^cg\Kjo8t7QmC:)SJ/'UkI:;O^<OMmq%KTCB<T=b1?j;F&9p'F2jJ4#R[@]`u@D@2<eA#q^@pfEK%cfbr5'[\7PLhIIW&t)6HTlpKO>f<b#G)3($Me-.>XT5:Ta=5mW]%i+C;p[6#P_,gs`?lWs@u#ju]6q9m0eh(n*;fo]4V6#6Q0eK>%7%<--OP>^J]]HCgi%G#c$Me'oPd*3K'?A!Q[OWTZJS!saN>u?-n?pf>ST/b;LoX\7kWBh3_1*K2['D`RLGpnk$^"6=U0_kSU$-6B%&mBT>h/Egp^*4#$G:3#L8YSf%O7aM+!iSobX:6@Z$tl%=Qe5,Oh[W1HYY4D8RKaNn<];qem\mb.(>Um@20bZ3kX\i#!E\3ILn#GE%Wd9e"@7Z2%#?.Tg+oq;'oC:YpEj_ljVSfEC(PC1N*)%f]">i*eN(-SLE9ml!jt%jh"uNK\1Aa`-Mo]^c?#r_^g94S&i(l:#33V$b%'*Q"n8F:GF2>CsS=Y#Z,gUWSP\a)Q-GD6isH0lRuC]Ge.q'9oTg\4.>YI0c@S1mMEa3)KB$fk]"=7=j<"$?[28Qbu_A3i/qb!iaR%K-D.]:a^f#l$@$`=#ffi9mG3r+k,QX=5UBfh>b*,g;A17#tg5n9-WdOBo[fg`mJPQ3=9a!5G?Vu%H=X!>G&;,LfX'0O?u88TBAc;%46Es77r92#X]ePJ[qf2X\/Xa\lg,u=C[it6\`>f):AdA,)Q\3K(:2d!E1B/mf<O?S,Ujma_Ld01[,Pk9#.u!"Cii!?@40U9rJ0#g%-(pQoNjX-p'TY>9CI+YaGlcntRdU4:QlQiJoF,\(1-s@qW(fJ7OeW4Z@O.ke2pe?H#7K*Z$fa]#/I[25*VgY+>Fj,#e?]qH@"t,4%[H0.arbIcB`):`hU1tYP(i%Uin,g^?8a$T/'F`;18([M[K"MAG)!/ee-&E(.;.*biT,m*$*P=ZG7R%89?3)2;BDon^JZ7oec/"M,%8*9_`&;Q:$eu4cN]:3WC9%buuc<V,E[CPN85/o1p*!<3VAYJ^URh;K'Z]^:/+?`@].HGQ<,:IPD0Cd?0f]Afb#u.EPNZA!eFGB\:%W\hJ*DH-ijQQ]5d:Xc:+lNC:s1?&if-NM;X=9\]u3+rLqh=S7]eQ4=`K<OpM"acWD%<rROTo:Z@;K.7'=!(DlRj&mHn:X]ejmKBj%V.A-38r,jaUkQs,%eiR*;Hn,jn._gnUh#Y`G2PJgkn18Rn!JA+cr`5*qN+Aq+Jf8l$'J@'89%'Y?q"6$mUG'cgu9a=JL=QPgijN8%H%[cHU:ea__27#m])4[Ff"m.h%h2ec<=Z5AC@Sn#k3hNA>O9R(^Gl\O/+D[PnO?mr+a7$AY>EBcn8(%VZ!$42'L":B=C^h+[c-P@%,$Y7j9:iGP+#8EOH5+*'+Lm%,\OV^SX)pf;N'5_L20`i"p[ZUKJR-%sl"B@,YidE2%ZkorDC;t4#YP5JoB1<"ausNWR9R/<X]l`=%OHH?7G7lMRM%p:C^En_!P3)gu4tUM[NW:knbEE)SFAY>*:@1soon_%P-J\MM5bO!te4.c^#UQ8<,l:0DLfFta`iSJ`6=U%pa4:\&%b2EA.(<HDk5cLk4EYce48bIgu'R;"lM!jK6<B<h[d:Zo28(#.<!TC(kWuJ,G%S)=Y3D(;T8ZS,r@t\6X+[q=M\q@(+EHX+sj:(HF%.muYo(rIXffK$t:Aplu0gEkPZ&1!hkiVXCH#[L!ZfOf7/Y6R$HQm+D4D\18N:%;2og*EO$c?/tp+U8[k8Y:]JkN&t<kP6Kda<X3A%B/L<88C<rj*qM`%P=B&Sf8W$Y!_D8tQR8M45n9jd*EH4.+b=)8qY64df1O5-4]eOOP_Q-uB#sS>&R,b[Nq9&DVVfo<5_:Z34bn\A%'>t8gA/^Vuc+-C!>!thE:2G9'dMd=Y`RfUF&8'CRZbB5lj&2H"/PcQ.@])1%DkP3q?bR"s0:6T^>7DWCD[.+eiJA#!j(jBX9=3R>%8FTr.7lPk!kQk`\)-Ff[!D;1'K0cBB/N8;%?uW4hho-IAO&hWCT]@G@TeM4q#RsimYY[`F0+b@C1<8;`5Y!;f0gQZMi?HOXif$r=%P<a+oenPni#.iqur1FPSf1rGjY\R^-e#XP1pub`Js716!31`VOKTea1Ld`=^C%Wnq#8ic\RDSm]13c$Y0D"V`dlLdYA8`%,QIomd%@MrK*aF'hIk:r.<N(3I%o?`"e!iV?/4<QhCSS<e2">9IqI#!)dD-"Yt'qph(P>R:XJb;,MruoApTGW;J&JDF(bY24p^iW(^S!/p%%Uf"$dY-Db>T<d=-aQ#8^5Ns6+0hqd:+!nr'ACAXm10dIRn2NYU:&9q,gq^O^M$pQ\HSCdNaWNdlr;7e)/VD[Qi#'N^i1XHYSW:>5%&*$4F#.tEW+XJSm:XB?+DoX]TL"Z,-KH%'>B\FSL2Mu0a^sjWTQ"^:kW%o"JY+@%^Z!CC(ElsCHUFB>biM5nMWo)1i#&7B#m-sZJ%kJ26KC\[Y2>=mC>^FN&eB'KbK_B9qiTFV>HE3]CMMojJ@)`#+^T]r9RiD]p]Xqm]#_1S_X98*ig:/E\pX)tWS,C+C<%;]Fum_[3/%/o1u4f=hH--;pP\,KbFoO;pGNk&\+iC6pc%a3#TN4_Rh,X'X6RY2Tu.?2V;fm<;pkDr=7r?c!T9bKjUfC#N@UhtunEjA?ll_"+m"%Efc0ha)C9@qtRNV]P*qg&S;cBIF`Clcr,]="W2\SgNGnoA!\PF)D68bYqa)bC1<dF#6Xn'ds@ISn'a>6<h\:5%uB&'g(ZAkpAec4%]7j$@XWrMNCsPWl"qYd"GHb`@!r(qiME_5fnZSR5'UH^lb12[6j2kd_eG48M5sSmq'0n\8Rnj;C[?i7njUQ!!"MkPa?+?_Ddm?NK%el889:F>_NmZkr4I=F`pUO:S"+`.s"=eKs,H@tH1<XX8UG;T+8rt-NBXd,7NN"Co1d1oCZS_)d+1=(1W\IH^D.d>$p(mRuOd+SSI%?:.9HGHf3Pk1[6%-'pZW$#.t%-@Ri0\TnE#9ctjp5ml2,PEHkY@S_Y>Y>NLi$3F)fCAV5n_U16OC+[)"j"i)WR?uIuUG;r=7Q3=(%L:k4lS(IhQ-gsQZ8O&!ZE1MJ'q0Sd+G(P5imP'`%,StBA67t=`9=jK\K01@p4K/$#.Ba,i$uA_DgQ=4=E#GfC\1L;'CP8PON!N`h%+mn6A&>V3&.C9321u)JnK3j[ngc=o,"S'3Sn&K0?894YE]%3>=O@Go.!X^r[CUE*4S2K3mTRF0(d;A#Z_G8p)2<+boO&eak\HmDH%A(ZlK0,pE<)0J=cQ3lZ!@N'Mnq0!8UPHA@t0aN2sKW3"too_`bZdl^as.se?b\</e!Da-hqdo1A=gt;MZrnMq$Ya8&[emF)c6Y#n%R(C+q,s1G<V0QP.2"iU0h^`h[!(D)@AsbFf\R^3p1M"WS"5+^/5oAf?kr+a-F"P65W6'p>P"Kfb_C-9LYY^M<,@P_\;W0r^N>K*E%mpu\H+[VZWTJ>@?<eY0c7=<.;hb<fMH&5%lOkY=P#Bs!`%4im7=PUg?n.3:1dT?QRfuTs9@`tYh/^4gO6Kj+DY0A'G+UO"n-Nm"Z%Z71NITcM6(caAr"(sCdX=$`!5%"OD:-c[TVH$THsabLdE/"=CpLCOZVVAiR#k-c@ARtr@j7eW,fH%<CWcl1Hj_YaInBj^dceS%62%MfJMl-pT680LRKdVQkD^,^!eoOh&MB+qoNa#MsD"GtI@"i</Mj4=1D2EEX';em9XCGZ2jSmEo_7D_AGTF@"R,)7i,]=MQ35<Lr(k%:Ieoc3cLQiSmjEQpabiqjrA:Fk>Zo=-"/H-b>!*d^67G7RQ1KB0YPI-9VIsf1p1B)[_=imQ!fa[Qib0[5Y<ab.Jd7V>>9-qkZKV,%ZC:<I0IA&PA*+X>d4.2BG8TQ!@u'l#5[u/gH*<`,7t'$]<HoeeetmH,X"FX!WfH^&aDR3L__+g&'7\prr!)*1foml[o(2p0I1OPp%JBj5>n)18gU.$OQ[E@/j"g=d%)9.cr?)'<H]K+M814pC9.`kLpkm!m"(g\s3@>XMG'UT^D$o+?.9rMlMXmq[V_C>f'[US+S-<9"-%?!(;Hh/Yr''>C)(0fGuS%5h[iYm<?h"?k\kDW$&56Z)C5!NVE7,BH+F%QToWA/_CtkcO@EWaVOpWftonlI#)01sRjA@\A^/ggIA`%?u*Nile)]D3EUS(Arb+QD='Z?/CXDA)G1UH-O@f2[%'rZ>!jj2(4#8_E%"_s38t)%K-&H22?nj?<JJ;O"E]Go"0.RgG>cj!ILb!E%9rAEGe$QD-];#om=C=EGLF]X7UNFB;+Q=^GMF%fh=$2\RAA,*k<QHB;MJuO"DKp`Nq:M3HY#<D3MP<0)Z-kmhTlq3MA@fU.[?]I1%"m///!hO,Jl]Ic*Oje&3)6UAf(s\i^#*+lP2D9Y"Z5Y*1]2D2nKck7EX^,d0KXL5O)e5_+NOpWU36*a=`oKusn9F(U@?a5QFdZ$3%^WGr1pk#I;i-'bNP>/it)GmUl)@0W")+Up''tbN0/K&pPW0Er[/7\B,A;\5<ct8H_.EJVZ7Cu+_Oo-lPU'(bW@3@tbO*[J>,J[?U%F%I"RGh+s;NXX?U%5UW/JmPtbZ`p#!*TS<?Vb,np%K]jMAbDD5[DK/$%oF&ZbX@jr)="1/:Q2s,d8i.T:CNKbi*=dEY-?huk6#m/%)HRDBBd:Nj,LNSP/1Xp5A;`&&.2BWh%?TmQ[gnW%a;[I.[pa6k7%6g>b,W':5g7']V)RqLs)7\N'$VU"`NG,QnZL^S7_K'XaMZg+%2V.sg)Ru"aQIKVF7o?`24YWF_$QJ:iG$D+YPpbDA:#D*F-\dK9\`DqVFa+K&U18ht2Wbe,+o59&!>IKg:60]@d18uqKbL^/8hnXD%"j_\o%]MhK5XcSLIFQG/ok?,)')&<h8!PYQ^>?ak+1EZ`]gP3g*a!]`,a]Z'Vf]UCI5Dd8!Y/P(oO1<XT3u]QC^l2^?4SjK3dD!g%=PFB(L7<nRBjGk)Ta;CJ)HGY;bf4\QVDd%3Q]jNmVf,_OQamEc=T%+@Vpbo1L/s%^<=mnE9b_.gF800J_"k%q:+=.P*G^X+Kr*F;%d'3eg.O%uEQgN%Z2\q#/-h<W?("&s6p]Q:(+ZlbW@Qkq0k(RnU'S]pcRqT@UM4]J'!m-;V9B`7OXFMJO:<=?mUK:lL4t2j3,nek^%KQ[Hsfrl*T)r\:M/!E:VISol,rfh]h%?nu?9=+n3qCjA'Hs<9\9!]i9g[CjerMU/;c&uG9cFktYr@H!^P@ug9\2+Y0YSUgNUL`2n%WXf`dR<\[lA;Kk-$;iH+]Tqa+,)Ugno@@(.3?lLjCefi8SEjA,qtXM%pZ'(q]^gr1XMKErR*p0hPfS+$m?8q!k7nKaEVRjYW[UnG%l&0%Cd/\/8*/k=BTP<^YL&Ki3a\T7Xs2[S[:i&28U>XA=623pRkRH,3r.QS?59P(d2AMn3j:XYPI@/,"B->EYK0D1PoI)CO#1jgN%*1.oj]&HbbJWOYnYbBLonJtY5T2-:thMTt3Gs7":676Gs5qNu^Y$afcN70sDM[!_.)c3@U.2.qW8QuKTn7%naa]P16brO')eVl['%8toQYe0inCUF;o6<<3KUBj_?P%cRM#cOA]XX9uWp4#@%Rn'<3M0%/JWG0;F]OooisD(`eq;REA\$`8Y,8;PtC8^&P2ojS7h=Urib%UaXLaA-SGk*bm/:6gQqmXG;!EBn+>.Ut#LLQH8-Dqp?AGZ\tad%2k[a?F`828.,_r8dS?5TL#60P]4>$ng3^9@Y$<6N;7_[Cc,)4%@V$`#rTg60?[k+/b./0M.-!&.R_"O03qGnC<2(Kuj&@mg%('O/!uf%2$6Z)+T_W?SX0`*HBh?p>C<NXsUU3j\;"g&]H\*s/F-7(s%q5TlW7]0\'=Oi]f,`N#u_HGdD6qd`t=dstcWs1uCY*,0Pg6JDL0OsZ-T-@cD;B6<\DJ'bS78TXrlMRaXWVXd,-id6->_"`63[#-s%Gd$tJf!K+l_&jB+S!gIm)rQcX\X=TAocE9oO:)ppcd%eK4(*UngH^kR5/o%W;.7<eetOf:+T3DcbTWoOYA"d7qkjB&[K8FO(`88`%8t[[s=d#jF`?^kSF;6NJ>EJGJoW[u]$T#V:E'_;A*R+lo4He?k74sLec$1\53jold(6S5M\<CHOXs*,!??6hs4i!d^In\)EMibo'%hLH8<*`J1\+%mQdXT4A=VUm![3@lSiMoq1hmj3YB]KEYUB.$fMj0;g&NK%@4ORd-X=(1J*l=LWj/Wg)s/B^=QpkH:r.=O?3?[3a_%P`<NmAtE*!_"T:<JZhXWo-W.Ma+rJt`Hk-+VcUeiPVh5W7Eb-F4*@$uEJ>t-otKP6g&tau579eVOXXjh';d'Amb:@=@:E;j@FrON%=eAdSLYsf`h&u-t6/8rj;&'WRg4.F$_>_pFnnT,\rS(kL;!(+;+RV.iT'T'(@9;_(3^H$VbA.*24l#60UqH!`A3f*gPPo?;8GW5;%1f;*5EBnCgWQ<&%H%K,[[s(,kk?/S"HGuCh[;\CtalUWpL-$>nNbp_[-u_tq'jNu=ac*)1$u49?rC,LGW-P#neUeMc'ZW&e]D+a4%(]W,%'6f5[gQT2?6DXqmaO`p0ea%k9+-pERoDuOGf<o,A2%'JC@UB3CmU^orC\hZ)3s.mDVaKNCRX8=-=H_[]#'FQO=O.7Q>37Nd%@=C(rED;S=98<tFMX[c/fc3R-q0^"f*pZWDZL),p$obk(^_1dr]<`m+D*))=plNJ@@^UhT?*8K0psB[a6#4l2kt9=EgP_.LOdoph%L)ZlE9[;Ju?>b[J)4q9d+C$r`HplUiL"cc\=8]*NGU'<o7b+6KjX#N7l[o_Q[Qi]5aD1Yos36MQIILE06kfp1'3rGK.R-No<+&h4%Beh+JV3sSS\OPg\Mi*u?*<.&:4/mZ@75TVl"aZ_l(1(6*)0H1.CFJa9<LnYJ?j<PkH._Uq[id^shn=Vhe0?4LA'N2,IZSBPqBk3J%P--b]PUZ?$[3t'b5*j<?@@)pmo[IdiV&P$cPb%(m([WI(^%`RT(<cZCn&INi/0jqnFPo[%AKO;B'Oo1Mg&lBOgK=OZK4heI-(Ve$%6/T7\o*dOq38r_s"r%fQ1p^qYF?%GGem)Jm?B",NK.s)3cE:/-aF1#?XD0c:eQ5mS^Mq+*V^Nd:"@^9`hs;YniSLIP`'"?j\6/b/%N"#3T3H-%,Mc$D,piH]B_V2NFm_LEWa3O9m_tDV;=<!J.:')TSB<N#T=/\N^RqcJ98%o@S-mo9iKGYA>8]a^:j4kd,o=sj:mF2=O%G()0&Atc42TS)>:oJ&3k2<(\M:Z_\6H,=hUL!s./-0h1c`MN[><K6_;+F*RRfn?]GbO:$3_U>5U76uLq")?4Abn'F(Ch"lt#\g$)%%q8q?j:7+'jnZZ@PUlpuIH>'nJSn]<1u_n,0d)mFV*M$o]iY\POp7aC+"]c;Vj8IaLQK%fa4b0+SlRO1U4hpL1M+m=(O&^;#TeQl%C]U#OZ.\epkp#,fR-f1c'^d_YIa!(U&m$hVW27/<,SY!i$!"CEoSHk+1UK8,_:=*th:R$Z%.2&\lUc=a7TBV,(``V1K+Y+S.V)V>%68)+F5cLkr%R\%I_C_UiR](moI$@Z%GS3;jV?<UD-$tD[)DQQ6Z$!jn6B%_Ak+i<DgXnAILcHpVIA5(aD/Hg37aq.8QhbY(cVJQ2%Bt>tfb^/5kbB!G*3oS8bLB"VC2'GXkP)b>!Bk$$!E[#$!U(Ua67^QW/'k7)n+Jq`/0%gV#=nVW72T.ae3,gnJqKD!7gME>QKP[C,%S`a39d,jKm-laX[l&$p[`0t'mJ`ob;RBBf9-/3NLcC$,9kYNeQ++1/Mf!*E2.%N@R,YQ?DLH/R6;JH[s+h'iNpDYdj&-^D"EcZb&%$8nnjia1_1%04L+]\&0i,jT1jArmi[ZGYd<mtME*\JaR-Q,iM?Qt2>K,ORYaM!`-a+)A=-5n!S$(dt'h-0c94%j\:dW?s>/Z&pR4%$f4kRWf;EH%>\S#VC)Rl'ODt0JcQ(76\89<Y9ZNB!N/2sN"Yb;ZY"rpj6EJO<+=&lI"hWk'IW,tJie6)7o^t8FLs0p9Tism'_ku/%]7[6IWXWTBkJ>^O?e59%Nj4PFlXOUa;22,0=W)386e2_#jda<B>Sb;,'4^']cj)NO&tP&qEe'rHIi+5@:E@/V;G6KNZq3QOGS#KL%)M%!)+#cTXJLQ%DqOMEei"Q_a#`tDI0H0;A:r;\6bYF19C(rE:3V1nA[IO*,8U\H]l:s6g9N7cIAoVu[ZqJR>'3>"rK+C3/^9jq0%G*"h_f@iPK+J:9_$\_C6;9m-[k74.F,L8;'5U[&[.u3%jUe7M[LL?:g;ILKkXE9eb4`I@8GpgX+B=8\(kTD/b8<`sl4CV@BKJY]l%c_@-!!cW$</bi(L$;d71*$n*,)Uqc]O"6rrT@pc_[EDTXj[l?]7-aGcEOSn.M>9.aI=/s>?;E"6MS4#iQ:g^VfAOd;p!K*JZP]KE%21oS-IMDkUe5_I_=NlP?^r#%acjQsj/<,fkf@N3D/n-I7-8/3B;k`kDMgFJ:"^/$^?hlMhcOeP>Ua=S;>ZYU[K'+[J`h6#Dl&ckR%[VJ`.*>Y69jLl(:.s*WM-0:tDLr#u5l/<_H7.2=i:OQMVKAGSKOY3P'J5Sq%ihm74,1?uY5Q)d9*m9#;7YELTVMIbVOp+.8J[6G<%?p[eQg'3<E#*=sGIR7KH0n"W8GHT0rCTB>qBq$N^6+f>RB3Q6KIS>W5<2#X+gU["5*.V(443!W]p>(L$eM19:cnd6$V&<["h1C0i%3-N0G/ra9^3-]@^RNSLVSHT$pn^N(J.Y=`8b&N=&E;)b;:-ut:!,nB^8m++A>2Zb#0eDQL4RO0e+KRm_:LZoDcgTk8k<Wr6WTf0t%U1V!/9G<O4k$mNnZ9$A=7:\ZB!&?QE%Z198r@^TqJ_c.QCKQZ%Z/%uH9/<V-!elJ25Xn@Hm;.p;="rN%:fA9TKR'[K&>8AL'p;R$%7H_+n_ePG%-u4HK!A]Pm%GK$8Mrn]YVmkk^2DLjCAoH9Hh^jMSe<0^h[7;]lANql5INqs@kQV/HUgX/(+;u`&-m9ChgCUna?WbgC%)$jq5>ksq7FY[O\::%AOpJa+dM0=`TOM#U<W[pG+3?5htnM`6Q'7-A2NXPI$T\n.i?Ag_h5$"ToX#(_N,A@?/b]PD0(-HmT&oBQa%023VARuTZmk5%LTrY@HWW:P[cH9o%\+VS[,b.(B:)]js48lCkjJGY9Vafb2ZY2NK4':Q"`Q\tGV'1u$r64nrg#:_&Fc]5BsZD9P1%;\^8$d6G%o9_6MLpq!L:p=aE?@\%I%0>[WG#Ull<U!I7V&<"3@WT\@Z4%_2AALMm=WY)Y%oe7`sP3S"8eUt(KY$.a4>1$f2s,*.e%Js5YCTI;!?kp4Knr!8F1K3FsL`,qk#>W+U\P>%`iC=/dnY_&oC#RjHp7*9'K/g#V6\0YRFXsJMCWnHW#$"2P91M@.GA;!c6A0pW)%?g!S(,u&_op]:`=S0jm=156gJ6GgF9$e^!lkfTg#^E1Z1!U3[K<tWmr0rB)%\jBfuE*NG7U2$rSI'XT;-B[/eZ1aK)DT-$pKuqR6%7l_Q/rSB)-2,GpcmYNYSXnW`g)t"1^)bAu&#DoUu^4W\Z32!G.2DeVY75mb1F\,i7Q-gqY<86Vi2!U`;=t=9@TTqYWl,P+r1ZX(;%>*oVn9$8!gTOP,$3g^J`NS0OG[g$,<]hf>Mh5a""k`?`KTlCrNj8Zu4&I(9EW?='H.(X3;Lg/%j'<>+=k;gbf#MM8<0EM?mY;&;I%"]L1t('nWQ>$$dR&;<tdLK874<t/5k<g.$HTk\n/Udd(4'dgt/TKQ<`.SWTRMfQF06fHk52%t<FCVK6"Ferh,A3d.Kh_b^GdF^kp%K(u09Ptbj_dLDUi1EaQk12YXC%Aq%icIi[V,V^`PEo)<h6]4HO(,?S/i9K.$D2mM'XC%-Em=+rH4[!0uYE-EqOP@5KI]oWR2ob(-%D?b>2GdZJr_:9<N#k$]EOeqoG)nnIEbcd)Ar",TmNA[)r^YL_9n9TU[4K#>PnV?$Prq-C@jAJsH$fl/h</=g(cA6sl;WaH`R=Ta;%j?b:IWD@F+&ipuOr2D0DM+h37S11T+;b:i;2q;d`GHi8faX[LS3X%9L91,SO0(EU_diFfY!.+N!T)ksa)(U<&pC1`^PZ9]S/rjpp%_51j5c7f.?\`QQ49cJ/;S3shV<OTEa/(4l?H4/N96CD)neuBWq6t'[+QJAAf'),8F%pCiR;<\_.^#DB,e69EA2Mjo8W$e!8#k?Zs%h_]s4e>A':DJ&8$/rpMBgN'A+5+6-5.EPXfF7?X0#UJ7'0uUd-*>qaGKOf!mf&?M^/R:kX'$/!f+1VjA]!Q(K[HS[:k7S]^SBRKr%3;Qm3>t5f\?IZH"]ldqB5#ruh/\@LkgWPOEZ5,I[MW[1ReD(DPo,$E2Q@TG[B-](s/B$f(W4@!Hh9Egg]L.6%f/t-DHL"F2]dj<(%15p3f?5aGT8m9ZG"]Lb$g2P;uGUlVE_!V?9Zs%.CBC-o!+`!e,LRgDa>U1>f4NJh'o]!lfA+rsNqT;WmnteGZ1>[JL@$VX^Hp*^a%9<#%;+l>[];nq.I!;8\[q88&b.S'dHArN-mWtLR"hA62'01ngaZQX="R.6?5AS57ifC]>A6OAQKj*!ENk#&EZpGSd4O9FW=SaLSL%IO7$RU4FXDcQKNh"=W7Hc\[`?/MKq>Esa4i&Muj0*E.2Ad9h$%ER^5LX,c.55Zo-.F-A<@:49UkBar*nk%(Dbmm=:\S3(#nS0Prh%DQCu,U^%HOoB85X.[o?CX=$/J6pV*V)t;fg2&;M_G"@c6NCd*V^Jqbe65@[4O8'g@AAps+ic%%1c85F'=?IC7Sp?j6lI<4&f9t\J%Q0DElR\i1:V5[ru`5<X;1:X8XeD6CXO<Da3`_\[AUm[KUE9J5naFJ#4:o2"!9SD2"dAJ8C@.cBQ]Z@=mYE,RIiG%nT0?r=\)7a`b%d9tUdK"o94,Vf!r@Y1VUEEj-ZV&^&OFTE&g6.Ta.bAS:#.lLUmJYY:T2_c`J;L^T)i<EDQD,6:\-e#'jQ0J+Gl>D+oH<I[uJ9s>d%&A#(0S0jVroC[RP!m<OLVT$E^K7_H:.t_>]+LI!!cjOL2MnANUcA-*g\8'dFDU`(#DnE;<K"I/jlf0uch8c1F:pXM5&0N))>lc_H%Zmr@QYTWEA0?(:FoFIgT[PJ94HI-ndlT<EO_IRF<d&+UuB$YX3[ei#$r0!NoPEaQG\][pu"7XI6Y]g^n:3q4t16>IJC4_Gq/t=]<%j3.7,J.6>+WR66sD.]$ViA(,M9Zfrfq?\ogF.=sgJg>]_]q%d@"p`9jF]PgS9]3KkBQ(]B*=L.))Jics9KRsZnXa#kr@(DSLY]7^%4_aeDg`I97<P(lPfI/p9RM7`#%o4l6YoY3O`^#Vl2M9W60e(R)!.t\GD;gn9>qVpEXE1%6@7n\&j&<--*cK)B!YnVd2Uq?1+o0]d%H5RMs;5HjTiSktE?FZS!SIDSVac7s2/DPeB1tiURns_\X*p,kY@P!.6FD'%);Im0bM;5=@jetU7qlZi)P;GM_#K_pZ+F.E$bnad'%h#mGV.Hi(=];]_iK/lJNZW3&+7e,]57t:`G]pkdIX=BR03E5&oNd<ugOskDb:Vl@\+`l%u0`pW^+ML+B1K-tIOX0[Bq$M`!bnZn5%=X=>ij.,I0=\OVqOD2P<(EIB^??]GB<gV1Yi45&p3_f2\#;\rW_kjSkf=/%nNGFI;U?(>E)KHPo%lhK.EB?gND?UK)0HdHjK@Hen%@%.RMht.%UWK81:1i!`4*($Y*.M=l"m_YIL\oa[.oMlAje:T$h/==%B.'PFQA:H2VW(e:UH8rcoA3r_BAVoE!6bI"<1^t$aP&Ru9%,-[\MTf9q&%'<QuOOXd!nVhCX9i't?+(WR@*g9&-O#pZeAh4!]:fc7ON[dIQB.6abGn'6XRJ@B)!P*6q/Tl>"^ItiQGIt/>e;S%8%SFaoKJpr]T.(Ie(2WK&ST"HDi%3i\cn7k7BRk)W'<q1t'0)jZ3r4<L72t-k:U=8u,!fm7I1DG:D0&XlV<._8MQ$]!-.4?,,Q:j.Z%TH%RFQK4ECHUGrV6q+5NiG&T7E<S9q+;B.K1t%jd'"Z^j:[kAe"%0JMH]c+YVMPCa=/8"`%=^:o*8GF@Ol2g[qcOTH1/Z$HJ7t$j%eVZ/)/]"Ik+[104Tpt$P_-QsHSe#N]H[A:8YZ47Ps!hs!0"2c27sV,3q!4\95Ka"14$bMm=IRa/h?kUuLJ:J/'P$S"VOj.Y*jc/-%`mZaZ[:&]M2HWF<>>tDErAeIVQQ,4k)29'^fe4f899sW]Rkr#A7!ppP%o%18E2f!4*%L-7k,l1O"W$qW\"#R5&0a\kBVK7ei^tJa%^utSe&jHoK/2$W"+gtneG=V5;WbDm\D\4EuSt8#q'T4c]K(9+Fr!_Gq\B$0!&DY6S/q2fZA,OE$N\L`+K@2sSmH*_,,!gm"_!@1D%pj2f`=5(f>=)":O5eMq\Sd\/&(hssa0Hp.gB`aUe:t(l99^#qI4i'G:Lm\1\IL.EZg3GSr6L;kVaag_Hf,Kg(1JLOU4J:SPD*n5=%H.T$O]?*kZ0d>Al%#[UEC-ci5U(bm+rXdl(^Og!W^]f#K\Z#?BX.ghM5tV?o=qE$KSkb9Bpd9!:s";uSQgDIU\jJ-U!PaQdfE4rE%NO/4X-/'=#JsYHKDA\[k_Q]Qm:/EY&n6W\++(7BL+D"U6(u*t\CF;*;#Lp5OJ/LIs,:o<`k]3n!"i2MtFXPos!QDcZdF#l=Yq).g%")\Ta5olJ0@ZoXMrRN^S&Wh.t'(2%$5U+,"[VEUY"^sZ#,XTL'rXdl(h`JhA<nr8fHI5,0&RM1CG7[R"2ZmBY7$ee(!<L.P2<GOR%bQecT<t/m4bU=b,mCVLZThRIGWZ!c"j@*<d'MUC9</=3],,2,#fL(?oVP)F<)FI7;3&j0"eYEI##$@9fTgMY^dKXO2;DfR"S$9V:%'7aP3c#i&6o$(Dgg?C-(?:-N$'<!3E!Z%'QiD$=#_(>G[.$,^B1+(Zrbh3c:n33kO<a)9f)Io@&gCof+7osUT>'doZ)t:;YDne't%8tU$'VLl*/;g$K<>[QIj!>0Y5dS;'K`Q.)J_6LS(GgIKSS6'P08d!f[Ke>l^%Ab6!gCLh3`/R&%30>DA/hO"b^>=AWR&OEts+#-:%I3bVbP.ObKB/.t-&c\j??4YDeJ5uFX[L.MQr-bK1#^h!0Q*KS9;f6.4"k$k`a>pM_56SaEf\^9,D_#<Bh-kP(XSa$$Z&tXZ:1(ag%)1+.U,@bYHARoVW]DT"#Z)Lg]\JN-a)&[dPS#og)8J9t(^71M8Jqco*E]KM_@,R0'Fs=YEJcR=*GZ2;0Zl>>Z"'YMHK1ipb/St7Z%NcnX@7W>>pIrNN]6/:<lq0IV@C[c(s56QIB^:o_>C.8sN/<Z#0"8q)o3-\ke$1CYM`aF;fr*Q'?]ON8P(+b8ijU(5q3nJ2`d<W51%M1I"K.#H60IRH3QK9AqgFg2/te>mnGAYaH3Ta%:BbEDsDbAOo,4p2He_i*&%*A2!9p&udr<Lk:V,j,oX+?g2]ka1bB6\5D,ANJ$i%"kj:%-Ef0/1bCB?4p:UnFDAK.;t=$_rIUI)a<K#LB"#ok_3U;n[,#!+++o[)`.$OY?-UE66!2CQeX2ag>(7%cd516XVYGLG0-Xem%@6Oh/.ZNCg+3Mjr6$AKAdl>,SPL>)Ded>#e05LZ.6U4ruZ9)O[-kr4=ajG\WTT^M.%-W9P"\8a!1hhQ'3n(rr7]aB+W`H^)T@)[_%l)/kT<9AiZS1[-u20!d?k^p72i'.^MPr*\T'd.&[%Uf';.9KfFZO%]i5\7K'<17PFKR7IMcjcO7.`r`L(+d*&C,jfl^9$od@Y+$k%krQ0aA/u+5ql6>#4<f:fl8oCjHkj;\>[udAd-8&,;"?8;\H@#j=;cPl;CG85T%1BLO!C)]!<6l!P9:GaTH6as<6dfH-T8Ys6mag3%*m1C*_agrT6L$KP''Nn2>X7a)(h)c(W(ufG!d>,>+\=(HSYR&;N>`)@_,<>`]3&\-Vs:e9&<Unrb8.'n<"&KX'Bq<u"3gFhPVBdU%Qr<.b:$(sufCT6\%fQ[FgO<LBRj4N.7ZeXjUG,!X#rZlBOR#ZZ1,7TT7(@m%B;DCEA1>=YU$;/@7[RUL=l$PM_`((T0dmr:UbQI>%0W.4.0OWB@[u!#(C,gk@-;/%r-s'jIkj;Goq()]+p&HKuM5l6OFk,L5Gt+7f=SdQ<A8c)#T_(P>%uJYghD^=0#'6/CM?^f?7,$Gi%/;rG,]hUUT@H<P4[-2Do+j?Ob'X_V0&N>I0oON`6hrk`Hk\#]D67<1"](s@R^+0gcQaIPP29u2]eJtu-$Ss\4.m^mbV9egAb:Q,b%TLCg'oJ6eXNFe?C6N98sDmEkUNjOX+J\Qgj)a@.*cGNP!D$4*XWI6;(&`B>e,ddWc^%g8G1S/YN1Hj/2];doRS+JB%+jGt0d:bnK%_J,FMe)%"L<bdFa>gcSX"bj(HK>$_Qjg/Y+C!nUlUjN_bmqO%'cHYS)3Mo0jPA&Bf9U2)XF6[^TUrgDLOgLVO.A*c,>`U7iT#<%T%-;Z>!+[qVh<IKC>_J_P*HIWuoPP.5:OjQ\J:+)c+C?8!o",p+>T[`<Zj=J2)9@=<caWTe(C3$U'2'K*8T`rN!I0<ag$[3sD!Q;#l%8og$l]8>$K\d9T'YM0l_Aj';#V-MnVkUhu*9*!1MVu7I\n'%44R6pfqV,_RBO)rF<T>/Ng-U<YH.21=k"OsK$acYACh6la=0khQ=%6C[OsJ6)JbK2dJd+:0kGE*-Q>;\,>5'o+f!\df.BNJ]M);`UhW;?q,aTkW/"X>PpS9CKn`JfouAA[MZo@Zu2l&\n%!2Wldd@$s_I%BA9U'ZGf#\f>%:@q=2pc$S_ZBP--\K7PA0nP.%20?Z6q\TIU9r[4WOKj:(\-:A/j_V8GaG[>$YQS0tI@J_gn5"FT\am$c7a5Gm6f%%,]#).4Ga+P$MkGfNfsk28[hR6^HCk($M2J'KcRc5qh"BTb7SU-,!).+tD4U!d6[g[CAL6kSs^+cU#p=ST(up"&`#,O@cn32Igs1%r*=r*f\^sW#n!8V+J9D9Jf9LdT2:3QgbB'D(R&sB"A2dF/-J8!+V<uW!WCFL]:4#+O`>nFY%p_!\kD,Q)?<CA2(o%Si&Lc=HGOc,%!mWN7LuITb!C-\SG-$:MlrigdFM/$'%Y9/n)!K"8\D"n&.4Ga+P$MkGfNftVOH&RpKBk>=>KAK`Dm(%Xh[uRVrM<=ar";fFREY@9%jB]bO1FL[!J8#_!;Z.:jS!U^qY^:0#?BfoP./c:^8h_If3Nk#6Q2W16iSWm&8JISborPNrf]rB]T9Y;2lc;oX&MHc2<GctGfGJI0%2$j>fW'^J9MBj\4Np@,8jN_;M6;kQA`Ki;k/mZKu-+L%.Zq20-_0m6e55)k(mMHWEpfjF+jM37HPpJtPGp!^8O-I0pGB=r.;%7Hr%6n(>H?%A%eS+bB)6)8T)L/.q@D++139KA)qZ"HNqVal;EfXO:QDk3[^,G'rOY61Q,[m2_>Nb0d,OW0BcE'.anX)F64%XB7+6m+&D%6,1RH^(F6c;'bmoZSPMNJ2N<[_(b/9PUda\Pj^^B1g5=(+pIj610g/3h&-VtclKQ"G`/C`=d@VBN?<AIF1:p4O>0=?EKqL-C^jt3%.Z'9-fI2RIf%c>_A,P"iPH6i"VWLMD@5,J&nOAe$ot0p%7^Amu#Nr:Co=rtpM6'Y7:XucLPNQQQF`.3-SX[8&<SiLWV$rHMFW9#/%2?qngq&KR:a;kKN<?1R8_Mc:bj_nekK<Q0r>IuY_S>e3(Ok1M,X8X;`nn140+AuA;8\[iEDGqDm3\3mXSJ=[K'X3Va'i[I,HY#T:%!T$%>OV8io5+eeQ+9Cg)eaWk$A;?//)%)-;A[9HX7Ouni80o5VP]_%n]q;<CfY7Y/S?[Ra6E`b4O)',r2*MH]#"4L_=US@U>,Z"E%-/cc1mA3^@lle_-l(OCuT>QO])!]n?+87L7pYjmTk%#9"&i3N\rJhXL<Dgr\P2@[M9WoiZ5ej@E^J-8tV1Zi4hmpD\]tGKnX/qJk%P8^$;E*>XQ!<F8=E^h8AK(Q+%RFX0RCrL`2+sg+]L#/D@AlkdgIt)0'0fUP14+Q+5ppdWjVcVdm/A=7A^lSE!6AmKlLZ!H2Q+R`4%Bqm'C:`66sV]UOW3AU\5;@qKWW;m!]!:)aIRYa(]Q-,@g@4H"A_e"Z+0CcnKjZ%cJ]M$^h*DI1MZ]-h:O=Q_K:_84X/Dk-r-u0@h%I+*"[QCh^;FeL!g6(>^V`u>4@i<=u@X9\<M6:!SWh8[6Bp0OpNFToYkY_Xu+Ukt&1CEk2PWWNu5U.:m[_jDWY6QtIm>RIF2e<%u\%p)"JOU*>'9:o-R3%1`QJs(&WV;=2F_fZ*tg_2CG;JAFl>OUal-+QNS5A5ZGAI)T&rA-u]DLb(93pD,$.=]63k^C"h..,R"gPL3TG%Q8'KBN(&eM1;Y&7kOA\1VncfB>c*];reara[<!.(:lZb_qGKe.\cYX3lo10tBu8?Q953-HH5[t\iC+<`W(i-e^u7<#4U4gC<SQH[%s,-As/IG<N&7gdnX?7_r^?Ep=<Wu\4#*,$@W\XR.#ChH&;D.MTZG=1;@HW](?iTG!$=t3%>Te/0NoPh6J3bkgfPtC3LJ\5?N[)?R%I>6Fa^XW*eCAgA`4m\LalsJ/Xg?gJVrj82BQ!gt#Kup6_?oV((n*B;s:_gqmZ;80I(hWZuJL+j6[ans.\_:BGhC-I7h\u`o]s1K.%fo6G'g5b,q57jQ?g(MX'</1cMf",mMQe+DZU&?o1SL.@R5n)'Z`Lr!=,')l+*46<L5l8G@ZS6h,-ph4nY2YO]T4,KpU0gF<5H0A$%QZ;7sq]t1,'(snW'_<]7@Wn=We='`+pjoNK.j$.$g\*aqEc(4iP+C4lQ43P0aL64Q-l>"j(M`bpiqQGCl$T!<EFXtYa*1\B:EdXk%AL`gOB9$I#*-,])SN9P#qtAL)S$m53KjRm=A5#T"3Ag6E*A"uIK4K4K7n$6=l>XDR\<\&D#Gf.,_r"f*$9Z[FOLFl^Ukc.rNlA[X%DL'#$jSRUL@1Qb&?b7"fn;GW`/(c6u*GUe1d-Yr2q,,4cObCn7rpH%`#opQ-J4UfP!*UI3hYXh_KIik"n819dGth\)kOaWZ^`bqB%@rV[7#<%0B[ZPn_]aAr]'s*41.OdIg.".Kia]"<fek;fLY@KA>YlsNDAGBr".9IDH8CIeZe\E4JlO"X;>?!EYSWJcq(h#bPUmcUg%QXBFOB-]G@14N<'<ZkmgM<1Euk@npf[''>:"qhT'oqNYK+EK7?b_G>4W4*rffgpZN[Ob68nIC5sW>J;Yn:m6\Nc.DlERZ87A9cNo%EM$";EZ7]sZ#ZJI;d^+#-57)l@e:X5:-\bDCgP9FUu%sePLDeiPK$^ooQ6Mj[#Om:!ZIgiJhip"ENR;Xg)t2-_?*qfJAHAsb/kn0%f&d72M9QL\W8)ViN]H3pRK@=I:H82,QBr,+Of=T`Z0=-KAq9+BOi<220:mn5<1^!)qDDB/.Y)>Om3;WLlDh`_go,>\%If!n#i%Vc%BAG7gNMR$n1al-S7+i:8p+qZ%8!Yj6h$8'EJ9(`h[,pA!Dk82i4I9"lPVVme-1pu4?-r2p.qPP=j?V?"=D6OjNmc;=gGR-e)uti\%mDUaoo>>(+!jt).>`+fX[RQ0Q7obYYS3(%P*:tr+bn12_[B].BSbh9Rs#'GPPl%/2O$a&B1_,W\L!Xm;)=)$o2gT0c+=)mq_/srh%>!"c'9>h:k-KfU2N#EAg/c6ko;:p!)U@nh=Cm<*(O:J(KBDMW\3Q5(O&<aa@TY7HP+co?N;2'Z_6i^*@#=BA8%)s;!r5rQ#cUNUi%`tf?trO(/,/P<Yd+H=,@.Uo:QTYPm/EAI<'DGZ3H3c(H1%m:q09P'_A6Ap`..)l,D1CV`M!KHBHm$W-ke%-9h3*MK3Y12[/Bi+Kf%kcfi_KGKUl4ta/gQtI4j%]iUhSH"'0l^K%9Si59(8A7F8XW^K6%1^bqO^2D'ZnXZP22Vu8B("N^9r!L@)*BYV7A)]c[S;g*A<V.X%jjiUahi;qIhY_OIfE9lFlch_"b0YS,fP?"R!cRgqpiEn@5;J.mM5(UeF!MMoUV$XIS?r9X6D39@GlWFOT'%Wp86&Pd2tUs8MYIV8%''sh0o2JB*=u/]rrV#5:A/JUPN,&lJSab.oH;t6aDX-S4`n51r`p8s,amfEu.b.**a9OPbl9SsaTa)sdUJq-MNHfGZ%+g)kKNGdb%J`QKZ/-u#?fbtL:\I4'mqaBt_],_FLmMra9ZF2[UG8>V,1)lU38qGl63j?f_"t<Uh?K)`Rp\n;+aRR$]M,;1E?X7G_E[=+NSWf-X%Sdq/dqRbW.6ElHE[10ZQ*N7IjCR^)@Y90+Pq;VY2aN4sXV!3`p4"Z/L-ph1T`rW?D?-RVY2_a7$)jQ)phM`9q3ge2i,O!n*'C_P/%&uE`i+"MonK97^<I!`lR08!qj5L)bjmD%!tqEOmrs7_"gs0)IK<HN_((B*TD9'$$C?iI7ts7uUlB$jD1,6'n]nkEc3JR=I[TV&l<%gV9"feF,06e5>LB[hOpJb7H+'=@&IUX]*;dOSjtWP$RD@`IkJ24WK8p0R#RdVPLK50sg:?q/RGe,\Q[a`IU!c1]1FX21p(UD_E0e%];c*i%mV::+SY$l/h5&gLC;Dg7T5t]r04Uf;\ZNhNrq41CbSTu=@\*4e=f<j7og#mF?MGa5cc!W*ff,,/_6:d\)hS,pga!k.oUF4%,7<86j$<EInk8^"!Z_gP#<-qYQRgjkO=?!KAo6UuUciH&UR=u#\#)834j!m?&:kEa/@4**JkS_uZ?oR3gP[:ms3+?DD;Dc#;SC`)%,,<.IUTd,p6uj.,:o0n7O@@!FhEt$T"pS=Q=W#p2Q$X_jf*R'@(.LgPK)8\UPE_#Kes:r3T,n^#>\hKuS^1Tb^rSef4-!'jY:>O2%?l3HMJcK6a<jRRAfq@8Rb;&2?P/^</Ru0BK0nMXl<"V%aTAc"?7pC^-r\l0g\Yb&X)ioJL,Q?JMbT'f.BZlSPaJMm?G$s7f'^lNj%<)*Ub&-D86<UN"%;W+fa]1m=Fgou!k:keJ&g8CE(lbJW6KRA-da"M;?,Pp_m[er]oquppt+rW'5ar8Fp_bOD8bqen&D8t(:[kjJa%]XFkAB0-eu.`^PVAOB-o2GA;'LLI"?+dEF<QV(4e%TL7(J0KZ-k^fW=pTqh*(L*[n[\;M)B?!ls1h?olVAuS(Ap0+sOcgTi&3/.]%Tdo(Z9G?l+:)ila(5.5u%]J:qV+`FOYa1C@)L:NUKR>$;+>ga!DpW1NNHt*',bEB\L\XH4V8u,[cHKdLVt%Q;>=$VQj:3VUcpC?t%N!i0FM54;$%:Z(0>c9`A#Z40e=/a1@V&:hSj/GknE2"V'N>"!g:6L@3TooF.A`WKXnUXCP\X!k>O/6o@WOS3+V4]kaf!@M0br$5J%&R4RS/<FYO1mKt.7%SAom<>:1``dO;s/C\\*JY8S;2d137$#gSM6;OY((k+Q`*B:3<=pYmj'YbPi+ik+\<Ac^6nM>$M`#Dc_E3R)%8Emk>ZmgD&TSTYipF>ssn.=*klOolsPW5lkb!7:eN.FK1Ai<EqU^TnZPH!%_j'IK$AEoC92;h@_q1:5hIZYW%h#3+2^7n"83S./(%4W:M-BJ^s*e=$JBrj8<W+"(>)qJW1)Vhc-<)G9)UV1_rD?k(3d!QC1#D69&I#*oKPn^<%m'NI=U<a.#MY0_"LOU]']4JR=A?(CSN%`AbYi!Y%`*:aELW(U!fq:`bVO6io"p6nZoW06p^M+Nl#fjKVq4E)!g`bHR+?,>gWE0jVh^FTqNeAHhgc.MZp$YImNEcN_i=Q%I(q%"tO(94!]efj\05YOKhb[;4"ea$dt'0pbV_%'5]Q-JbN"%XGgH*$7R;NGNPiQpn!H.^:*!m.(Lg\glSu6]::<%3fpP#5mF(h3G.j+%nd`*_7FR'iW.pt]G=K72c,#PaHlR6q7P`/tE\3Cm`YjgB(GT&kA]DfX^(`#Qi0lK2+B`KQH^tF"jMKN02$5;$+/sdUe"4i&A\Nn(%V?j%LU+&MUVgoJ?dYDl*;':^=/YkY)K].HUUlfM0\"J#+>d$kb+Kc_k-l]9a:?oj`.0EK,EU(7@rrpQo\!X0pPlt$jbMH/G5:P$%%7m<:QApodpB<*5MM"blZT'Ju79edC.5t?c3q-8W[Me&ob]$hK4)G)KN8VPBLJ\OkibakDJVbZ'niO-aq6fq9"$IYq#f-;1U5#U!s%V^Pt)N=#>H?LX'b7>AhM"dfuan^&KI.V`Gu.`W_/:<?';N6j!1@XoO%s/OI#@bLH@c\0@i_$\muX%%g_V7WaF"0?iLcGr4I)Obp[%L$e\e-oVlh.U@/'Ll*uFNg6IY7W"f]&opQ_Km3#!X,;?1AfokJQ1IPDg-nOi9O@7cm,J]njEZ2$Y-&Ed\YH6N0nXA+hhL8qnM38s%)VnuO$?EXo/CV8W9d\79]T-W?Z4giGj(*9jA<B0WP?2678W9./]aR"M;*GZa@e*q$60g)K`g6Bbi@;)5%PP3R+mg](V?X_Zl6/t&%*f9TL+uuAX#rPa`NO!<p3(N!-)!,GpPi`-WW0&m\#$0HNFbJ&0n*EnPA'SQ/5RDZVT*!i,PN'"h6oF@JD<l/(P<"@O>M^/']M_;1%CPRg)`=aq;4*b1'j^[&nn!&3VRK4,?11R%H^pp@?XX)W<,@#)Xr:9TVT0K(]rq/#X6n\`S6^ZPkLl=<Yc:nK$8j#TT.!:)1ScV@&%fq4A_=c_@XGmSKcl\:W/'FAe_V*o)QqdFOg\'[Jk%jl8R1qs@FT\;i%BJU-%oF'Ms%nBrX[M5RG$L,;;%r3C14:iZU0j@$tEsd#f%16cPe:h.L#d]u3'^mfH\R=mko5WQ"dCKnl>9m6eT:K4@8`,l[U#7:5X)r,::TqW>FP?=O>p2J(/\I',B6MX>q:Wc<gNA@J21/f[J%KIK4q'7.t1[(9)\AF_"bEQ;XP'D=;G_\c?E@r]ha,\;/>Fp#crY.'=YBFrSH5Vttp?ufqE(F=`uBGEopC#b)9aJD,mQ_AA>.!%kE%1F*WgL\s6#Df)<*72uWd2f`NV[hL9\I=/^9l,28m5DKR;Zh?U@/?S$=<nJc.TqD,>7r4.a6?^^O8E-i*6#iEuKC@.Im(psDbA<lE%Q"9dn*^;leZrH;D)a;JAo[iK(T=h[`NBJ!7#b6YkedH#\i2Y.dr),IEgMe%9=g''M&]@iZD:VOche4ObJ^;igC"&ou;3%qf8*#+!%PS0C2:ci18eTpQ5]ul&0_on:Rk/f(<E@o7Z\.u0")$?dRVu.T@W;mkna)k/j8Zj$EOmjuE<GqShQH7g"J\hX?;j9kJFQLk#Yqnm^%@RB\;Wn[t%%cjYFJ^_cZ*X"c<'49of3J;SinlDrfK@D#5^l3WYG6/^pYLjsd6?W5IWUVs?![$u+Jg_VSiYn?_T'E3rF#lm39NC:a%6,ofi<Jq`jI,Z&dY+(#)#V(^N.IbJofBH$iR(k>\r/UB]iujsn%Yd@gVk/KVIi,CknBW#"BcmLpdOt\sX%7M<Z=lEJWaW7<:=+p*%[miBQ$_Hi:b@(kY,,U8X5>mH4RXT`V=3elRj8E],HZ6i(ckGXQ[pMI'rW5O?3_P97.RLrii9W]a,L%?+'a;n3*[3YO'I+8fl$OIY%6A-0,*g84pJ(?>&5.785Q!W6aE1`+[1E2J5GdCdOaa/2J;nj81*cJ@Z]en13_'I&>iW.@2I.>$hV@"+YI"1k5O"W]sLm2jn[_M.j%6aV]J6:.X.ab>88;0nldJUq@":?4#`.&(`e+Q?CYE,:X,EVe6)%"GIp;b#URl54keKk\]GZbK1$/P*ML"&^laONDX).8tGIr/&AC%+#kEFXiq>)JbGm`_@>LDK.m)uZX81'H9XKD4bO-7W]M.%'%k?^LPqSD"X5GR?6#nC4t^5.%#+!J`f_lY."_T+cVa%FeD@rm)j6X>%V)8c\YAZ'(<;IXP;#&[K3+bsKHtLpHr@`+ABBU.[m\9&Qkt](hB>=AB=nS@E1<s6o?q^pNn&#_S9#LDU7:B<9?4KLCrUt8`)/h4C%0sZMBf2HVk]j1b2i.GNPH6:2JGaXNPke]]V'E^;9esc/PQ,k$uqN(7%?`-TV-f)aPJ^'ukHL^B"S=DM4E*s`3]O?_O"&V>eRJ],r%Dc09c5dW?4[NK-:\U\R2D0V9<^>crY*Xo"f2Qi]M\@_6lORhcV-bnH;E1cHgZRYmb\lX;H'S!s#J/]_,C;8Q)OJl_W7JZ\87e#/+%"U3ql@1('pAuP40g>KR"o&Z84W7KN3F@*?O/_+loH\6Yb?q#\(6@3PmZToQcQH*L9A`W72Bc29E7b]/a#o0PWNFWa\]SD.KV!_=2%mB\02N"tpE#Aot/-aMK-Jt@48Y()$<JkbNgaGJn<#!O$jA`H$dOMRWCpSK\,I-F02H6,'L6.Z$SlC:0tpPe1;*]+5+$O:PE4Q5?+%P/b"aFX\h$O9^n0pCr")p<,,:c@'?PN@:3Tmn>u2d5U:O.d:-@WZ2Stq9@7M$*S:BB"6Dgj:+obY#g22%f-=hH,u1eK5M<;(EV;+%S03s\>8,#J8EEeEnrCluV1e(HF-20f5t%#*I=-P<bHEY+\B^0@BCc%%OCtIOOHp'<3<>tNC7IOUV^rnoR8,NC*$>tSEaA=R2e0lO%,N"<g:'NQP'e2UK8eu3b6WL/5)Q:S;%WF5/HSAK=,5K`U:5V*EN2_AG9^faoRPArUfpIr?BK-i7:a1Yu'8M3V9FZ)RH@S*heqK-M%j)C(DUenaRre_]4HrD*70f@=;W<5'm]*Dj=-Bc]W;ql<M)DgYiq\AW!fe:*fqje_jF)J_oT%gH!ITp*U@(lV/jgk2]`b[m5h@9e/%I-eNJSU7PjkM@_^hc%(@'+mQ+E9(Nh'pbH4j2VA2"N:(6/l8I,./<f.QX;kJBQnF$fsA$$=m)=7W1_TPi=C_1X=$DXqB7Ek))/'4%;a:MI5H[pSh@Affo)l"[;tIAA%rF'sON@*S#uaVFnu3cQiO?q>eP/IfE,2B?c[P[Iql]8/mK*L\Y,hu2g5fcKPjZlIrW?'+ItO69%`rW2t[(A",ag!8@RLR?I2C\$PrGLjXP[289AruZ]p0s[R!?Ij&Tj8Yn?DR/&itP(1@QfKhK76qk^\jhde2jpE?/k-o$?V5%Gke[6%*!`:W\j8Q^%b-'^?.a*V(2[.ifODSmCf:(Ef9ei^WZ1T*H@Wkeo\au-alN&";q?]j_/?\0pc'%jS.^lm\=\<>oDd[LI_TnYs(NYS%Q(6&k%o".C2u2pde/)QfX<6+Ys#!N!kMDpOgTb+b`b&l_f%B>>h\t5M78AI$O*B@/%ZiMgGN>f:mP`1hRJT^!CZb'#cu7b)+<;F-%d;bZmDKA!,k%pY+S,Ktc[].T[#Z3+e]@5-V:Ob^bA]H5M:I+gR'<,"sPDl0M)&hamf/ZAn":Es01,9kM#<k8knP@)$7?,IQOF<Q&%$B*4/+kV8`>`I3\r<.``$$(D5`&n4jCX:p;E"hk$\Q(e(jgThp)rEddJh^J`ie05r.-;eiMli!A&k:bb*#RX4&MN/9=@It'N<)V)%Q$N./+AU3J,+uC]%ius-@*3c-\fMDF&o\dG652I/<q(*ZIejnI.9+RqKui'U5;GIl#^O&+:BGf6e/4n^!=eV"h`[J@#iXn[gD%8F%j2!1tf/JNcTqZ[6:^9>XI!]k#S!b4ZnSugs+Ssd7a?f58IYXJP6p[5N:.RDZT?Q<.h8)XJLr>N<O;^2MqCNr:Ob"#RH3QN7OQ6o`%AYB8?'3S?58g`b]KV(m/^O$qCDJl.R2?F-O?3Kkq7*]9,+ZE.8>ha8[Wb5'8:I2I+*%9X)m;^A4LiGMK+FMT%#\3LSG]8T"fJba$%SI"FN&`K@D0)tecs4LARs5=K_^UTVR7"&_$%M:eqrMAJ*fF=SOF0ejO<E)?$T8?Kbl/1uP*F-X@O\D#VkgHu'V$eE0fkqMdgB&RB%cPq-c!]NTjaTHh>D/>m+2H@?;ef>qK]Y/,te+msMo!2J$AoBHY)<a#mK8t=/(51b8r8K2.`R>nn.&>`)r/)N#C"o#MbqOf@i>$CB%N_,F2,2A0D+E)^*"a_BD4pA--B]R-MNNR7gC`#+n#1?qsO>agu[S]uam>84LCltU@BNl4,>Ep"H\3ta(ki?0,@gF'OT0D\FrN[.8%Z5!3gQ3*9QD1=%f#^HO#8(ZsS,C9HCD0#JUR?p,#Z2/T3S8?Mc8G8GEIMEkmLM'Dn3G]eJPX)D*hn2hbmKm-khRr87!L1!s^@%RO%o&b-g_71<pjcA&]4)VV!5<+.82g(5OZ.n-*hIX'P2qam-Ok:A[]fX19H^q"dQsod-oblo+rBif>^T<#Qhk8-tU8;g#TOL^'FU(dW%U0:\s&I_[!&kNG(_Jnj#"C^uEOn.o$^_.>$CC0/d_@(O2$G8C!'RKg1_]a!RNBAYdklVM!$r\ph*G+:aJNo)iq"Vt(,O#Wm)3FhU%it^DnbdL>THfgOts1mG;,"5O"/re^.Z6Y4<8\nn9CarN<P!c$,/lBU,\L4\`XD@KH.8pFAe-OM%2Y-6H;me>+HoH.WmRo@?1/T6]%;>E+HIN+ODCh&G;\B%Z%PgV\RKtnPn9asZDG"\6d[[$X!qqDAkV2B>=XHU%H\s>86qK&$#[9GE/Du=HHhC(Z.2+iD.#-FS,\7$dq%(9*T-"_Oj:h*sNiL(tD9)m?lMK(L>uZ7nlRU#F<[!sRs!osoH;%Pbs<gI,aC7e_nS+%V?A_Im<"A>H"1h_A6,`THB0f^D(JaV7$b%s7SfCq?IMi^HCnC@MCp8>&B>k<buRqSP#(X;Rg%<b>!F!#3CJA=:%]\@1u'XYlD-UFt\NaH@Y(op$&CdRu,0Q!S';Ub?+ssaiF7U%Ki)%8r^WaC3Cq,A7(j&o(1KH>WFW3i]jW/oj[Ni8?Rg@(O1\N3ULp/.P_0?\n9>2V-6@ug8<5X(UY@@$)$jU'rP?T#E%pgZCWhoR%:(kI?9"e^cV]V>]q!DW%^FuV="ukC)EBtOr#qHc`CUjqJg1._>j3+o]eir\8.>qUF.U$:07Li\i-uM@=X<;j^Q4c=dpRE4XPTrqW%4<=r8VjCp01U*%5UqaLlT`$$8M!J%aFpogaj2ZV(GT..IWJISrKqQQMO%OO!e^D.\$P0P&D/e11r@r?/7k/#Y].g3$.2\j!F*/VF%Z5)'sPq`N3!'DZ]Eij1uhT+XCMr$']L'Hp;ipEJ5pssP[m*q!T6jCo4,t0F.=&?f!ZDp0INAg[&3V89,X[U;Z'*+2XQRI!cB&PJ<%c!VHE`s8W:>5X`.PXFQ]XEe?5ii6W\`^%\fkc$us`YkL`l'PKSIA=n(E][Cl5mf_O?+!OeL\t[@&-d@>BX?7s.OZLmSQeD^]cE#*%^^!T7M4MsXHG5bGO&EUZOIK8i<0CO&2Q!sg[g13lDTYA$4EB8bFe^(_)liRB+SkYg-oDSUnd>G4;MT74mQ#Fl.T=BsU#7;qg#2^O%(er4":Sg=hjMG^SKZS]6ZSCar[F@>"ARcjCJ]<_<dTSq6ce'jCNhEl)p.$6DIfg"OgrHoieEjg:OIIsD<0CO&>6&Q4D?4."LY@gH%X]snuf/>;-6!:SC.<aK[HS0blE:&ogRQ?9!)=Sm(b<"(i'eP<qVOet5U@').[Cea$jVJ(.=D&1JR6j4)BfL'GW,!IuSZj;*/CMT[%&CH=pYX,,WE<-0a1:f(Fll(SE^9T-ujoBG0eTq'&M5=fI>4W<uqY&o6V=/C)Kob&DEI3nlkPSB40bh]oUND/;;*p^H.UmGVqm0Z/%dmRmXD2m.X>6J9B&F_t?*J4F]2[HAI[[WE=`?E)I#D6ioF:QgIQ9*O/np8H<TXTP3!SL%Th6!FOGT]6Dm&l*G;*#\qjLW?qVn54n%cpR@S!^@rfYM`88%gbBr:p(af3%H\U;?ia%]odMu6JqPE[$5V/%XA=h3Ee40HN!Qs6#;!I?>YTQfilEYH525<7$P:]46'bYG2r8M%n#X+('WpS,LM/29@O%u!Lp*&*[sBA93^dbugENuT9T%9a.9\-LAK7F5*Q*+3W'I7op[:4Sdb9]4T.AWH>WB;<N500adV%(o5]TT"%HjV!WA3V4_jf"\@^k7INg:5_"==F!2lW#'T$>[e#a6uiJ4LLqA&+*[4gsfJBNe\"G+6Q/og_Tn\L8Q/(n@T/?gk#%4)00R7gah;n%A<9?&2m^J?]t%RfdG=Zh4!]<Ck9,+bGA5t^bZ`c>hg#'5_t#0qnN[7M]E$tW60q:#km!8P3Q[Pbo1VZsF\:ZKj&/jdAA(6$#`VG_%+2=SK"0PM)XVmqJi_orA?lH:lelkJ]1Mg@JX$V44'C+q.`gF2XkOiU@O#_b*PS,@G\Y2bSh5V15XWg5+`7pA(fg/pe#(jV6!g2&q%66/7i?6B<S!Y[*;<:"h"s2VP0+R@Rn9qA]#H+<H\!VJnnWh466lSb)i6?aa[1#A+ob#+Vr%L5<**V2T_AGh.>PA:V!eVFs8LCp*m%3KqR7s/Q%;T#SC=NHbbG9^/jK2YD8HJ$^UW,b?f/hAOW[m-WUWJ9X-EiPC1NH_#bN*8!4Q,HVp-DbSj>W8P_$=pb'!ncX@'RkYYf%F<>E.G8C`%;SG<SjHlc;j[ZgfR;b>9MSE,V2rVUA=*2Xo,o`_=jSr9.0ukoq)s>bJ>qe>+5mM)`6nAZHaq]d%!0s);"en`WmDXXf%]fcje/?am@jN*fDr,;=TS.+B:Gc<UGs(^@07QHoXOEAUQ9**j'E.H/#n!rRrZ$I585,.S]7g5S7d;\8n83?oK]%JP-n=Ytt"&UX`%Z@5n8+UtuUkF7>/kSrae+fFaXB>j/f*+YeR'E*cn]RP/3_c^GH-3pFS)n8mL(s[1S?GT&;*b<\^']FUZb_L@8_*Y&#]b./j(oDV[%279hrldBL`7b[j4j%<Of1]"L_Y`jfU_#rd4MH:TCLodkAU3`\&?60<NhJ000mFDT^ZsZ"''XEeghk=.PB#RkVF--'0i24e'1ELGH%g/EqBA6LZBJoKZ'eg!]]XjirT[cnn^L(/%VeQPoMf$Uh3i.4"O]_BLN.#a0k;KbtCGo7I/8_]4B"#i]!=:q.'eX+^`#fGR\8Cr&I%TRfiMG+`TLoX6l?f4C#nWf$9dI&H4m6hB$:UMtG9+B*s^SGZ9<Ijr7L']EDVn<\ldqcuZ+iFBW%9c-Yoh>`S2B;dGDl&Z.GMQhY,%!HauLY62a[H1MacpXiD5&Oo;r9\K@OL>(4>VAs.#T7QDI3'_'W`@#^JT%1H?m$'t3IIb@!MD/:G3a$g",&Ep9K*,+r`<ePWC'g]o%Sm$^o_Do2<c,]921"MdZ-Ajn4?`46/S7_J`^itR5k"8dD3a&mk]nM5209cdlWPP+lZ["DF01-GLl'1HBH1f(jXh4#P<5WjlRO7C"%ZeoW.Up3"V?`F?XEL7e@=f-!+3[FOUNd,6+)tMuBE,2Vg2:ZWY349l%.28`GTDKX<o7FG'HYE0=5c)c6VE@!"<EGP8B^<M(gkgm=%m8bI2+Q'/73p;qG!ikhV=q_@se"_4Cjoe\mG/$@\@sYAaVDdLH@%`VD)H-j30`%PjE1q<aLW[dn^bK+H!<tSJfR[6u7=iV.S18k<%=4)YmJF=bo;>U+YVGOnod+3iAE:QX4rhTl"dY!&6_-`WKh=!,!#9Wi>lG7F>M>9u$;4YG%R8e9!&#gahTN;+&gtM(!&h`!>giHD*%72UenWa8t#p5g+neWZjm['`+'g6R&:_utbA]9gVQ0j1N<rnBjL`i7Q63Vf/1ks,o6#=WR-Ce.NJF_eH&*J(V+EoBG%:T"@H.9d&6%J@c4paSgekqdfepNhMEumR?a.MU>YELW2sq#K#eSp*q/^&.\mIS7\%.r!L<U5&t]cXB?1:C(D_Ch$up]L"LN.o!m?@:i(kQCooQ*%;6QKq?GVBC36f)t3HjFC\;<C8l@uUPAFa5.@_>And1g"VK`Krt1/tQ,[,rMTg4LU!`rWL4I1J(u:Ib*Q>]%6mC+`9SlAkk7^b@_X%6%.6[goGJ&_ReoOFG5Jqbf#&MT*ERrjhV#IY3Q-H$6q]+Cf1sV"6kcbYE7$W\"bMc;4etAK.cl]!/1gF^c9#!j@9T<jYa]a-Rf<U%6I/W`M+lTcfX3R0HbTONGQ",R>h@B<Wu<qG-GfPd;UmOQD=34/J-<imJc@.8%B*luo<49ch][M2Js6b%SPgR2N&,.Qfg<*`E!>=L%n+'[UJ]gA3^9pX5VO0f&#nd#5IUXEr),QMr:)RWQ5ok,rNX3ZU:8[u[;gq:jh\`j9"p,`fin'FRGDCG-(^+UGTS$TomK,IHj,3OE%.j=]gE^fM8F>4K`K";6[Vu'19j?X3C]RYBO^/KTk`efhn.ADg$5T@b^;G$OQ8Ej&`R1ZmCV;aNrGo!F%3Do-YSW-Ou"V\7T)F7,'%O'e"S,7dkN6F6`l3!mT:D23t[W-D(7<AHPu'Fs=T?`l1hE[-fkmSFE/8[Jbln8E]kl0gYoIUX`hh1S#:rJPB@aABYH;,qVE'[OaJ%s5cJkib-u"S#bIV$$LV'80K4?:&G1VTX.l>#d*k=rBeBiaO4SANUgkp7JTE)l\X)namqmfah[G1DOI8_EGfc7#*U0Ua)u_5YbgAo%IWFd,o]=lYHa!SQ8g1d*lAYq09(-XjHP!\6RdPp;omuATk96Xj/:W,]"O_mE9hd8+*if7sok<$BO]5HEAPXU]6TS72)6a<`kHaA]%SXU=QZ<'2^O=3NM<]rhgUg0(cqFKd7FfQS1OL0DHl=gf=CMq[drAM.O<rE[qJ*O%`]&;2[(+:LE[R,uogDEmQe-`!O_,9r"]gE+]%*-$>-eNnSGoM@Z+?#on+XK;qFL\T0!KTO,RCC/]jY/hluHe]/c9o0grh\er4fT!qTp#0ka=IRr;UlFA1%CBataQL0+U=E3O0tJ?h%THM`cCC*Vi3[Dik$@u:n4cJWTQOjX&MW/Nu6!O7+gQYiNS,=XMmL-:pLViOo]co0rinR$*Ah#Eq.)$e2QYCmcACEh!gabi`L<&*e%jXEZ&8l(L5&40MIE)4OCW(M%'X_l.%l7f&O2eF&b3W7TJrHg8oW$.4L,F$3Y2QiVO]0t_5&.:mL+=MC=E#XsMT5l]h$,<XM4?+Hr%h=<_90"6ZjrXN2"\B48`.*%oXq@Jn;4\.:aoV<05bc;'M7g_?p0:[DmgqKNjLZ%6IAP<F*+L!cPfb=RrNo&'/c;<[-,1]mf$6&4L%Upkk?'(0OtB^qRFHlj6P4e0*A9ItR'cl8(tgd)[O26*>afmO(jdP*q#$(b#IA,np`PrTIg,QTkkW#I"-O'7\j=ORX%"rUU%%*dsX%@WB917;o!m'2V"V4oKo39V\MIT/R6BVMKdS:O9Uo_b9qlA:'M*H"L@3Mbu*L^:#=nRY3gdk,..XO=LIMNU,M?1,WhW/=/8I$s?&?%M)SU8M%]pj/:=^XAM6u<"?o;,C*P<LC,LdVj`G(lcfWZgYPtAh'OES2T>aaXpB*hSPKZ]1p*i@CiSKVo:a)EOZ)-T4(N<$A)#N-X%K;@+;0-6pr"T?l[QB:C>+2&#7).qCch\csYg7?ifFS\nTS<Wg8TgUZ\JN,r-b'ME.pj5&X80b8W8=$IYl<B1:<Qb%c&21T4p0%85%-1g?72$[9f%TM^uCWaPcf-a)X7#IPO#Kkb_HRfR/0.$277S3X6!BDkOf[k5\k3lKk$;-'tU(GY/,3s%EDJ_kLBA]/1S/;Z6l<J,I%_k#D?%cO=>"J-XRU.MFpW#Y#Nf5KQ=r:"LM2n3HMG,Zb0!;7bWBJXEiTE)+G6VNU.H&O36NsiHUa73mbr..=koRK)2Ib/B!^9Id7%:?=lR:oJ^\Qni)5Cf^!;q+U(.ZmJT3$pEs3bf2lC_'5fW8K$OXqZ#WC+'UJN=%aR(naEbkK&0=khMJHCAtg*&!GRZ,s+4eGCc*d1%o`5?5H6Z2VPeCe%V31,28DQ(4@gaNuqR$h-aL_opM,i>8(?6i8+fj,2XG'&1KD".?e"E?+_:9PRJq<G<nqRBGT]]iqHU-TU/6cRX%>Vff>/^Q-efQ#^QG`bS''uWDh:s.oCI+?Hda>fj)1>=nTAJ$OIo-1#h0L(g1,U"G0a)aSLCLuR3Xu;uFr:6Il64pmWT+_R`T%:K>%'ieFNfh4.G:7q2-P<>+N8B$Y:K%;$o%:b&K27gV11E[k@:T8584BQPB)l1pf:h/4$P0n'KoXX-/*^>9R-Z^'<RoN)fd`_npkNm'i%Y_B7(QJ>A`&=D^>@7uK@XbKbJ2f\i%@I,ell#K4Dl6o`Yd-+F_E9UVCW0cM5'7?u_Modq_'8A#=#CRhrWtr$kLOqX0qUQ)'?Lb"G%'r$=;GA@;+b:qGsX$Z,NUMg+W0rD)/H2Unmd0ZWI<iA\C367UB7PNI\jt*eod?N=7(P[LF%jVpF1c=KNXrP:iLkR#;c2M"g6qu@D%jrj!?5bZHVg>lV/grc<8B&1dBB6u+2[64eBjSDV@Ao3n!J=Hm'\E;&a$e).l%BEp'@m2:D5*2_P*l#mC</B#4Armg[JP)K@Aj"jn%r@n[SROCbTA3VQ/?:*)O$1t0()g"SGd#59.B*`%'?98d4i^:":Wc[U#LfDZ!#0_W)l\W'B9N`:sLS0$DK'WFDFL)C>p!=qm?s;>&%q(`&3l[S<iJQ%XiScn-1]lh##&dTnD?"D4DL)c9b'$fB@4D:6H0Hd^q/%\hW@6C=;&4UGPX_OpfCaNFq.nqjeOC;&'W.r"Di!)VH%<AB4rAPl!][4)A[gk.k3-5srK"!\)E(AI8)+c5''#`4dgR@H!B2d$)B@'ImPK9DOUKh:&e2K'T!VMKdQcik`<nnhjNO-shu%G%;u%XTmiiqbC,1(qTkl#C+H^"&k&/phm_%Brc8HbXl6Z-lb0K+b9Bi$W\Jg*D/ji)as(0n:pH9K!Bbjgo@sTn\^Y2G]7UKSC*HULdbe2%@KrfI(8$fHk8(03.>[rj-P0(f^qgcZ48938mMdrMqY^'H_1p2$p!kpSULU02mpkG5M^(rGjiH&NmVMm0o+tR?5KL]S/`u1\3^q]V%8W.i%"!Z0J84,\UaA/<GdMa<[Z,0:V&B(V%kFDM>i.+b[d@,]h<sL3tesc,Jj7V(c]K/B>'L#G&#9kZ(?Ku',(ajUq#NWg2i)mU!%kD`,=6_,RP:97NJGZrUq-Q2po]Wf\o>B>l>K7TLQCMiZ^j7U_8Bn!]#&\KSs:L73$mQoBBE@GaI3&N[(lc:kCBO,T9FiBaTp@"ZW%DC[+oArnGk*Y\e0[AI]CldaKr,L1aMCh[C':;:nYH?lHt]K0BNURDTa-po3U1MNWpn?O`EoNTq3C;F3l>?cioc>$l2^RHnl:#DCl%XB,LX2JYt-^G2^ge.]0rAIMsVj+^qYj]OrllDTJufcZrf\(6r3^n.!s.q:?1''&Mo^39*SI:EJ,!>qcR=_jL\4/Y<=/#N^BLmefZ%)3(PqYG\*F-f!EYJQ?&:U"1R&PH(ePTm`qfE9fW&L._,+E,-gB'O;TbY$/.MYmMhsNKLEmQ$r[:=8"an>o@$\B3GHn@7CZ?nV1fA%Trfhlco?4llcSFbB>)o[Y)La8<OH::Q%?oaojXlB"LYqsTNBK"-aii.W_A"<EGn^*LB&e'McZ/E[C!@3:`*VfSuKkCW,/IuPH'T+%*4Fsp<+QTnZuMb.+U4r/-e2$SUjaC@gEVgI+H/ZfVYMM+X'>&bTUUl],ZP^YN2deZWXM`=.1!&U18LI6/r-G8C=^<B:0$ujZDr9r%><4],IT0=%Zmqsp0icnZXPJKS7:gHgYi#AeWXR%mk[(+*[*@"ah&b6qWs;).FcD4jm'f/YPoXT9=%<1,lGhs^4++N;%/SR^R2h#_%?!H(X>q@<-D/IOMU>3?2<!>J)+f[<Yd5_QMI^eb$nSE"deu)qKRPhJj\24!J"Q"G[W1G/YO;Qq(;Un/ujQJ<p1gAk+keFj`XX@Tf%cJHn)AU%\VUG[[/Y6Jn0XL6<jNRsf'-c;Xa;hn>13H<&L"5t1jSml[6@#rB^;AnZ(S3lR.O9R]Mmbbk2Y>a8Kh3pX`laIZ@(@:#?%e[:-e?T;i4[m3Es]f=a>YDauKlH\V>o(u),Z)GZ)g]tjWg9:Y@J?t=fbG!oNgia-9deLr?^pVsL3%[[:j;laj+V'(UI3>DTO5D)j%]4BffK</,V2g*^*k2FVOh=H.ZBCRmu?<TL&%s$;hQP#YmQ<skW0l/O0m2t]*,-@srQ=@PO`5EP,i+Wi#nZ/L4cTHVS#'h('W2*R+%Rt3Yr5OA:!!dc[5P[bd*gqT/-JqGXijJeqd"=a?OU'D@BQ,8NN]`ARGar)h3m&O[Tlns\;e_7=kmst'+#mP'Ll>X_VeM(paUpr,L%Ffp3`!3Y%LMH>io,p<(TVFX_)'Z>)2]ue;4!F$TXf%K`B^r:U9f09;p^#(=JI=s#tZm$M1H18o["E2)uI]Ej@kSiNh-?!OSDbU:u%.W-4^kbKk2V\u51A*fHleG0Ws!Ye;ejHd26&AW19=sA"[V4L5h+"W9OH"c+[bcN$<6!U`!;Z>AFcbM\8$ri'Qe=e4MOtHG*TUGBn%U1q6(eP;N>$8A<t'4?HR$`J^;^jqkEM<8=76cr_qT%O:O-B<+3lBA%30I9Cq6lcl(]Wd\',a3N<_WB<H8BPCi4c*58gc>1M2o'Rd%a]XM&G4GHL+HgKd2AT0^7Tdb!49QL0-brnYEkd4LC@Bt;jWNfNID$>JM2C$+XKdA(a`.G3,edSbj&G)``dkL@BCr*m`-?pU;4QMf%8(]7]cAj;c9EJr#*9&(g&-H?Q$9UK2Nn;J8rp'\2O>o\;RZH?;nPHLA*+Z`D:oUeP2@k"<T:NpiYing"0Ic>:#)S\2Zu@akN'-1>%?m+;hLU]H>CBL'r3>Vj.0nc:ARJ\[p,J1AG+=@?qPrdNcno3db0DPT3YlT>=5\q)oPKVVGQXA_UB^J\(a3&#G8X@]b5Vg0[Z3"ZP%28LuRl"!G<JjSY\!bN.)[4_I")OWS#`r@Zb_GWR$o2'(:`.LD6_h!gYmGd't,*fndlnkJ2"d+@W-`M)U60r1t[#*:'OZ5T-eAJAl%+hiCXER!NfY\DGoA$$Uo^%/'.K)NKn$uV&pJ.\N#cI9U,Maj97Saipg]CG`+9pq&o7ObL+!p)ql4)P^%`PbO4"2<,2dF,T)n71?8%UgD,8kP9IPj+K1-l=oTRT(l_:4"sMtT.Hk'!d?C,53?$q</FAe\8ZF\@Tf<p9IFnCq_X2_Tm@55Pt6Q3V*]BU$6j@fS:lL4JO#`f%b^RV[(_T?i/Noma1dbcn:C]Nj?P7,e9GQ4]$iU0pg`o0'neMrY*K5QO3W/;%.(1X':7*Ksf>.7glFtCclWT7krb/'5KQIggcOUnI%@k:i+4+&WuLDh.r\V4e7+]oD_)j*U`,C2j(gF5%@54+oACJqZh&a?_p!T3BS'^9e>k\.&WXA3_M3f(RA.3dX*#CE(d/n6]#pjH$3%3#gWhO^i(k?Y@h3SgXf`$r/G>%GEQg*Ht7C%N>;q.f*DG35=p.\&7Y>\.?e2^\f"Zq;&280EHnDVZY&--]R0s)M?grl+qdUSff%n%f#?1iXh=K4'As_hr#Na$[A,Siaar]mI:*uWps:W5[l:;a%Ir/n51J_7@!YY03-%b20tDq`PIh?!E*=/%9):VA?KBkp^co18P/GPu%fgjs\6fk7']%lb5qVBkbb>04FSC]RHo;mTh?fjJrasXt%B/qN"1p5YGLF#2<h5qNU,-fgC=>5to*hPDi,Y:<s\qpp2TYiEEON+fV%.,8Q)M!cCD<6),4k8iCLq9_Ni7EB\uI<Mo+D_4,_1R?kF6g(pQ3K5+6S>*>YGA75[3>?\GP65c_LC+#42Ea5q<<2nPolLeo7@$/f%\KW)d9Lf#_6m+an`LiF]T%7M3riD%ahs0B%)0&mKdiXh_U8jaOXGjNKWeqs4-*1$^A:IX3\DE]>.k.5^li*u]>Srn-iT.)aA@J7b%GFt.E:4Lhtq10"MZVF13$(35\c+7VUatI*5*U,*o>e5$qPT/#$.AFU5R99UISC7MT?R1hU\j=JY2$-353ACK!agG`)5m'ai31H-A%I<.epE4)#e.u+'^Y6@&;oK>0)-p_n]DOTGn:jLM29E9;$I5p$^*!oS/RlsaA;Q^rD16[,1NTqn*plPu]s$Bjf59YluO@9m*c)>(C%\#*%$X;'\*nFubS'`O%Zr\\brq@.']D10!3f)i+5F$s8EC(<qYj<-ND9F0t.o8md:lQ3dV]h(Bt&3^7O0^LE2fSr1&m-RuM2nrWK%\D#+H-J%HH0&Z]p_EgN2C2\`okf3]RF1Ven_-MNE#K3/iM"%4A3]N7J0%GM%OrpK5@nW"H+es(1Sk97IXeLhWlN33m*@J08:k@J`%Tbm2aLL)0k&,S=>D2M81m4KAhUV&lWapqD5Fr)J,GQ%sAp.ToW^JfPs(/Ll09m:5`IRo4ir;\(oG^DY?.+`7u'*8kWOob"W2?tLn%:o)FZA>i1HU=A7%n.p<tCh`F-_)7YG/"k;bIY[]Y))"g[QNtDV[kQf_h[a\!3]au\dl_CePu'9t(uaT/*!C->#!s8["$hgc`u,Q#%q(<X4Ukl<uK'sM[:^4grkG+`-ZVoj:C1hf!K_DE=C-s*o?Y`ohnM.mpMBltoW(l3DMYCk'c\"k6A7Z72#dn$TM(;hP+BEpD8HgT.%E=X4iMKH-Oi;6"eeC)thQjS^t<RH15VN-Gq2G(>u"#5!IALR3/=D(`0oPnVK?BW3ZF"*9Nc6uEflcU_F:JSod]PVo6A"qXSZ*8B2%8Yjg1mK)#).SRdK*!<'j+D<mp;.;Zl0i9;&c@<I'DBmb7oItn_\LNgfc\&X2ek.Un/f<N.bDVP^c,aT$H2me'`Uhr2IBpkB-O\b.%&)+dI`gZDTa@%KB]^Q&OORN>IbAIlcic;dFBYg'%:p!ZNeg8"%M&JqgE2Ff;A_d#%"K!)J''+2(Of0[)OF8]mnqbAI>8']=a+q]9%#KT1=,]e:_+D*)gU[jTc69HG4$rEI+PcZWK!^:9b$^htsO:SB7R2f>j<2OoS7L>(g.Z'!\D!sTL"%7J+`qs7;)Xp%JUu)L_qF4[t%.j5tK>Dbu9_med$@k4',#ZrO(DD#]dNUe'sp/QiVST9E9SWZP=>u*^LIG%ss0l1H3B-43/56+mMW+;hF@jF'^Fak(o5ne0nYrNAr%IAALl!p,T_<Y88si<b_'H*F.+aQHgKE8sl5nNk1'?ikXFFtJ*Q6/Api#7/YMeM=_';c\&[aF[XS?;Kl("r!5KI&$YHPp4M/V=Q34%Ti+3_<^i4C40^$N?9@n8\!=;[;!^`ma_NYsmP)kY`cY&.R93iAnrQOu[hf-hSj"dZijA<AU`:_W.:cU:nA>TB"BaDVQRNtF(9MVZ%E"X<&q<TIE.B2m6SY4E+=s:X1C<n#*]=\1[PXYR25b.SCgpF%U>SG$e.4pCO:1#K^YT)e!GZY,A,R/&o8`F_n1Rm'7Q%9\_S`2Oj%J_lFS;*^P\17J&Z6""rdp(?/3+n+\@84f%Z@Y?4$+[']4CoJ`%M(p?;N!8l.`J]mgU-0dnQJ3'LBDCKgL6hXFb2Yn-=NSb?B`eG,%&KFD-I[B$Y7=q;IAY^LhA1E?:0q\5?V@8K<jA'(94s85,Tb.UPHd/KL+!2`80(0U9;uV&5<2@!i'-t!OEI\4>+kj!LfenC*&tti<%*^P/e0t!+Y#D#NtcH!s3enY$:TQm@CX)$3YYG)"@],bI*8"tJ?KE2dfm'\\`EHq<o)dVXN[<r\THd,+:5n!O$13*3oWi_2O6`sDI%K>8$T_dDlf6`HNV0U"<6!UWh(5i#r^W67%Vp/Z:mZ$n7R%E_[gHFCXOl8sQf'?20IO'_^Mr$<inrb$)ts6C%fZI,FX1.XAHSi$3A%rLWElO^,0jICbai%rRG\c-\3VeE4P7O"NL)*.2iA-/ItZko(fcAggOir(hYrs"<sk"#Fof-4"f_Jeka]57N2Z4<FR&6+rLT/PoW4%fr%E#;rEV)M)N#J;43&YV2W;WU-s#4:uj)m<O.Q,lS`ih%H>Go6G]P32@jf\=L-nB3oq5/Tk97^2GsB0&f]547<2O&5fbdSoCaiR%*1m"<X-uJT,1/OrH>DJ@&onakd"psa0GF=$Xne5c'3>T#(1a$&`+L3b/M*6aZ%$c%/skAKL;mW@aGb::a^"%u!52MKjNbk%0(d5M%,`*#qJVft,RN20>a3FhLS0Vrf%_NrP8]eP]1Yfb7:7(WHSlk^nBK?Fk)0oNrC[UJq+DA\kX/)C!jDj?km3ke)MKe2jFWBS<#U:S^%K[Z1!$nn&D,(D"m(Gi$^U/e3"6m"#bX%="ID)@GqL^&\i:ScPcB2IbR*4VD8,U'`EcZ,Dg4coMum8`0dq^hR9cK<1EesBD&8Yjd&%3G6ou?0n#DPmRZq%J=l`87"q[;Tlt.s4K@-ZD8Y!;,<T3PAqB6PgZr@b(4WS-;Ho%N@:3b3JC_!ng+%>W/6s!^;M72L_;5j9BN41%I/HF])5JefWS36*1Pc3L$YFOQ'#,2LP\%TD:5SgOW\s*^CX^[b7#D4Vb[h1@a(M\6ocdea6mkW.di8h%'t.Y<^jQ\4G%q2U,?#p3%c'l&93+Eh8cSDK8"^V3j"$:jA_XnE(XUQee^nsCV!6lnFE<Cq@40*@_39hQhG[$T1!&PN)!NdrNmU:"::Su#O<gS)\H?)B0<?F3m%j7(8`@o<b_J+C4TENsXl;-?XPf3;S`5%qsE0Y7Df,u3#e,p(1Tm%HaKEDJ-9']7O]^.BY_lVsOdK00/V";^]ld;O#L274iR%gOA5%*#R.?D(/D-M>V&CTN%#,O)1O&)2C_G_-M*go+5!_`($o+m0>8(<=hcek^iL-q>46IhB2^@^fh/JH+Z9g8@NqPJn;74"]1h56j'I&%a>g"a$;c<K$=D_1+"'2U2fg5VTQQZ9M^XFQ;?6A2"<s`T?GAWY.>cN\o'`H_7Whb1K>OEP[R/o(<KU:dZddS)Ni`IUW(X]Sr%JJb%/4c,X(3nPW\e$d\C.o&\.#(l@3HTG<4lgtq,`2&r6)3WM6!USoY7.,i?#QqhCk52;p$UIXQRpM7'&W@c(8OY[AK\rFMf*QLfl-Lo%k5:hOHf80VT,DOfDF;&/"(WhHV#*E1M%YitXcbX,1>qUeG,%qX=_t+Bp86+N[bKt0np^.O;8@U=:GA=5PO-`=F3>4KisZeiHVJI/%<8D@"_ic6]KrD(>lFDLs+r>HV4qE@#leBLAC?*pH&EU;D6[se+eUtZQqCSkK'mJ"i5$=!knd5E'A^U;"#=cgHEID)n,g,?)"Nb3/%>Ynjm,p$QNfIn^Tgm"3k$I?O8O^^0AiKOhNEb81;qid,eH'>I`_sGRI@>9qErb9O)(M%72]T*>G8\m;$aJfV8)P$7D,K"3U6`"PJ%G=\l4(2r:sG$a0pOkEYoB\5,:(E022U(SkrrQ$Z"a!0h%ZElPJkY>+]T7$V_;u/[Vq+`=K_\Mu/q!I5.k5T7lJ&U*d'S*a*\kQ.]%SNqWT<KJ?7q%5r+0lD\U/Kfk?OJ"1fkBP6L.Z>Q#P<b7#D^f^hXrE;bdJ8&.[@''OE?sSBiBU'tkMa=:0#,u@$V(a_,hPItol1K&%N2J*g)_aQ)fh4'23)un"'<d+@gMSAeo&U&"%riQ(/Xjc"MaN>A8.E9T@8eZj5t_FjQN/G@0sOnYfK1+#1[IZ.:9ZZ5R?Z1Uf=rN[%'\Bp(%5jIt-QG9Be$%h;Kf)c-)k<4sd^l?/$YBN&Hn$*i1Z.^qDWNp0k<OMH2u%funr*38jO.3#31AO<m`D!uZC+<Pl=]Ctj5N$8%`>"h'#OC:Sf;OE<8VeJ$j3Yt,,`270JcmJpIGq`[Q#%pB:@WmpHZ5a>UJN,>/FQQ$Z#P=TFhT_%g@'TGb"/3kCd<,>U3JGt-Q9":%97e#!4'.5?@a4OMJknHs,qXp8\Tos;0m.&IVC5PjBP)g@Z6I6/WSjt$i=P+;k$Y&Z=ekRV<9N]T#*U(gNPlVrBsmab[L>?@'Z!<`%?/J?TB+YY9[+Xof*5m8SHZ9m'2*@42@lS7=Nil/HG_HK=p9W#ZDX>C+fB0I1_WZtX?X_:?;bJf(j,fr]OoL+3gVb3?hB>E)d5FNC%l15Si+`%G*F;;5kiA!G`f9.<.S&9oRh9r1r`gNfuRh?.ZaC7FAOg]-2a_@g(3IjQF9)$[e!>Im9?Ep.oA!p5gG>F2@4992.F^k@Z%;iOPkh3`hRs,CmDXKg$cNR-LgX8dr6;KY#q0rZLI_!sXRc]g3VXGqmWDA8.\rL_3W2?K9S@DtOd2Ep"K4VDW$EI_iX@%!Q.?7rhA%O#mNO_2TYSdL(d^cU`?<.!UKlTZT.7&SKelGA5F(Jh%,DlUZrtA>hk2CJiHVL`11Uepqf#&"<=[i`E\(-@p;!&#0In=&tuRkGP!C%//""P8a;?Ve'GZ((R8Nk'c3n^O$bLb%b%!S,L0BADK2VpV/]#()"a&Y.kV7kh[_D7aspJ4.pjM5EFWp_je+D3N:Et$MYnqTb2q*K%16AAb2nsK4#;dX\@;uaq2)uElKL>0oI8G)0:tI*nUuJEM$3htaG:SChOCM7_oc;=0IU08:/S0D[P]:BW$<&e+_:8f+XMq*56S]Mm%p2qLQZ%sO]V#`,YE.'`7R4FJarW!W[1l)E=-i2X)g*tJ/U9u&;n5Lb+=W7ROn0iBX'EJSEUoS!J+4C`qf.WU]fNr5#@6!4H[jFt+%23nXTQl`<AV1o!ZJHlB*N@@>I"?2KY"3=R7:/[8M<![_Drd<PTW5LL-&EWLfn*e#0$[Z=tqo^0sUskOA?b%HO&j\m6Cq_\3#cJNQ%2cibKje79`i\8&m&.c!\p;I79;VmYrLp5H7CmA@0s$8)f!u5='/]77@Fu7^*=h;VAZ^@L^\&-O+b)tokcT[3&l"FNA1>Qp1%fIer%:faC)RLJ:Mg+>Gpp*j?Lc:j#\FI`rC9=t8p+[6P5h?h?"bF'6A[t%X3o3/\'WoO2`+up=amY`S,G],^aGTLPjLda)^dN`^">q5:=%SKtinYp&([8"=Z1gnQR]"B(8b\rGrM?:SduEgWjm1jZkZWAV7q^a+H#2t&TC,I1U:[Z3X]KEl!rOTuR:il+nb([[.[R28r`AGYdJ%_Yrs%=muA"ekr<2;R(Ag5jAE%4O=F)nmglTU"'fBCnW,1h?O'.I[7t%/,&Ce"]\^kLS833,0$_.2?io>grLlY4++:WSq8=3iNP#<%fc;m8Ch/$i=Md<:1Ul7t<Dc8j_]oYKYLdl1.[<c7^m8UMTP-'q\BGhFTn1"4"__q*;0!gak=1-tRbkEMiX\sl-pi!t0Fp4:EO^j;%;NQqJD0<!5#pM>6-B@7W7BEIT$M<EcP=5d54U)NSK;FapcpA4d\7'qaWkpV]V(!XOLoA>Q5<-XY@&]DtAOoa_:U/@Z):B9h\hTLu%)<K%XprP%*%;4YoIup;dV2;//^i>g!PKkQRHY]@_#:LN"VV:-u.?K[NjsB=b\c]WE7l_9gT,+pc]g(i];_.@X0$DUdHI0hO*Au^b%&/A][DHP@!-%#%#;)F7l*V>>ua3(*\qf`5C:NR09ef5sKi_osL7bmU9CQ4k_f"-";.`A?W:hRO!*ji=:Y?uTc4p<^(c'HoEa=6cs%KYgp&fF"G\`!URI'8V2FTVp>T>79)MHLh28L]u3g>s7S!%3#-5XZ=IKFeDWFX_f-I]]pfsNtC0(L.GaY!Eh+8p>f%q<2@L!m%Ioi%.#8]7p?L?Uod.h7)M,[0hVL^bIYVI3[)TI-LH#k_W3f];b.s"]O71F[T(j%AG49n\mbWq'b9`>hq'IWMirB\26'2g%b_YJb]V`V6%!fu>\?-*4tH[,\,e%?ls#61r*W*MAR8GVt<PK,n3SF?LMJ,[4_q>L?gh`i"@qb_%jdg0;onFL]5^4/](^M&Gl-UdJ@6@>,;L+DoR%)WCS8Gnba=T]9Z3T?IWf+cYM,@JjmFpR]"@N1o!TfcBj\e$TG'+/9sOgt9]'ZH579+PO6[?9BY5gZ&8_I'<$Rc*g6S=/O_<23JlP%#![prmi'>,BA])/Usldh&)'ToJBUJO$FJ;FZZf".'-&[rXNAnc;95IGL/C,/3'`[\!t1iY,A@]42E>m#5]P0of^5$NG01#)^N7>,%CCW*sgkl$oU&:nLr$-u<VrV=Xma`$t#4c0^HWKK(HV9)DAE$k'*+rPR#_iYuZIAEFr@YEF`AQd#l'0FV$3o!WX08\6FeaSYV`/<D%Z9I'>l&Qh[g<uP:YLT,50^tAjfmHiQ<Pq((M_]!u"\$q0#Fm%t#,RCI?b<.nVp.748I38/W8dWI^[(C_AUbn@bsBp[",/RIbfIQ(%\JLd2#PMTs&]"I-aPI+&@[K4r*"_a@j+/2V6,Btsac^%k'c>6Al(ASI6)$EO@-lcnb49V\jrc#S",/^MbW*+PqGYo+2.^!crFTn9%Za!@GejeM$'RUnYg;$3);mQQN+t>Z--a"$jlZ6h:18"buH[,\,e'q"fUpN@0'P\Eo&lQG,j5cQ\r(Co+V)J?OS%hj<G.S0Wl7"XD%mt(W3IT[mU#:g'N>fA20.Vh'ffsT[C4=L*]irJ%F6O+q&Gm$9tOO`c><WV1^]<Nr;s)&jqRH!Y:2$Z^VD_E0=UVMH'7n75S4eQV/%n"R*t*,`.]Q<B@DPDlI])'FM9*sZJRE$3TV_T^S`.d>:t:ojJf7W^,TK%$\tfW"b=&YlHga@("qqPWZ(H"]o4V`-\6<F)EFiV:6k%&E=KPHPQ>q);Yb5K(#=/$46E.e&EA<3f=)?gU5U3-/O'=g2*#@*uXmdV&Pn2X#HM!9Pr)Io%Lb5M'O<N!F(gfLH&-JW4K,h[P_NX%Kdk<3duU")m:Su(0b;7V6.W";Kf3^_1N;Aq00#`He7R4QDR"G_'+nPU"'@EZLE)LD5ui$/Z)nN5)5p_[L3?9tDY>kYST\\k%WW19%:h[2T2?Pm%Iu;Y_5NKorVku9qY)Yk!geR*!;jn`*)D,:$.(b2t]m_Y8B>.gC]Y\8&a/;Dam_BrDRI>P$;ON$6beI->?RkYKWm#@I%0pUGZJYk2$"EVmqM1cBmV`38.VLqQRG+e)V%TF_j?7J*`:&$]F6t+A?P4)5K&a<8nd_p%H6)Gqhd#J,3.Mp0B_`9P3YBN;"o,D]#%g8O;[aRrN]W@f-%;D:epgKZ`FVGi'WeNn<=N:>0rFED2#L6rBeeGc_II.uCoU1f&39Er&l:_GkBf"VmNMO&W7&5]>t;A+,:.]%Je%b`]E5cJHNn)6%c`jd`?7Ii#!Ea\-U+4/($sU"t83;4mbJD(W%dXm["8M+X".Q+De8V=Nns5Vso-`f*uMn7e.='CL&ZDpnGpX\+\n%d;)2Ab'[#eiF72=YS"pT_aGWue/"Nrl,7A5m9q[QggFClo`LPYs7e(9V]Ng0GdI5E!-,uLCsQu5MsR7QDXJJfYL)%I'9FlU29!bJ%UR$2t@$"4%c!A-*"Y:n5\dl.oNK,U4-fF%(F1+=,6K&Dl@\Q!oI\U-mcUlH6b$1VJCro>C9e@@JUj!%c"SOS5+[-=.elrjY)<A_[%"!8>@\8sg3#TP-;^H;48n\"7M]i_e"S"Nl4'i'Ncq&-^(f>LD2aU^+Er@5Q$p`OM?:rfh<1aMihmHDD0PM[C.>X7GsHIsDq8t>fs%i8_fJ[QjIpi>ulg@eh2>0#ihI%,B'<'GN\UJ@s@B"`Ekd^^!$@jYY-MEC%\1Ys14hM=1X4/g)r_4_tEA,u/hHnF>L?F5NE_\:^9<%=F.4D>\'bZjpP>/ni:t,VHr4NF>r\T@%BGf5+_R*3!MCjh8%&7ABq93c+['77!A_T0:oZOZ&+.g^PI^,<foUU[Sq2V<5p>.-Mauu%!bZ6cVsNj0KB#9H$&/8$rg&T<j_p@:"aP?Gpi3DcbH?&Qf,\CbPb7oZ(BsPP'+W3e82@/3Ad3.EQLYU90kK:O9$cs]b\l?+,(ttf%%VO(aH_9q<O;$CYHsApKDKi;g@!"Bmh*CZ@;9nmU?7=UF9h[*$<1iDVko%!V>C$;$W\Ol'>=Z7smfku.[kZt(S;#uR"cp5I%!(@>%JWC2[gfY.l"@e63h[OtGGi%5r-5Q%.-7G$!!pF)dVu.O5bYc*EE1F6L!N<8.jEC\J"L`cII]-H&c:u+t-bgVq\:DeoorpkmPW8Kp%^rMAr9g:h[69X*-`UZCg<P=p/%c$WMW;C'3_;.#)b<^I[+7/km[qYU,\u,4J*4-22q;&m-"_@&&LFiS&`8l+IR69SJJ*b.k4kp1Z%o#!7eknj.5\=(6G]:\XElaD7U^[-Jp!SIK7`HZ3iaL"o!6Y):Bh[Os<5j$@<fHN"ASG[8tp]h.EmUHn<pM^c[b7>$CbDGQ#boH_\%T2Q#lfZ*$k]n6iU58r_E0;.si@1@5)]4-g7A'V1Kc+['6A9S+t0:oBGYnm`@E"`l+%^0h-?#I.^<6c79e"Q]fldXej<H`SJ/Rc>_%o+n<pdrFq>a9h;>4t[s4B-!oN*$$B>48='jSF)BN:q2.IQrnYL%q(_CRKL%kRY6JYkr#7K^>.*'+Ihpg4I:K9CLfOc#7$[lmbm+,%13_<e(4f?BjEC\J0:oZOYnmfBE"`r/%rljQEq2811P_pPA)SVBOWrrun_Ltc7H1.`gj0"/'TTlC5u)edn8SJs3U:*H^aO3^]7H"Z%a-unVKYebb`5L(k(8Q49G9+2=K=1#M\k#SF]qjK##D'9h6m&6<U?fW<-bUJo\:Denoro`MPW7p`^rM@CD1Cl*_B%FM7++FT&5!N#%V<:,*%@L*\4RT`#FrKu6e@gJFIPaj`_FG*%H4H$h9RM'RE<1nXf7Ssr;.AOsK1qm-[QjIpi>ulgqRq9i?X\+PP\B&c]jG.bVa39c%\Y%Rr48^9HL#C,5<9s+lf(O8hToh\jpMHu!r;rrigOX,8G-.`hgc@;C\t`!%m>cf^)2qM#h(Na>EEEDXV+j&jKAXV[G1tm&E73=I%qNC$W+NLGd73^=:QCIR4jL^7iUS&U:Z+>nYcSjY7fMS*>:AumV6ikr_".FP#Z56&Um:[6qmH'?kQuUFH]YE6"[,qf11>Z?/J<()j%nW`$Z5_aoZars<,%dFaU]K!pt@kSM[i[-#/*XuGRIM-i@%jo6OHg/qN*u$2Hb"ofOJGWgi_X>9./]lc9%6Prh;35=7#pRtOp+]@#%5UUs]*YPi@9a&(dS#EJ&6ue)E0+p[QHmA`5SZHlRpDZne5UV6eSeBg#Rh0`Z*[4KW#mtoLO:"7N6\9Q1XN+dNkbM"i;hFmV'>a+r%-E=*L&W"o=.i8:$,p![e)PrW_7S`ds42n+)RK.O&"pl0FoE9PH^^?XZpOI';nQ[.;S^[sj8oK4GAKkF8`,q+_Pn$R^P[52s0%4rp%g+ol]3FW[`-rf[ITRFJ,?sS#583%roi8XkKUuM&QTY/1I49R[DA*acarmJ,+c/6H]Pof;",@7/NHYr)(oFOTZk!>S(-[c&fdb>k5%!-T/",#V2#$$]&Q[cgj(kr#9%ap3=rSb*55$?1K2,1p2V7!4c&L3r$)rZt<5k;tt!RX%dZcq0p]VZcb7-A:3/5si^C5li&DE1KV]%O<A+R3@CIb-[c&f'&4RU\O[Mq;-bIbeeOCdFZ5,65sl/>mY%UcOa$IFAj`0,%=/>lO&ZIg$^6L1E_90D`s$9pdlJ`kO`p;#,6FDK%'_%@Frn,C_]"!U^PT\N4iSsGVLa9lEJ;oK+GZb>p$;eN:JGWgiT_@:U,/hZCK9$C"g[Jh](Rn"l+A\Yo49<.ngrE_$d`"pW=8A-=%7](:4-Wj9jLB%_17&>N&JPHOU49`5Z2BhE>4>aS;fG!b=+KEtVECd=.UgQ:J'Bl5f^f,j^@hZ]Hi[1\+"NeF@,!^.OnU83@"t<Lk%/HVIG$?unsIr$mm>o:MESFU1VEPX+[>PScM]BC5@JPPJ54N4cop-OloY&_*EDbPBok#6Y;T]1ZlhABM(acW=E6(`aao^(TiK&)&&%6HC<5"WnPblc1J=>ZntT57;Rj:V]nVqdV8ol/F%gX8EkU9A2g`<"J\)^F0g4><)g7cm_3\:BBmE9aJ?=%hU7g"9gn6fMV4`$ZI6m%WT$&e!hJBYGR2Y[2@4%-2aLa2Q]W<Z,!L\Z+!q+UOYU`5;?T&F'CZ^nrn&L#]C=13c/=JM_F*&R6Ns7u@Nutq=.tg=!DhtIO%fVd%MlWBI2A76K_9^9_?/*0'5r6CZ)T\5QX`Zli8kXFC+i)*+@)`iEEeJgk;WRVa!t;Hd=5Oprl\bL23Xs0U=:Puf5cQL+3=%#`Ir8cu%GnZnKSQOiU@qr),3`VrHUWoYE3#MGmD,*5B'!^#rgoOR)hbBU["m*OZeR_GS2ZMXYk4\rdVuVsMJ$4]UHcp<J]?kHBq=brf%^#qB%4W#H/D#[fP4t^51d3dItMUE*B7JR)Y%_h@@0,<a1-E,D2f?;Kkb2)cC2&U4K=YINOkWO<a!7aZm$.'eB^`3'YJBXVN6A=>g0aZ]&%n)EXsp2Z9JDPB1?Hk-N%\0\)&YYKf807-7Z#'q@upT_<o\h4CH$/WM="Vg[3M_,&V`C]P'H7*(oZ'UAjE>-meja0PF^s/I\_E&R5%a6Xtb)lR)WkPF(r\ul9jS,dKcirTR3f#<r+Ol?Lg".bqMnZ>AOHFO:(r-ZDlaNqZHSbg5b)5uHZ+i#&\I=70;-b3*b/dub%]Rc+O%.-t(Q>6m]U'As>lcG&^V0,Nm4-E>PTf1XJAb22iR2'Hd3=td]RkWOCNa5jr"g6]QKFr05u&SB-BX,O[Y9knn!]DT7$]e#t;Rs7]#%ha;,_DQ_JFehO<K["m.KT_%u%hl>G6lbO\k\f:FSJAU.1@>ho,EUp_mhW`X?m%kmhg]VbGr>tMcE-%qKYtbMg6$p]A#(!I[pTZdI%\h4D3!ka)F$Rk@E(L%/7MNcs-oPVFaa!MVei[1\Sn(14ZJ]cjCNHIQa+50)62c0I%&,"a`GF\jGEY?$9NsdB&=Vk9J7Z*Df%J5[q%p@0:Bmc#k!e+<<qTRg=!l5aY,fNtpkJp5Rgrjn0@H.R1IO@epO4t`M4B3f<s(b$fJ46Tt"h8`hSd`"p[Vsj't5m'&ml6#>FTRO8'%"E0t-rH03_ql]8%+=FuEppbjkSoq;l@&,aghE^Q-H[KXMOY1OG3k^"R#o^>,K==iB:>bG5HV!W1HLKbOit7?Ceds4D/+tqW@Ek7u%!\cC"oPU>5s0gr%5%GjCgr+=2s*Eoi:jLf%Z6k+h:$\X"#G(mu':uf)3p@OC`-2;*(Qc26*`N9&&<kuloFA\)@kSS]i?kMP"8ItM%JQmTg-0sWihR&(9DP6_(Fs!auYNs%J'AsmY>X2`D]%B>';Odl.TQ^E[++(Oh(H53^5/;pV%G^<,UTBZ1qU6Je]ReoEfR9i=]WMKl%S,dKcirTR3f#<r+Ol?Lg".^+pnZ>AOHFO:HoE%5;BAhoI>\0H3i)*]28+7Pk?GOV%A"M:2#<DV9^rHTmm];<u"!be,mfkg3@/$di%MY(j$eEI5)jl\njDYqR;PH4Q0H3)kgmg&2C<``VZKg@'$48?=9bb"-0)cVe2'Aso'Nkk'm0,Nm4-E<\Tk2.U02I/M-LCq-SAH60A%o?O988F=bco*-oa,kD6'k5`G$m/p8PpAqRbgpO#fFP!SHg`:NPRs-u2USdQrLAm_J_u3>oA[p;JWQ*>d-Jrdl8VR_qJjVGo%MOCq%;d4(hV%^%p[YM[9E.`9Ne=UXAa4O8)Z?$1mT_dq_TG%&PX$a)P*&1OQ)tm[b/$eKnQ^SB&>2P,r!oL6&M6W,E[D"eL>r!+8"29DK%(WVd?f]42]gdFQBUP$f#p]/u;f1A_#H(C>H%JUF)_V6/N)=/CaU/&K_m#[h8kITg+Mq=)"0#2]#OIlJSg#$)j`,q99\H!]oqrbOc%e;Moj@kPQ@n<Df/GfsLhi"1#2^0ufhe2Pu:Y9(?:%!2H^K;\@sa3+DLi[1P'o\e>)b=-aBTBeNM-XK<dG5o6aVs*crc2V[0,=9<l%3Pcaa`dYJ$FnOU67%!</*BYY24uR[W(H2q3,j/E^&!6a1XV:9^mFbF:cp=@WL[aY?Q%AVd&9[oa@?2(3^KfAQ3U\#)6D9T$!>"Gj%O,\SPi[1P'oZ["&!80$WFe[a)NYlj9]n<6Tp;^AA]*F+ij6mF=Uo-DeY'K]qF_$lomi=Nek<;r?G8E1m?);1O^CF58>h=gYmQ+h$%mIq*^db>j^)=/D&@SXZslu?KMs#sKOp=aY"R*4q=4Jh4)2OR)P2_eU7B.gq<A:Ihr5'LIB];AUhQesmgV<:$CS^2W7;DEsa)tl6G%p;M1&;ib33.!,-rK;\@sa!MJai[1O$HJ[KP!2ERI;<b('XqR&qqqf.fHMc_S^"n<.eD9kR4\gr!EF&2$YNs7`BAYf7V0@<'lq8-R%0jUVgcFsP)T"(p:p"+?)R'Z6%4JfMOhD3_H3(.&#DqH3rotkjr_cO=>,:h,4Rt.F/grIS:mc#RjX7WiqYJ\itfC_En2=2M_TT_VA%:Z:]%[g7-f)qf,C=6OWjm"+I@=$Kt\KK8kb_,GID@hXZ?EL"p?EmDeYJ`;8s?#2`2GEXj2h`H'Rc9C+:>jYo$k2La**[fO:SC8rK%p!In[1'c\uG`'dpC_Dj_DF1qWc5_3BOM,S'nC0t[aiPNMn),Y-rUH2im_L(3hL!-Ml&"`.CL-m[*>R_lHNt)?q2^efmGTCfX6d99%mt'#2(^8,Jf9'Of]m&r[h>VX,@/&RjEUCG+LZ$\JehsVE\W-r:m(J%LjP7eur9iPoUQ6sT+4XSEjo6P'#?qVn:^9-OXWsj^&aqg7%1M<Os5m8>O*:US-7:'3[o;A70rni&tq`ji8^Qd%CP?d/jqs9)/9V2p6T-inr-Ms0<F320pfb==T=5Ubm.XSY89NV;XA]#.B2lp1P%E?LngMqlcJY3CIIZf5%-!St2-J-"an>o*U0DQ;i/gS@)Qa#5C)6gK\$s)Apt/j"Fs#=PAl-]NXoK6EnCB3f<cguW/`C=Wq!rcO"T%[u144a=Ka\+!+[BHA\d6gZM?uqu#JEWrMUA;sJi*Y[9feoL_%5dNe=Y,3$'6l2B;umo%s).k3%t&aKQ11C@\FPjUe%A]H%XRb<NB%#P&O7:r8\2cb)$A6A@O[1@kkMq_,c%MD2r3,:a]Bc=$R'RHfh'MNaf'0Z[BSc'5a;67ZXFn>%('2:k!*A"Q7-<3i4+P8)5:/m5VS%`p`&WT!8HQ>,Dr5H\s'cKM>G4`tCb1(Qg>PBO1gk)'GF;$&*&jS$;(W8gq9PknT,$41_D>qu!WlD5VpG2,/iqGilNsrVl/MR)NDD%]X?J,n#)`39)Qt;48B.5-uiAER]8qHeRRQi'pt>589"2L<UsjD&NX#[HKNdN&Yhr8C]hbWe^<G9h8M")b"=6W/8^fR@Xu<<>UO#I%2;l0'gh!?J,D75ZWn-Q3"u8m-72@.kRW&KYisS$[EUK;OHSqJOF-gA\RTDl%3N<3/k;%t^.H9GGYFFiJn*tm&))#u(ZWYSaE<#%s%7k44^atu(6s/CYIWt+?>:8ia]Q$tlP;@I-[PA?88<k[;Al)^3'g^(16=XpiTOT`$YQ?g.5.=9aYH%D-&li=f`&#u$,%JMLQBnXSW%]@k9GD@@Gr:\.VIh:[^Yh@$'b?u?S7dl>O]=E$CsSG]*b;!44CbDBO)BMq!]AcCidWTn58_Q?t$f$N'sUQ.bJSN%;AK3\Nq$?,1-%BV)7mLlL3/2DT$k!a](.n4rbNrXj+3mXMi`H-eODl>caWN9&s"+<Y^_+K/)8)8T5oA)kcGUQHe%6eG*pl&ZWL?hQB`Vf7C+&Wjhm%IS;XB!#ghALfRSe\(@J]Kt#(I#o3CS3MQsu.25.TK>Ns====k0F:N8i^W":uQ4SDkJrF!&R(!pWTt^s[EZY,/VmNl<j+iC92:c[M%enJt6aB.X<f$]Ks"k[Q%&[WS`5nsnuA6oXGY8kX8dh)>Wi>FC\0THPW#RsTV>m:XC/fZ>h&[.:DNg)Z06!GHi!2BH@TU8>87e&Cj%>;:XJg/OPQ/2@aY::_!_)&d<nR?tR-ps2pOC,Ba<^U<e`'SXl9f?9?Sc>eSs=F$h_CWh'Sp</L-NmFiF03E]lYWOfYG]J20BZ,%(%7gBY@;6QRae2\Xme2.>d4Mqt;C6;aY3=H5LUcTQ,1>u^J-qDN^;Zf8&@_PB<hjT9opU-j?ap+5:j69(JGe>CN.^HF9/*WR2lG/KR%od(p[?-8#Ii[epoktW@@Zqo6W[YGt>O']5q9C'GsU,O_.JaU05,,UhhInpsXe9nlFqqih@X$p?(%6N+UFM%M@T4bSe^%1Mj1;?R:%YZ<rM"f*QQ)<:j(;#Z]PUgM,8\!r)*`1+R]$7IeHA]A`69-Q1=%_KY52.]Vom(`,Mc9@/B/s3%FG3fcNZO^d>Na:h4?bt3R2tk?s%0#$DG5e<*O_"Es9*PGB(g;qRQ%\B2k^9I;S7oh*<DXc`_Z<3Z&He&Sh,0US[g(,YY#YSZOc\]MaNOImO-;gDdSY1'RJha#3gQE9=%BU-I2@"B_Y1p8bHPlh2`aW]mu=BMVCVgljm:M)GEo2<6_<H?I`&AF)jY*]m-s(K/H^$bW;l(ChqiiYjVVFkbMTJt#?Aq7Yc'2H=@%dj[nI41TUror`Ip'p\(%$BjIS;CD^'8s=#uVq8m1#!Tj.FF&t0/7hHQY?C`FW-?AZ[.r/_aV3]j`\=k&!'t.XMB_=Ghq$aVUXMi$%?NhDX4L"-:&>K\T"(:9#(1\g/rT3^d5ebVIM-[e!b31s/qTQ6Xb_aK*'eaW*pro\XaO>):&Q#<hMM]eT4iDT1[co5P/]]QTc9b;f%&7Kb8F]P8i7F6>*ik!l)N-44K,_;/;aU'_1$QOk9r$2b!!E;&\\8\%(8cG$eT%`8uKYt@lmtN$%"m#RCVdE2ZQ=&R]KlN`c$1S6,%AZuTor@Q3m=B@?HF9pH4W'X_=`+";ZC"^?1#(RNLi7&_GIrj5I>A"CuT-3Ta9pVo/^F\=L,c!u8@#q$L<00i_8eHlga5:.gnUJtf%5`/Z3MSA-.Q^RAg4<BOg(tf6$c\n#<?=`^oh:$Ejs0+*L0:oXB?@ec=iuoV87U]D]SkXbZ,an3;N6fK2.03(8),.,3%&Uj.)DSNT%OM_k(=H6DqQqY4b]MHg,cEAh>1YE\?GR[,oR>t'YMW-G\WH5+Mf-,18mtIMe_2Fpu0Sm%jpnUIl?&4[=@3=h8:ZE1#!fE/[Ep/N-%M*XHY_14B%7d7tpq8Ot#h.Zr7_E%e#,\I`Ybe]3@!qLmMm<dCu&YdK13)A\p&X.SU6.qB`j(IYGpG.q*o?9&%Xb\:L.;r]E_R14P%#2n1Uib]MWi)Cs,'9k^%]14_<EL2t:"Wn<*.8BpN7]MV"H4e-uCKr;$iV%fsO<(Zinj)cFpQ2UH8Mq9%B#[qNRtAOM9:Q%$9=K]'%0Ni-a;.`Xt`Kb,%[9O61o:7G]g!N&mK[Fj9!uY=b.e5a0P>!hEnHW$G',l+d)VoVjY.,=5#2\s)*0#9tecbR4Ep)_/>8*\O^KZ8?%<ls_A;il#0VAWCRpQ%#-'&Pu@UTVc#/+^#8Y:!u9(%-#)76XG&Dn]VXr1Ga6:u1`@6fEisO=-FZQIJQt`QJG]-85%W%'p\=l!6Y)%'-(mk4?YjFk79ddr/C+1_`i;.3I]i06%=0.i3#*&Y^i7k+@OfiLjT"_dI,I.,SF`*"rd(OVTASQJqNF.cW-GV[SE,YjJ5e0`5_.m%0A#\S"]s8o1dJYRISJ6$X0Zk<BRu'"7Km?$0WJs_j$D?>P&4US`,l+lQ^537LC@1JS(1pbBFWjL8u>VC,j$s3:+p`FB*JK7%rY>h%M]5-3[sPY_;E\a:J4W0$)RDG9IBKgj;HaFu-ERMIB?q[;N9m&p>amE0(?eG[,8tVgMkr.d*5+Bj.%>#0Tg`)d3kkC#.N;@ZUj+h4%-KoQ5HNMm&d?t"+iu4!c\_7f-A9baPmI@2n;>?"\f$Up:35D86H]VY;mr*kR_18%AWCo#D@2JOqWPe@i$T#3[?E_-NaQ3bHd'9/L%h$MPc;<YJq$H2L"rjj[_BoRom#J&Cp1:12WQ^u3tc#qeLgfd_AZtU]b=VD8)J,;4CBQV?S@A$=..B$NY[EX7?.:!(,59sdSQ##l2%D</XW!8EKfm*Jk>D!^-F@bL^="FTPKl\?08D376<%%Dg3mn=/%RNX_YB?Ip3#qArE6oQr-c/eP.==qXF[)q5b]fdsFo`0thWW4Fq%rOb@F.9,02BG2G<J`51'73LG8V,HlX>SAD=CU4S[HFgASo^DbZauEE8F0o"Jq-/WJn@lu,(Phpu-n_-VP//cs(&WlO&]]4#p@9:d%)5V6X=W,XO#f4H!&OSH!c-]:i$fW46na-=9Te^gDk[J$\R+@!7L4!djADjifNA5VM3HD.$%kIP+D=&+-]s+1%G#^H@F@D6dq[$WF%&?(''-MZBRDIDB2WIPV8/c\LcJ-GTsl\%N>79>n"ZQ-i>fO12V/P''1'8[$-[JK3Z_h%_\VH&1l^SSV"jjq5C[]?[)5N_Qe6.3WB%'\\,FH0gDnfLVL"!d9Y,mA-<7(<L0*$^+P7dO+<Ndmi&r[^`iV.aUpo;f3%<C:bDMk9V]"UiIKc,8c3^+@BfX7'Co7Z`K&j9I(gm%-]`4UcB/:;WX<]2F.-'B;33RUE!DSM.>CcW][^STfqQ<Y?`U3[q;W;ViqW=RMYm!bAaGC*Z=@AP!rnbI7[Efk4+7Q310IGP\S@TZ%?`b6t^i::H<XtO%Fa95*/2US=T_*-P2TKbof$D>WHX4JdZP+O9#ZeBpOo)&<.SAWDOc<5SI>nVc<DH?ElW3i[gKpH'eh1W,&=p4'%kY,E8Pi$tA(Q*p+rpVYDk*4@r%tr.^*F>j(V%8L?$)<:'9F%F$lN_^6#1ru>EWbl@b"-NBm;/^FJO3q!8Fa)9^^>9FfgZ(EjS?h#%hUCaQTKq@V5ah&e+U+=`F;]YYNXU6F(1j+j+H?iK7Q+s=j*D5)=5r)k#,L7qqWpoOR4=a/C\8L\L4Rch0-Xk<9!`r*OWAIX9P4\H%N2`2L?O0<==q[Nnlq*G'&J6Rob_Y1ib$^ID3b?Qi5j,a<%#e;1K9Z[,Q/W^aLdZ:&oj's0G/oB!$Q.o`&4VP-ogW!.7.F++""7'l%Ce4InZD72i7/>@q:0i&,0Hn^p(A*R/8mOCOh2t,`5YihB-:mKEjM7O]^MpRLe(UB[j-U((OjU4##05E8*!Q+go,VqH;LDm2E=aef%^iC+3hflee(*.eK,Vop3[&SX:2+]A3oOZ_hPf&K29I[e,8O;<Z3%95<M&W96m$(CSd5`qSJA>f[KOCGdVdXA;)N]$RAaZfjr^75I%).8G!T!ZX+;VhRQ1X3bZOeW+9(Ba1YN?S%u>^tRW9X?VmKcq)Z[)t,R#EZ8.7WoN8:)gTR^k/Y1fogo("a!Bf"E\r+G+'UBBCjf<%5/CmO^(TB71h^?,&gj2@2tid4c>I0n%&Kt'3.8P*ok&n*;0J-L@Y#5%.ksaqm%Qn3:Emb!;3%.h1?8a]L<.H-BpI\AM&`EE3K^)h%TQ=k/VBdOj)mdb,o)^!'kmuk.F#D-Aj>o/pM-T,I,W'[Dmg=WA""<N%*&B&c3I(3.8%oq6Yh;Z9`/sX4qp[G1:3N.W#P,]O3E0Ys%(F`857GT3!`_`"$.tNmOSk+_C2.TRceS-7DR@U"gU(Rn@aNM4^6kQS9P5J@K?`g`Mo>"qUAsYOBE\f!ZN(ruZe-NO1%CY(eSJ-+>%_#Kh^7/K+AS@d*.j=%k1Ef)\&K6[)d/GW*j-VJ(&CG!!/nKYp>(;+&qK7QV5$r3<2driE^_3MNXqVLH7QT'+qI$9'TlJ7Nq%t?c,%]m=gBGPBq2S&aui*e(gc52Ekss7#pGmDHP[YjWW_*P^CDH$Xl<gFl?`\*nhCjUWKo'.nZWpXQ`[hu!YROD8Y~>%AI9_PrivateDataEnd